{
  "version": 3,
  "sources": ["three-ns:three", "../node_modules/dat.gui/src/dat/color/toString.js", "../node_modules/dat.gui/src/dat/utils/common.js", "../node_modules/dat.gui/src/dat/color/interpret.js", "../node_modules/dat.gui/src/dat/color/math.js", "../node_modules/dat.gui/src/dat/color/Color.js", "../node_modules/dat.gui/src/dat/controllers/Controller.js", "../node_modules/dat.gui/src/dat/dom/dom.js", "../node_modules/dat.gui/src/dat/controllers/BooleanController.js", "../node_modules/dat.gui/src/dat/controllers/OptionController.js", "../node_modules/dat.gui/src/dat/controllers/StringController.js", "../node_modules/dat.gui/src/dat/controllers/NumberController.js", "../node_modules/dat.gui/src/dat/controllers/NumberControllerBox.js", "../node_modules/dat.gui/src/dat/controllers/NumberControllerSlider.js", "../node_modules/dat.gui/src/dat/controllers/FunctionController.js", "../node_modules/dat.gui/src/dat/controllers/ColorController.js", "../node_modules/dat.gui/src/dat/utils/css.js", "../node_modules/dat.gui/src/dat/gui/saveDialogue.html.js", "../node_modules/dat.gui/src/dat/controllers/ControllerFactory.js", "../node_modules/dat.gui/src/dat/utils/requestAnimationFrame.js", "../node_modules/dat.gui/src/dat/dom/CenteredDiv.js", "../node_modules/dat.gui/src/dat/gui/GUI.js", "../node_modules/dat.gui/src/dat/index.js", "../node_modules/dat.gui/src/dat/color/toString.js", "../node_modules/dat.gui/src/dat/utils/common.js", "../node_modules/dat.gui/src/dat/color/interpret.js", "../node_modules/dat.gui/src/dat/color/math.js", "../node_modules/dat.gui/src/dat/color/Color.js", "../node_modules/dat.gui/src/dat/controllers/Controller.js", "../node_modules/dat.gui/src/dat/dom/dom.js", "../node_modules/dat.gui/src/dat/controllers/BooleanController.js", "../node_modules/dat.gui/src/dat/controllers/OptionController.js", "../node_modules/dat.gui/src/dat/controllers/StringController.js", "../node_modules/dat.gui/src/dat/controllers/NumberController.js", "../node_modules/dat.gui/src/dat/controllers/NumberControllerBox.js", "../node_modules/dat.gui/src/dat/controllers/NumberControllerSlider.js", "../node_modules/dat.gui/src/dat/controllers/FunctionController.js", "../node_modules/dat.gui/src/dat/controllers/ColorController.js", "../node_modules/dat.gui/src/dat/utils/css.js", "../node_modules/dat.gui/src/dat/gui/saveDialogue.html.js", "../node_modules/dat.gui/src/dat/controllers/ControllerFactory.js", "../node_modules/dat.gui/src/dat/utils/requestAnimationFrame.js", "../node_modules/dat.gui/src/dat/dom/CenteredDiv.js", "../node_modules/dat.gui/src/dat/gui/GUI.js", "../node_modules/dat.gui/src/dat/index.js", "../src/common/tweakables.ts", "../src/common/constants.ts", "../src/common/constants.ts", "../src/common/osc_util.ts", "../src/renderer/renderer_comms.ts", "../src/renderer/params.ts", "../src/renderer/video_state.ts", "../src/renderer/index.tsx"],
  "sourcesContent": ["export const ACESFilmicToneMapping = window.THREE.ACESFilmicToneMapping\nexport const AddEquation = window.THREE.AddEquation\nexport const AddOperation = window.THREE.AddOperation\nexport const AdditiveAnimationBlendMode = window.THREE.AdditiveAnimationBlendMode\nexport const AdditiveBlending = window.THREE.AdditiveBlending\nexport const AlphaFormat = window.THREE.AlphaFormat\nexport const AlwaysDepth = window.THREE.AlwaysDepth\nexport const AlwaysStencilFunc = window.THREE.AlwaysStencilFunc\nexport const AmbientLight = window.THREE.AmbientLight\nexport const AmbientLightProbe = window.THREE.AmbientLightProbe\nexport const AnimationClip = window.THREE.AnimationClip\nexport const AnimationLoader = window.THREE.AnimationLoader\nexport const AnimationMixer = window.THREE.AnimationMixer\nexport const AnimationObjectGroup = window.THREE.AnimationObjectGroup\nexport const AnimationUtils = window.THREE.AnimationUtils\nexport const ArcCurve = window.THREE.ArcCurve\nexport const ArrayCamera = window.THREE.ArrayCamera\nexport const ArrowHelper = window.THREE.ArrowHelper\nexport const Audio = window.THREE.Audio\nexport const AudioAnalyser = window.THREE.AudioAnalyser\nexport const AudioContext = window.THREE.AudioContext\nexport const AudioListener = window.THREE.AudioListener\nexport const AudioLoader = window.THREE.AudioLoader\nexport const AxesHelper = window.THREE.AxesHelper\nexport const AxisHelper = window.THREE.AxisHelper\nexport const BackSide = window.THREE.BackSide\nexport const BasicDepthPacking = window.THREE.BasicDepthPacking\nexport const BasicShadowMap = window.THREE.BasicShadowMap\nexport const BinaryTextureLoader = window.THREE.BinaryTextureLoader\nexport const Bone = window.THREE.Bone\nexport const BooleanKeyframeTrack = window.THREE.BooleanKeyframeTrack\nexport const BoundingBoxHelper = window.THREE.BoundingBoxHelper\nexport const Box2 = window.THREE.Box2\nexport const Box3 = window.THREE.Box3\nexport const Box3Helper = window.THREE.Box3Helper\nexport const BoxBufferGeometry = window.THREE.BoxBufferGeometry\nexport const BoxGeometry = window.THREE.BoxGeometry\nexport const BoxHelper = window.THREE.BoxHelper\nexport const BufferAttribute = window.THREE.BufferAttribute\nexport const BufferGeometry = window.THREE.BufferGeometry\nexport const BufferGeometryLoader = window.THREE.BufferGeometryLoader\nexport const ByteType = window.THREE.ByteType\nexport const Cache = window.THREE.Cache\nexport const Camera = window.THREE.Camera\nexport const CameraHelper = window.THREE.CameraHelper\nexport const CanvasRenderer = window.THREE.CanvasRenderer\nexport const CanvasTexture = window.THREE.CanvasTexture\nexport const CatmullRomCurve3 = window.THREE.CatmullRomCurve3\nexport const CineonToneMapping = window.THREE.CineonToneMapping\nexport const CircleBufferGeometry = window.THREE.CircleBufferGeometry\nexport const CircleGeometry = window.THREE.CircleGeometry\nexport const ClampToEdgeWrapping = window.THREE.ClampToEdgeWrapping\nexport const Clock = window.THREE.Clock\nexport const ClosedSplineCurve3 = window.THREE.ClosedSplineCurve3\nexport const Color = window.THREE.Color\nexport const ColorKeyframeTrack = window.THREE.ColorKeyframeTrack\nexport const CompressedTexture = window.THREE.CompressedTexture\nexport const CompressedTextureLoader = window.THREE.CompressedTextureLoader\nexport const ConeBufferGeometry = window.THREE.ConeBufferGeometry\nexport const ConeGeometry = window.THREE.ConeGeometry\nexport const CubeCamera = window.THREE.CubeCamera\nexport const CubeGeometry = window.THREE.CubeGeometry\nexport const CubeReflectionMapping = window.THREE.CubeReflectionMapping\nexport const CubeRefractionMapping = window.THREE.CubeRefractionMapping\nexport const CubeTexture = window.THREE.CubeTexture\nexport const CubeTextureLoader = window.THREE.CubeTextureLoader\nexport const CubeUVReflectionMapping = window.THREE.CubeUVReflectionMapping\nexport const CubeUVRefractionMapping = window.THREE.CubeUVRefractionMapping\nexport const CubicBezierCurve = window.THREE.CubicBezierCurve\nexport const CubicBezierCurve3 = window.THREE.CubicBezierCurve3\nexport const CubicInterpolant = window.THREE.CubicInterpolant\nexport const CullFaceBack = window.THREE.CullFaceBack\nexport const CullFaceFront = window.THREE.CullFaceFront\nexport const CullFaceFrontBack = window.THREE.CullFaceFrontBack\nexport const CullFaceNone = window.THREE.CullFaceNone\nexport const Curve = window.THREE.Curve\nexport const CurvePath = window.THREE.CurvePath\nexport const CustomBlending = window.THREE.CustomBlending\nexport const CustomToneMapping = window.THREE.CustomToneMapping\nexport const CylinderBufferGeometry = window.THREE.CylinderBufferGeometry\nexport const CylinderGeometry = window.THREE.CylinderGeometry\nexport const Cylindrical = window.THREE.Cylindrical\nexport const DataTexture = window.THREE.DataTexture\nexport const DataTexture2DArray = window.THREE.DataTexture2DArray\nexport const DataTexture3D = window.THREE.DataTexture3D\nexport const DataTextureLoader = window.THREE.DataTextureLoader\nexport const DataUtils = window.THREE.DataUtils\nexport const DecrementStencilOp = window.THREE.DecrementStencilOp\nexport const DecrementWrapStencilOp = window.THREE.DecrementWrapStencilOp\nexport const DefaultLoadingManager = window.THREE.DefaultLoadingManager\nexport const DepthFormat = window.THREE.DepthFormat\nexport const DepthStencilFormat = window.THREE.DepthStencilFormat\nexport const DepthTexture = window.THREE.DepthTexture\nexport const DirectionalLight = window.THREE.DirectionalLight\nexport const DirectionalLightHelper = window.THREE.DirectionalLightHelper\nexport const DiscreteInterpolant = window.THREE.DiscreteInterpolant\nexport const DodecahedronBufferGeometry = window.THREE.DodecahedronBufferGeometry\nexport const DodecahedronGeometry = window.THREE.DodecahedronGeometry\nexport const DoubleSide = window.THREE.DoubleSide\nexport const DstAlphaFactor = window.THREE.DstAlphaFactor\nexport const DstColorFactor = window.THREE.DstColorFactor\nexport const DynamicBufferAttribute = window.THREE.DynamicBufferAttribute\nexport const DynamicCopyUsage = window.THREE.DynamicCopyUsage\nexport const DynamicDrawUsage = window.THREE.DynamicDrawUsage\nexport const DynamicReadUsage = window.THREE.DynamicReadUsage\nexport const EdgesGeometry = window.THREE.EdgesGeometry\nexport const EdgesHelper = window.THREE.EdgesHelper\nexport const EllipseCurve = window.THREE.EllipseCurve\nexport const EqualDepth = window.THREE.EqualDepth\nexport const EqualStencilFunc = window.THREE.EqualStencilFunc\nexport const EquirectangularReflectionMapping = window.THREE.EquirectangularReflectionMapping\nexport const EquirectangularRefractionMapping = window.THREE.EquirectangularRefractionMapping\nexport const Euler = window.THREE.Euler\nexport const EventDispatcher = window.THREE.EventDispatcher\nexport const ExtrudeBufferGeometry = window.THREE.ExtrudeBufferGeometry\nexport const ExtrudeGeometry = window.THREE.ExtrudeGeometry\nexport const Face3 = window.THREE.Face3\nexport const Face4 = window.THREE.Face4\nexport const FaceColors = window.THREE.FaceColors\nexport const FileLoader = window.THREE.FileLoader\nexport const FlatShading = window.THREE.FlatShading\nexport const Float16BufferAttribute = window.THREE.Float16BufferAttribute\nexport const Float32Attribute = window.THREE.Float32Attribute\nexport const Float32BufferAttribute = window.THREE.Float32BufferAttribute\nexport const Float64Attribute = window.THREE.Float64Attribute\nexport const Float64BufferAttribute = window.THREE.Float64BufferAttribute\nexport const FloatType = window.THREE.FloatType\nexport const Fog = window.THREE.Fog\nexport const FogExp2 = window.THREE.FogExp2\nexport const Font = window.THREE.Font\nexport const FontLoader = window.THREE.FontLoader\nexport const FrontSide = window.THREE.FrontSide\nexport const Frustum = window.THREE.Frustum\nexport const GLBufferAttribute = window.THREE.GLBufferAttribute\nexport const GLSL1 = window.THREE.GLSL1\nexport const GLSL3 = window.THREE.GLSL3\nexport const GammaEncoding = window.THREE.GammaEncoding\nexport const Geometry = window.THREE.Geometry\nexport const GeometryUtils = window.THREE.GeometryUtils\nexport const GreaterDepth = window.THREE.GreaterDepth\nexport const GreaterEqualDepth = window.THREE.GreaterEqualDepth\nexport const GreaterEqualStencilFunc = window.THREE.GreaterEqualStencilFunc\nexport const GreaterStencilFunc = window.THREE.GreaterStencilFunc\nexport const GridHelper = window.THREE.GridHelper\nexport const Group = window.THREE.Group\nexport const HalfFloatType = window.THREE.HalfFloatType\nexport const HemisphereLight = window.THREE.HemisphereLight\nexport const HemisphereLightHelper = window.THREE.HemisphereLightHelper\nexport const HemisphereLightProbe = window.THREE.HemisphereLightProbe\nexport const IcosahedronBufferGeometry = window.THREE.IcosahedronBufferGeometry\nexport const IcosahedronGeometry = window.THREE.IcosahedronGeometry\nexport const ImageBitmapLoader = window.THREE.ImageBitmapLoader\nexport const ImageLoader = window.THREE.ImageLoader\nexport const ImageUtils = window.THREE.ImageUtils\nexport const ImmediateRenderObject = window.THREE.ImmediateRenderObject\nexport const IncrementStencilOp = window.THREE.IncrementStencilOp\nexport const IncrementWrapStencilOp = window.THREE.IncrementWrapStencilOp\nexport const InstancedBufferAttribute = window.THREE.InstancedBufferAttribute\nexport const InstancedBufferGeometry = window.THREE.InstancedBufferGeometry\nexport const InstancedInterleavedBuffer = window.THREE.InstancedInterleavedBuffer\nexport const InstancedMesh = window.THREE.InstancedMesh\nexport const Int16Attribute = window.THREE.Int16Attribute\nexport const Int16BufferAttribute = window.THREE.Int16BufferAttribute\nexport const Int32Attribute = window.THREE.Int32Attribute\nexport const Int32BufferAttribute = window.THREE.Int32BufferAttribute\nexport const Int8Attribute = window.THREE.Int8Attribute\nexport const Int8BufferAttribute = window.THREE.Int8BufferAttribute\nexport const IntType = window.THREE.IntType\nexport const InterleavedBuffer = window.THREE.InterleavedBuffer\nexport const InterleavedBufferAttribute = window.THREE.InterleavedBufferAttribute\nexport const Interpolant = window.THREE.Interpolant\nexport const InterpolateDiscrete = window.THREE.InterpolateDiscrete\nexport const InterpolateLinear = window.THREE.InterpolateLinear\nexport const InterpolateSmooth = window.THREE.InterpolateSmooth\nexport const InvertStencilOp = window.THREE.InvertStencilOp\nexport const JSONLoader = window.THREE.JSONLoader\nexport const KeepStencilOp = window.THREE.KeepStencilOp\nexport const KeyframeTrack = window.THREE.KeyframeTrack\nexport const LOD = window.THREE.LOD\nexport const LatheBufferGeometry = window.THREE.LatheBufferGeometry\nexport const LatheGeometry = window.THREE.LatheGeometry\nexport const Layers = window.THREE.Layers\nexport const LensFlare = window.THREE.LensFlare\nexport const LessDepth = window.THREE.LessDepth\nexport const LessEqualDepth = window.THREE.LessEqualDepth\nexport const LessEqualStencilFunc = window.THREE.LessEqualStencilFunc\nexport const LessStencilFunc = window.THREE.LessStencilFunc\nexport const Light = window.THREE.Light\nexport const LightProbe = window.THREE.LightProbe\nexport const Line = window.THREE.Line\nexport const Line3 = window.THREE.Line3\nexport const LineBasicMaterial = window.THREE.LineBasicMaterial\nexport const LineCurve = window.THREE.LineCurve\nexport const LineCurve3 = window.THREE.LineCurve3\nexport const LineDashedMaterial = window.THREE.LineDashedMaterial\nexport const LineLoop = window.THREE.LineLoop\nexport const LinePieces = window.THREE.LinePieces\nexport const LineSegments = window.THREE.LineSegments\nexport const LineStrip = window.THREE.LineStrip\nexport const LinearEncoding = window.THREE.LinearEncoding\nexport const LinearFilter = window.THREE.LinearFilter\nexport const LinearInterpolant = window.THREE.LinearInterpolant\nexport const LinearMipMapLinearFilter = window.THREE.LinearMipMapLinearFilter\nexport const LinearMipMapNearestFilter = window.THREE.LinearMipMapNearestFilter\nexport const LinearMipmapLinearFilter = window.THREE.LinearMipmapLinearFilter\nexport const LinearMipmapNearestFilter = window.THREE.LinearMipmapNearestFilter\nexport const LinearToneMapping = window.THREE.LinearToneMapping\nexport const Loader = window.THREE.Loader\nexport const LoaderUtils = window.THREE.LoaderUtils\nexport const LoadingManager = window.THREE.LoadingManager\nexport const LogLuvEncoding = window.THREE.LogLuvEncoding\nexport const LoopOnce = window.THREE.LoopOnce\nexport const LoopPingPong = window.THREE.LoopPingPong\nexport const LoopRepeat = window.THREE.LoopRepeat\nexport const LuminanceAlphaFormat = window.THREE.LuminanceAlphaFormat\nexport const LuminanceFormat = window.THREE.LuminanceFormat\nexport const MOUSE = window.THREE.MOUSE\nexport const Material = window.THREE.Material\nexport const MaterialLoader = window.THREE.MaterialLoader\nexport const Math = window.THREE.Math\nexport const MathUtils = window.THREE.MathUtils\nexport const Matrix3 = window.THREE.Matrix3\nexport const Matrix4 = window.THREE.Matrix4\nexport const MaxEquation = window.THREE.MaxEquation\nexport const Mesh = window.THREE.Mesh\nexport const MeshBasicMaterial = window.THREE.MeshBasicMaterial\nexport const MeshDepthMaterial = window.THREE.MeshDepthMaterial\nexport const MeshDistanceMaterial = window.THREE.MeshDistanceMaterial\nexport const MeshFaceMaterial = window.THREE.MeshFaceMaterial\nexport const MeshLambertMaterial = window.THREE.MeshLambertMaterial\nexport const MeshMatcapMaterial = window.THREE.MeshMatcapMaterial\nexport const MeshNormalMaterial = window.THREE.MeshNormalMaterial\nexport const MeshPhongMaterial = window.THREE.MeshPhongMaterial\nexport const MeshPhysicalMaterial = window.THREE.MeshPhysicalMaterial\nexport const MeshStandardMaterial = window.THREE.MeshStandardMaterial\nexport const MeshToonMaterial = window.THREE.MeshToonMaterial\nexport const MinEquation = window.THREE.MinEquation\nexport const MirroredRepeatWrapping = window.THREE.MirroredRepeatWrapping\nexport const MixOperation = window.THREE.MixOperation\nexport const MultiMaterial = window.THREE.MultiMaterial\nexport const MultiplyBlending = window.THREE.MultiplyBlending\nexport const MultiplyOperation = window.THREE.MultiplyOperation\nexport const NearestFilter = window.THREE.NearestFilter\nexport const NearestMipMapLinearFilter = window.THREE.NearestMipMapLinearFilter\nexport const NearestMipMapNearestFilter = window.THREE.NearestMipMapNearestFilter\nexport const NearestMipmapLinearFilter = window.THREE.NearestMipmapLinearFilter\nexport const NearestMipmapNearestFilter = window.THREE.NearestMipmapNearestFilter\nexport const NeverDepth = window.THREE.NeverDepth\nexport const NeverStencilFunc = window.THREE.NeverStencilFunc\nexport const NoBlending = window.THREE.NoBlending\nexport const NoColors = window.THREE.NoColors\nexport const NoToneMapping = window.THREE.NoToneMapping\nexport const NormalAnimationBlendMode = window.THREE.NormalAnimationBlendMode\nexport const NormalBlending = window.THREE.NormalBlending\nexport const NotEqualDepth = window.THREE.NotEqualDepth\nexport const NotEqualStencilFunc = window.THREE.NotEqualStencilFunc\nexport const NumberKeyframeTrack = window.THREE.NumberKeyframeTrack\nexport const Object3D = window.THREE.Object3D\nexport const ObjectLoader = window.THREE.ObjectLoader\nexport const ObjectSpaceNormalMap = window.THREE.ObjectSpaceNormalMap\nexport const OctahedronBufferGeometry = window.THREE.OctahedronBufferGeometry\nexport const OctahedronGeometry = window.THREE.OctahedronGeometry\nexport const OneFactor = window.THREE.OneFactor\nexport const OneMinusDstAlphaFactor = window.THREE.OneMinusDstAlphaFactor\nexport const OneMinusDstColorFactor = window.THREE.OneMinusDstColorFactor\nexport const OneMinusSrcAlphaFactor = window.THREE.OneMinusSrcAlphaFactor\nexport const OneMinusSrcColorFactor = window.THREE.OneMinusSrcColorFactor\nexport const OrthographicCamera = window.THREE.OrthographicCamera\nexport const PCFShadowMap = window.THREE.PCFShadowMap\nexport const PCFSoftShadowMap = window.THREE.PCFSoftShadowMap\nexport const PMREMGenerator = window.THREE.PMREMGenerator\nexport const ParametricBufferGeometry = window.THREE.ParametricBufferGeometry\nexport const ParametricGeometry = window.THREE.ParametricGeometry\nexport const Particle = window.THREE.Particle\nexport const ParticleBasicMaterial = window.THREE.ParticleBasicMaterial\nexport const ParticleSystem = window.THREE.ParticleSystem\nexport const ParticleSystemMaterial = window.THREE.ParticleSystemMaterial\nexport const Path = window.THREE.Path\nexport const PerspectiveCamera = window.THREE.PerspectiveCamera\nexport const Plane = window.THREE.Plane\nexport const PlaneBufferGeometry = window.THREE.PlaneBufferGeometry\nexport const PlaneGeometry = window.THREE.PlaneGeometry\nexport const PlaneHelper = window.THREE.PlaneHelper\nexport const PointCloud = window.THREE.PointCloud\nexport const PointCloudMaterial = window.THREE.PointCloudMaterial\nexport const PointLight = window.THREE.PointLight\nexport const PointLightHelper = window.THREE.PointLightHelper\nexport const Points = window.THREE.Points\nexport const PointsMaterial = window.THREE.PointsMaterial\nexport const PolarGridHelper = window.THREE.PolarGridHelper\nexport const PolyhedronBufferGeometry = window.THREE.PolyhedronBufferGeometry\nexport const PolyhedronGeometry = window.THREE.PolyhedronGeometry\nexport const PositionalAudio = window.THREE.PositionalAudio\nexport const PropertyBinding = window.THREE.PropertyBinding\nexport const PropertyMixer = window.THREE.PropertyMixer\nexport const QuadraticBezierCurve = window.THREE.QuadraticBezierCurve\nexport const QuadraticBezierCurve3 = window.THREE.QuadraticBezierCurve3\nexport const Quaternion = window.THREE.Quaternion\nexport const QuaternionKeyframeTrack = window.THREE.QuaternionKeyframeTrack\nexport const QuaternionLinearInterpolant = window.THREE.QuaternionLinearInterpolant\nexport const REVISION = window.THREE.REVISION\nexport const RGBADepthPacking = window.THREE.RGBADepthPacking\nexport const RGBAFormat = window.THREE.RGBAFormat\nexport const RGBAIntegerFormat = window.THREE.RGBAIntegerFormat\nexport const RGBA_ASTC_10x10_Format = window.THREE.RGBA_ASTC_10x10_Format\nexport const RGBA_ASTC_10x5_Format = window.THREE.RGBA_ASTC_10x5_Format\nexport const RGBA_ASTC_10x6_Format = window.THREE.RGBA_ASTC_10x6_Format\nexport const RGBA_ASTC_10x8_Format = window.THREE.RGBA_ASTC_10x8_Format\nexport const RGBA_ASTC_12x10_Format = window.THREE.RGBA_ASTC_12x10_Format\nexport const RGBA_ASTC_12x12_Format = window.THREE.RGBA_ASTC_12x12_Format\nexport const RGBA_ASTC_4x4_Format = window.THREE.RGBA_ASTC_4x4_Format\nexport const RGBA_ASTC_5x4_Format = window.THREE.RGBA_ASTC_5x4_Format\nexport const RGBA_ASTC_5x5_Format = window.THREE.RGBA_ASTC_5x5_Format\nexport const RGBA_ASTC_6x5_Format = window.THREE.RGBA_ASTC_6x5_Format\nexport const RGBA_ASTC_6x6_Format = window.THREE.RGBA_ASTC_6x6_Format\nexport const RGBA_ASTC_8x5_Format = window.THREE.RGBA_ASTC_8x5_Format\nexport const RGBA_ASTC_8x6_Format = window.THREE.RGBA_ASTC_8x6_Format\nexport const RGBA_ASTC_8x8_Format = window.THREE.RGBA_ASTC_8x8_Format\nexport const RGBA_BPTC_Format = window.THREE.RGBA_BPTC_Format\nexport const RGBA_ETC2_EAC_Format = window.THREE.RGBA_ETC2_EAC_Format\nexport const RGBA_PVRTC_2BPPV1_Format = window.THREE.RGBA_PVRTC_2BPPV1_Format\nexport const RGBA_PVRTC_4BPPV1_Format = window.THREE.RGBA_PVRTC_4BPPV1_Format\nexport const RGBA_S3TC_DXT1_Format = window.THREE.RGBA_S3TC_DXT1_Format\nexport const RGBA_S3TC_DXT3_Format = window.THREE.RGBA_S3TC_DXT3_Format\nexport const RGBA_S3TC_DXT5_Format = window.THREE.RGBA_S3TC_DXT5_Format\nexport const RGBDEncoding = window.THREE.RGBDEncoding\nexport const RGBEEncoding = window.THREE.RGBEEncoding\nexport const RGBEFormat = window.THREE.RGBEFormat\nexport const RGBFormat = window.THREE.RGBFormat\nexport const RGBIntegerFormat = window.THREE.RGBIntegerFormat\nexport const RGBM16Encoding = window.THREE.RGBM16Encoding\nexport const RGBM7Encoding = window.THREE.RGBM7Encoding\nexport const RGB_ETC1_Format = window.THREE.RGB_ETC1_Format\nexport const RGB_ETC2_Format = window.THREE.RGB_ETC2_Format\nexport const RGB_PVRTC_2BPPV1_Format = window.THREE.RGB_PVRTC_2BPPV1_Format\nexport const RGB_PVRTC_4BPPV1_Format = window.THREE.RGB_PVRTC_4BPPV1_Format\nexport const RGB_S3TC_DXT1_Format = window.THREE.RGB_S3TC_DXT1_Format\nexport const RGFormat = window.THREE.RGFormat\nexport const RGIntegerFormat = window.THREE.RGIntegerFormat\nexport const RawShaderMaterial = window.THREE.RawShaderMaterial\nexport const Ray = window.THREE.Ray\nexport const Raycaster = window.THREE.Raycaster\nexport const RectAreaLight = window.THREE.RectAreaLight\nexport const RedFormat = window.THREE.RedFormat\nexport const RedIntegerFormat = window.THREE.RedIntegerFormat\nexport const ReinhardToneMapping = window.THREE.ReinhardToneMapping\nexport const RepeatWrapping = window.THREE.RepeatWrapping\nexport const ReplaceStencilOp = window.THREE.ReplaceStencilOp\nexport const ReverseSubtractEquation = window.THREE.ReverseSubtractEquation\nexport const RingBufferGeometry = window.THREE.RingBufferGeometry\nexport const RingGeometry = window.THREE.RingGeometry\nexport const SRGB8_ALPHA8_ASTC_10x10_Format = window.THREE.SRGB8_ALPHA8_ASTC_10x10_Format\nexport const SRGB8_ALPHA8_ASTC_10x5_Format = window.THREE.SRGB8_ALPHA8_ASTC_10x5_Format\nexport const SRGB8_ALPHA8_ASTC_10x6_Format = window.THREE.SRGB8_ALPHA8_ASTC_10x6_Format\nexport const SRGB8_ALPHA8_ASTC_10x8_Format = window.THREE.SRGB8_ALPHA8_ASTC_10x8_Format\nexport const SRGB8_ALPHA8_ASTC_12x10_Format = window.THREE.SRGB8_ALPHA8_ASTC_12x10_Format\nexport const SRGB8_ALPHA8_ASTC_12x12_Format = window.THREE.SRGB8_ALPHA8_ASTC_12x12_Format\nexport const SRGB8_ALPHA8_ASTC_4x4_Format = window.THREE.SRGB8_ALPHA8_ASTC_4x4_Format\nexport const SRGB8_ALPHA8_ASTC_5x4_Format = window.THREE.SRGB8_ALPHA8_ASTC_5x4_Format\nexport const SRGB8_ALPHA8_ASTC_5x5_Format = window.THREE.SRGB8_ALPHA8_ASTC_5x5_Format\nexport const SRGB8_ALPHA8_ASTC_6x5_Format = window.THREE.SRGB8_ALPHA8_ASTC_6x5_Format\nexport const SRGB8_ALPHA8_ASTC_6x6_Format = window.THREE.SRGB8_ALPHA8_ASTC_6x6_Format\nexport const SRGB8_ALPHA8_ASTC_8x5_Format = window.THREE.SRGB8_ALPHA8_ASTC_8x5_Format\nexport const SRGB8_ALPHA8_ASTC_8x6_Format = window.THREE.SRGB8_ALPHA8_ASTC_8x6_Format\nexport const SRGB8_ALPHA8_ASTC_8x8_Format = window.THREE.SRGB8_ALPHA8_ASTC_8x8_Format\nexport const Scene = window.THREE.Scene\nexport const SceneUtils = window.THREE.SceneUtils\nexport const ShaderChunk = window.THREE.ShaderChunk\nexport const ShaderLib = window.THREE.ShaderLib\nexport const ShaderMaterial = window.THREE.ShaderMaterial\nexport const ShadowMaterial = window.THREE.ShadowMaterial\nexport const Shape = window.THREE.Shape\nexport const ShapeBufferGeometry = window.THREE.ShapeBufferGeometry\nexport const ShapeGeometry = window.THREE.ShapeGeometry\nexport const ShapePath = window.THREE.ShapePath\nexport const ShapeUtils = window.THREE.ShapeUtils\nexport const ShortType = window.THREE.ShortType\nexport const Skeleton = window.THREE.Skeleton\nexport const SkeletonHelper = window.THREE.SkeletonHelper\nexport const SkinnedMesh = window.THREE.SkinnedMesh\nexport const SmoothShading = window.THREE.SmoothShading\nexport const Sphere = window.THREE.Sphere\nexport const SphereBufferGeometry = window.THREE.SphereBufferGeometry\nexport const SphereGeometry = window.THREE.SphereGeometry\nexport const Spherical = window.THREE.Spherical\nexport const SphericalHarmonics3 = window.THREE.SphericalHarmonics3\nexport const Spline = window.THREE.Spline\nexport const SplineCurve = window.THREE.SplineCurve\nexport const SplineCurve3 = window.THREE.SplineCurve3\nexport const SpotLight = window.THREE.SpotLight\nexport const SpotLightHelper = window.THREE.SpotLightHelper\nexport const Sprite = window.THREE.Sprite\nexport const SpriteMaterial = window.THREE.SpriteMaterial\nexport const SrcAlphaFactor = window.THREE.SrcAlphaFactor\nexport const SrcAlphaSaturateFactor = window.THREE.SrcAlphaSaturateFactor\nexport const SrcColorFactor = window.THREE.SrcColorFactor\nexport const StaticCopyUsage = window.THREE.StaticCopyUsage\nexport const StaticDrawUsage = window.THREE.StaticDrawUsage\nexport const StaticReadUsage = window.THREE.StaticReadUsage\nexport const StereoCamera = window.THREE.StereoCamera\nexport const StreamCopyUsage = window.THREE.StreamCopyUsage\nexport const StreamDrawUsage = window.THREE.StreamDrawUsage\nexport const StreamReadUsage = window.THREE.StreamReadUsage\nexport const StringKeyframeTrack = window.THREE.StringKeyframeTrack\nexport const SubtractEquation = window.THREE.SubtractEquation\nexport const SubtractiveBlending = window.THREE.SubtractiveBlending\nexport const TOUCH = window.THREE.TOUCH\nexport const TangentSpaceNormalMap = window.THREE.TangentSpaceNormalMap\nexport const TetrahedronBufferGeometry = window.THREE.TetrahedronBufferGeometry\nexport const TetrahedronGeometry = window.THREE.TetrahedronGeometry\nexport const TextBufferGeometry = window.THREE.TextBufferGeometry\nexport const TextGeometry = window.THREE.TextGeometry\nexport const Texture = window.THREE.Texture\nexport const TextureLoader = window.THREE.TextureLoader\nexport const TorusBufferGeometry = window.THREE.TorusBufferGeometry\nexport const TorusGeometry = window.THREE.TorusGeometry\nexport const TorusKnotBufferGeometry = window.THREE.TorusKnotBufferGeometry\nexport const TorusKnotGeometry = window.THREE.TorusKnotGeometry\nexport const Triangle = window.THREE.Triangle\nexport const TriangleFanDrawMode = window.THREE.TriangleFanDrawMode\nexport const TriangleStripDrawMode = window.THREE.TriangleStripDrawMode\nexport const TrianglesDrawMode = window.THREE.TrianglesDrawMode\nexport const TubeBufferGeometry = window.THREE.TubeBufferGeometry\nexport const TubeGeometry = window.THREE.TubeGeometry\nexport const UVMapping = window.THREE.UVMapping\nexport const Uint16Attribute = window.THREE.Uint16Attribute\nexport const Uint16BufferAttribute = window.THREE.Uint16BufferAttribute\nexport const Uint32Attribute = window.THREE.Uint32Attribute\nexport const Uint32BufferAttribute = window.THREE.Uint32BufferAttribute\nexport const Uint8Attribute = window.THREE.Uint8Attribute\nexport const Uint8BufferAttribute = window.THREE.Uint8BufferAttribute\nexport const Uint8ClampedAttribute = window.THREE.Uint8ClampedAttribute\nexport const Uint8ClampedBufferAttribute = window.THREE.Uint8ClampedBufferAttribute\nexport const Uniform = window.THREE.Uniform\nexport const UniformsLib = window.THREE.UniformsLib\nexport const UniformsUtils = window.THREE.UniformsUtils\nexport const UnsignedByteType = window.THREE.UnsignedByteType\nexport const UnsignedInt248Type = window.THREE.UnsignedInt248Type\nexport const UnsignedIntType = window.THREE.UnsignedIntType\nexport const UnsignedShort4444Type = window.THREE.UnsignedShort4444Type\nexport const UnsignedShort5551Type = window.THREE.UnsignedShort5551Type\nexport const UnsignedShort565Type = window.THREE.UnsignedShort565Type\nexport const UnsignedShortType = window.THREE.UnsignedShortType\nexport const VSMShadowMap = window.THREE.VSMShadowMap\nexport const Vector2 = window.THREE.Vector2\nexport const Vector3 = window.THREE.Vector3\nexport const Vector4 = window.THREE.Vector4\nexport const VectorKeyframeTrack = window.THREE.VectorKeyframeTrack\nexport const Vertex = window.THREE.Vertex\nexport const VertexColors = window.THREE.VertexColors\nexport const VideoTexture = window.THREE.VideoTexture\nexport const WebGL1Renderer = window.THREE.WebGL1Renderer\nexport const WebGLCubeRenderTarget = window.THREE.WebGLCubeRenderTarget\nexport const WebGLMultisampleRenderTarget = window.THREE.WebGLMultisampleRenderTarget\nexport const WebGLRenderTarget = window.THREE.WebGLRenderTarget\nexport const WebGLRenderTargetCube = window.THREE.WebGLRenderTargetCube\nexport const WebGLRenderer = window.THREE.WebGLRenderer\nexport const WebGLUtils = window.THREE.WebGLUtils\nexport const WireframeGeometry = window.THREE.WireframeGeometry\nexport const WireframeHelper = window.THREE.WireframeHelper\nexport const WrapAroundEnding = window.THREE.WrapAroundEnding\nexport const XHRLoader = window.THREE.XHRLoader\nexport const ZeroCurvatureEnding = window.THREE.ZeroCurvatureEnding\nexport const ZeroFactor = window.THREE.ZeroFactor\nexport const ZeroSlopeEnding = window.THREE.ZeroSlopeEnding\nexport const ZeroStencilOp = window.THREE.ZeroStencilOp\nexport const sRGBEncoding = window.THREE.sRGBEncoding", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nexport default function(color, forceCSSHex) {\n  const colorFormat = color.__state.conversionName.toString();\n\n  const r = Math.round(color.r);\n  const g = Math.round(color.g);\n  const b = Math.round(color.b);\n  const a = color.a;\n  const h = Math.round(color.h);\n  const s = color.s.toFixed(1);\n  const v = color.v.toFixed(1);\n\n  if (forceCSSHex || (colorFormat === 'THREE_CHAR_HEX') || (colorFormat === 'SIX_CHAR_HEX')) {\n    let str = color.hex.toString(16);\n    while (str.length < 6) {\n      str = '0' + str;\n    }\n    return '#' + str;\n  } else if (colorFormat === 'CSS_RGB') {\n    return 'rgb(' + r + ',' + g + ',' + b + ')';\n  } else if (colorFormat === 'CSS_RGBA') {\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n  } else if (colorFormat === 'HEX') {\n    return '0x' + color.hex.toString(16);\n  } else if (colorFormat === 'RGB_ARRAY') {\n    return '[' + r + ',' + g + ',' + b + ']';\n  } else if (colorFormat === 'RGBA_ARRAY') {\n    return '[' + r + ',' + g + ',' + b + ',' + a + ']';\n  } else if (colorFormat === 'RGB_OBJ') {\n    return '{r:' + r + ',g:' + g + ',b:' + b + '}';\n  } else if (colorFormat === 'RGBA_OBJ') {\n    return '{r:' + r + ',g:' + g + ',b:' + b + ',a:' + a + '}';\n  } else if (colorFormat === 'HSV_OBJ') {\n    return '{h:' + h + ',s:' + s + ',v:' + v + '}';\n  } else if (colorFormat === 'HSVA_OBJ') {\n    return '{h:' + h + ',s:' + s + ',v:' + v + ',a:' + a + '}';\n  }\n\n  return 'unknown format';\n}\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nconst ARR_EACH = Array.prototype.forEach;\nconst ARR_SLICE = Array.prototype.slice;\n\n/**\n * Band-aid methods for things that should be a lot easier in JavaScript.\n * Implementation and structure inspired by underscore.js\n * http://documentcloud.github.com/underscore/\n */\n\nconst Common = {\n  BREAK: {},\n\n  extend: function(target) {\n    this.each(ARR_SLICE.call(arguments, 1), function(obj) {\n      const keys = this.isObject(obj) ? Object.keys(obj) : [];\n      keys.forEach(function(key) {\n        if (!this.isUndefined(obj[key])) {\n          target[key] = obj[key];\n        }\n      }.bind(this));\n    }, this);\n\n    return target;\n  },\n\n  defaults: function(target) {\n    this.each(ARR_SLICE.call(arguments, 1), function(obj) {\n      const keys = this.isObject(obj) ? Object.keys(obj) : [];\n      keys.forEach(function(key) {\n        if (this.isUndefined(target[key])) {\n          target[key] = obj[key];\n        }\n      }.bind(this));\n    }, this);\n\n    return target;\n  },\n\n  compose: function() {\n    const toCall = ARR_SLICE.call(arguments);\n    return function() {\n      let args = ARR_SLICE.call(arguments);\n      for (let i = toCall.length - 1; i >= 0; i--) {\n        args = [toCall[i].apply(this, args)];\n      }\n      return args[0];\n    };\n  },\n\n  each: function(obj, itr, scope) {\n    if (!obj) {\n      return;\n    }\n\n    if (ARR_EACH && obj.forEach && obj.forEach === ARR_EACH) {\n      obj.forEach(itr, scope);\n    } else if (obj.length === obj.length + 0) { // Is number but not NaN\n      let key;\n      let l;\n      for (key = 0, l = obj.length; key < l; key++) {\n        if (key in obj && itr.call(scope, obj[key], key) === this.BREAK) {\n          return;\n        }\n      }\n    } else {\n      for (const key in obj) {\n        if (itr.call(scope, obj[key], key) === this.BREAK) {\n          return;\n        }\n      }\n    }\n  },\n\n  defer: function(fnc) {\n    setTimeout(fnc, 0);\n  },\n\n  // if the function is called repeatedly, wait until threshold passes until we execute the function\n  debounce: function(func, threshold, callImmediately) {\n    let timeout;\n\n    return function() {\n      const obj = this;\n      const args = arguments;\n      function delayed() {\n        timeout = null;\n        if (!callImmediately) func.apply(obj, args);\n      }\n\n      const callNow = callImmediately || !timeout;\n\n      clearTimeout(timeout);\n      timeout = setTimeout(delayed, threshold);\n\n      if (callNow) {\n        func.apply(obj, args);\n      }\n    };\n  },\n\n  toArray: function(obj) {\n    if (obj.toArray) return obj.toArray();\n    return ARR_SLICE.call(obj);\n  },\n\n  isUndefined: function(obj) {\n    return obj === undefined;\n  },\n\n  isNull: function(obj) {\n    return obj === null;\n  },\n\n  isNaN: function(obj) {\n    return isNaN(obj);\n  },\n\n  isArray: Array.isArray || function(obj) {\n    return obj.constructor === Array;\n  },\n\n  isObject: function(obj) {\n    return obj === Object(obj);\n  },\n\n  isNumber: function(obj) {\n    return obj === obj + 0;\n  },\n\n  isString: function(obj) {\n    return obj === obj + '';\n  },\n\n  isBoolean: function(obj) {\n    return obj === false || obj === true;\n  },\n\n  isFunction: function(obj) {\n    return obj instanceof Function;\n  }\n\n};\n\nexport default Common;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport toString from './toString';\nimport common from '../utils/common';\n\nconst INTERPRETATIONS = [\n  // Strings\n  {\n    litmus: common.isString,\n    conversions: {\n      THREE_CHAR_HEX: {\n        read: function(original) {\n          const test = original.match(/^#([A-F0-9])([A-F0-9])([A-F0-9])$/i);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'HEX',\n            hex: parseInt(\n              '0x' +\n              test[1].toString() + test[1].toString() +\n              test[2].toString() + test[2].toString() +\n              test[3].toString() + test[3].toString(), 0)\n          };\n        },\n\n        write: toString\n      },\n\n      SIX_CHAR_HEX: {\n        read: function(original) {\n          const test = original.match(/^#([A-F0-9]{6})$/i);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'HEX',\n            hex: parseInt('0x' + test[1].toString(), 0)\n          };\n        },\n\n        write: toString\n      },\n\n      CSS_RGB: {\n        read: function(original) {\n          const test = original.match(/^rgb\\(\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*\\)/);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: parseFloat(test[1]),\n            g: parseFloat(test[2]),\n            b: parseFloat(test[3])\n          };\n        },\n\n        write: toString\n      },\n\n      CSS_RGBA: {\n        read: function(original) {\n          const test = original.match(/^rgba\\(\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*\\)/);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: parseFloat(test[1]),\n            g: parseFloat(test[2]),\n            b: parseFloat(test[3]),\n            a: parseFloat(test[4])\n          };\n        },\n\n        write: toString\n      }\n    }\n  },\n\n  // Numbers\n  {\n    litmus: common.isNumber,\n\n    conversions: {\n\n      HEX: {\n        read: function(original) {\n          return {\n            space: 'HEX',\n            hex: original,\n            conversionName: 'HEX'\n          };\n        },\n\n        write: function(color) {\n          return color.hex;\n        }\n      }\n\n    }\n\n  },\n\n  // Arrays\n  {\n    litmus: common.isArray,\n    conversions: {\n      RGB_ARRAY: {\n        read: function(original) {\n          if (original.length !== 3) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: original[0],\n            g: original[1],\n            b: original[2]\n          };\n        },\n\n        write: function(color) {\n          return [color.r, color.g, color.b];\n        }\n      },\n\n      RGBA_ARRAY: {\n        read: function(original) {\n          if (original.length !== 4) return false;\n          return {\n            space: 'RGB',\n            r: original[0],\n            g: original[1],\n            b: original[2],\n            a: original[3]\n          };\n        },\n\n        write: function(color) {\n          return [color.r, color.g, color.b, color.a];\n        }\n      }\n    }\n  },\n\n  // Objects\n  {\n    litmus: common.isObject,\n    conversions: {\n\n      RGBA_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.r) &&\n            common.isNumber(original.g) &&\n            common.isNumber(original.b) &&\n            common.isNumber(original.a)) {\n            return {\n              space: 'RGB',\n              r: original.r,\n              g: original.g,\n              b: original.b,\n              a: original.a\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            r: color.r,\n            g: color.g,\n            b: color.b,\n            a: color.a\n          };\n        }\n      },\n\n      RGB_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.r) &&\n            common.isNumber(original.g) &&\n            common.isNumber(original.b)) {\n            return {\n              space: 'RGB',\n              r: original.r,\n              g: original.g,\n              b: original.b\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            r: color.r,\n            g: color.g,\n            b: color.b\n          };\n        }\n      },\n\n      HSVA_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.h) &&\n            common.isNumber(original.s) &&\n            common.isNumber(original.v) &&\n            common.isNumber(original.a)) {\n            return {\n              space: 'HSV',\n              h: original.h,\n              s: original.s,\n              v: original.v,\n              a: original.a\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            h: color.h,\n            s: color.s,\n            v: color.v,\n            a: color.a\n          };\n        }\n      },\n\n      HSV_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.h) &&\n            common.isNumber(original.s) &&\n            common.isNumber(original.v)) {\n            return {\n              space: 'HSV',\n              h: original.h,\n              s: original.s,\n              v: original.v\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            h: color.h,\n            s: color.s,\n            v: color.v\n          };\n        }\n      }\n    }\n  }\n];\n\nlet result;\nlet toReturn;\n\nconst interpret = function() {\n  toReturn = false;\n\n  const original = arguments.length > 1 ? common.toArray(arguments) : arguments[0];\n  common.each(INTERPRETATIONS, function(family) {\n    if (family.litmus(original)) {\n      common.each(family.conversions, function(conversion, conversionName) {\n        result = conversion.read(original);\n\n        if (toReturn === false && result !== false) {\n          toReturn = result;\n          result.conversionName = conversionName;\n          result.conversion = conversion;\n          return common.BREAK;\n        }\n      });\n\n      return common.BREAK;\n    }\n  });\n\n  return toReturn;\n};\n\nexport default interpret;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nlet tmpComponent;\n\nconst ColorMath = {\n  hsv_to_rgb: function(h, s, v) {\n    const hi = Math.floor(h / 60) % 6;\n\n    const f = h / 60 - Math.floor(h / 60);\n    const p = v * (1.0 - s);\n    const q = v * (1.0 - (f * s));\n    const t = v * (1.0 - ((1.0 - f) * s));\n\n    const c = [\n      [v, t, p],\n      [q, v, p],\n      [p, v, t],\n      [p, q, v],\n      [t, p, v],\n      [v, p, q]\n    ][hi];\n\n    return {\n      r: c[0] * 255,\n      g: c[1] * 255,\n      b: c[2] * 255\n    };\n  },\n\n  rgb_to_hsv: function(r, g, b) {\n    const min = Math.min(r, g, b);\n    const max = Math.max(r, g, b);\n    const delta = max - min;\n    let h;\n    let s;\n\n    if (max !== 0) {\n      s = delta / max;\n    } else {\n      return {\n        h: NaN,\n        s: 0,\n        v: 0\n      };\n    }\n\n    if (r === max) {\n      h = (g - b) / delta;\n    } else if (g === max) {\n      h = 2 + (b - r) / delta;\n    } else {\n      h = 4 + (r - g) / delta;\n    }\n    h /= 6;\n    if (h < 0) {\n      h += 1;\n    }\n\n    return {\n      h: h * 360,\n      s: s,\n      v: max / 255\n    };\n  },\n\n  rgb_to_hex: function(r, g, b) {\n    let hex = this.hex_with_component(0, 2, r);\n    hex = this.hex_with_component(hex, 1, g);\n    hex = this.hex_with_component(hex, 0, b);\n    return hex;\n  },\n\n  component_from_hex: function(hex, componentIndex) {\n    return (hex >> (componentIndex * 8)) & 0xFF;\n  },\n\n  hex_with_component: function(hex, componentIndex, value) {\n    return value << (tmpComponent = componentIndex * 8) | (hex & ~(0xFF << tmpComponent));\n  }\n};\n\nexport default ColorMath;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport interpret from './interpret';\nimport math from './math';\nimport colorToString from './toString';\nimport common from '../utils/common';\n\nclass Color {\n  constructor() {\n    this.__state = interpret.apply(this, arguments);\n\n    if (this.__state === false) {\n      throw new Error('Failed to interpret color arguments');\n    }\n\n    this.__state.a = this.__state.a || 1;\n  }\n\n  toString() {\n    return colorToString(this);\n  }\n\n  toHexString() {\n    return colorToString(this, true);\n  }\n\n  toOriginal() {\n    return this.__state.conversion.write(this);\n  }\n}\n\nfunction defineRGBComponent(target, component, componentHexIndex) {\n  Object.defineProperty(target, component, {\n    get: function() {\n      if (this.__state.space === 'RGB') {\n        return this.__state[component];\n      }\n\n      Color.recalculateRGB(this, component, componentHexIndex);\n\n      return this.__state[component];\n    },\n\n    set: function(v) {\n      if (this.__state.space !== 'RGB') {\n        Color.recalculateRGB(this, component, componentHexIndex);\n        this.__state.space = 'RGB';\n      }\n\n      this.__state[component] = v;\n    }\n  });\n}\n\nfunction defineHSVComponent(target, component) {\n  Object.defineProperty(target, component, {\n    get: function() {\n      if (this.__state.space === 'HSV') {\n        return this.__state[component];\n      }\n\n      Color.recalculateHSV(this);\n\n      return this.__state[component];\n    },\n\n    set: function(v) {\n      if (this.__state.space !== 'HSV') {\n        Color.recalculateHSV(this);\n        this.__state.space = 'HSV';\n      }\n\n      this.__state[component] = v;\n    }\n  });\n}\n\n\nColor.recalculateRGB = function(color, component, componentHexIndex) {\n  if (color.__state.space === 'HEX') {\n    color.__state[component] = math.component_from_hex(color.__state.hex, componentHexIndex);\n  } else if (color.__state.space === 'HSV') {\n    common.extend(color.__state, math.hsv_to_rgb(color.__state.h, color.__state.s, color.__state.v));\n  } else {\n    throw new Error('Corrupted color state');\n  }\n};\n\nColor.recalculateHSV = function(color) {\n  const result = math.rgb_to_hsv(color.r, color.g, color.b);\n\n  common.extend(color.__state,\n    {\n      s: result.s,\n      v: result.v\n    }\n  );\n\n  if (!common.isNaN(result.h)) {\n    color.__state.h = result.h;\n  } else if (common.isUndefined(color.__state.h)) {\n    color.__state.h = 0;\n  }\n};\n\nColor.COMPONENTS = ['r', 'g', 'b', 'h', 's', 'v', 'hex', 'a'];\n\ndefineRGBComponent(Color.prototype, 'r', 2);\ndefineRGBComponent(Color.prototype, 'g', 1);\ndefineRGBComponent(Color.prototype, 'b', 0);\n\ndefineHSVComponent(Color.prototype, 'h');\ndefineHSVComponent(Color.prototype, 's');\ndefineHSVComponent(Color.prototype, 'v');\n\nObject.defineProperty(Color.prototype, 'a', {\n  get: function() {\n    return this.__state.a;\n  },\n\n  set: function(v) {\n    this.__state.a = v;\n  }\n});\n\nObject.defineProperty(Color.prototype, 'hex', {\n  get: function() {\n    if (this.__state.space !== 'HEX') {\n      this.__state.hex = math.rgb_to_hex(this.r, this.g, this.b);\n      this.__state.space = 'HEX';\n    }\n\n    return this.__state.hex;\n  },\n\n  set: function(v) {\n    this.__state.space = 'HEX';\n    this.__state.hex = v;\n  }\n});\n\nexport default Color;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\n/**\n * @class An \"abstract\" class that represents a given property of an object.\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass Controller {\n  constructor(object, property) {\n    this.initialValue = object[property];\n\n    /**\n     * Those who extend this class will put their DOM elements in here.\n     * @type {DOMElement}\n     */\n    this.domElement = document.createElement('div');\n\n    /**\n     * The object to manipulate\n     * @type {Object}\n     */\n    this.object = object;\n\n    /**\n     * The name of the property to manipulate\n     * @type {String}\n     */\n    this.property = property;\n\n    /**\n     * The function to be called on change.\n     * @type {Function}\n     * @ignore\n     */\n    this.__onChange = undefined;\n\n    /**\n     * The function to be called on finishing change.\n     * @type {Function}\n     * @ignore\n     */\n    this.__onFinishChange = undefined;\n  }\n\n  /**\n   * Specify that a function fire every time someone changes the value with\n   * this Controller.\n   *\n   * @param {Function} fnc This function will be called whenever the value\n   * is modified via this Controller.\n   * @returns {Controller} this\n   */\n  onChange(fnc) {\n    this.__onChange = fnc;\n    return this;\n  }\n\n  /**\n   * Specify that a function fire every time someone \"finishes\" changing\n   * the value wih this Controller. Useful for values that change\n   * incrementally like numbers or strings.\n   *\n   * @param {Function} fnc This function will be called whenever\n   * someone \"finishes\" changing the value via this Controller.\n   * @returns {Controller} this\n   */\n  onFinishChange(fnc) {\n    this.__onFinishChange = fnc;\n    return this;\n  }\n\n  /**\n   * Change the value of <code>object[property]</code>\n   *\n   * @param {Object} newValue The new value of <code>object[property]</code>\n   */\n  setValue(newValue) {\n    this.object[this.property] = newValue;\n    if (this.__onChange) {\n      this.__onChange.call(this, newValue);\n    }\n\n    this.updateDisplay();\n    return this;\n  }\n\n  /**\n   * Gets the value of <code>object[property]</code>\n   *\n   * @returns {Object} The current value of <code>object[property]</code>\n   */\n  getValue() {\n    return this.object[this.property];\n  }\n\n  /**\n   * Refreshes the visual display of a Controller in order to keep sync\n   * with the object's current value.\n   * @returns {Controller} this\n   */\n  updateDisplay() {\n    return this;\n  }\n\n  /**\n   * @returns {Boolean} true if the value has deviated from initialValue\n   */\n  isModified() {\n    return this.initialValue !== this.getValue();\n  }\n}\n\nexport default Controller;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport common from '../utils/common';\n\nconst EVENT_MAP = {\n  HTMLEvents: ['change'],\n  MouseEvents: ['click', 'mousemove', 'mousedown', 'mouseup', 'mouseover'],\n  KeyboardEvents: ['keydown']\n};\n\nconst EVENT_MAP_INV = {};\ncommon.each(EVENT_MAP, function(v, k) {\n  common.each(v, function(e) {\n    EVENT_MAP_INV[e] = k;\n  });\n});\n\nconst CSS_VALUE_PIXELS = /(\\d+(\\.\\d+)?)px/;\n\nfunction cssValueToPixels(val) {\n  if (val === '0' || common.isUndefined(val)) {\n    return 0;\n  }\n\n  const match = val.match(CSS_VALUE_PIXELS);\n\n  if (!common.isNull(match)) {\n    return parseFloat(match[1]);\n  }\n\n  // TODO ...ems? %?\n\n  return 0;\n}\n\n/**\n * @namespace\n * @member dat.dom\n */\nconst dom = {\n\n  /**\n   *\n   * @param elem\n   * @param selectable\n   */\n  makeSelectable: function(elem, selectable) {\n    if (elem === undefined || elem.style === undefined) return;\n\n    elem.onselectstart = selectable ? function() {\n      return false;\n    } : function() {\n    };\n\n    elem.style.MozUserSelect = selectable ? 'auto' : 'none';\n    elem.style.KhtmlUserSelect = selectable ? 'auto' : 'none';\n    elem.unselectable = selectable ? 'on' : 'off';\n  },\n\n  /**\n   *\n   * @param elem\n   * @param horizontal\n   * @param vert\n   */\n  makeFullscreen: function(elem, hor, vert) {\n    let vertical = vert;\n    let horizontal = hor;\n\n    if (common.isUndefined(horizontal)) {\n      horizontal = true;\n    }\n\n    if (common.isUndefined(vertical)) {\n      vertical = true;\n    }\n\n    elem.style.position = 'absolute';\n\n    if (horizontal) {\n      elem.style.left = 0;\n      elem.style.right = 0;\n    }\n    if (vertical) {\n      elem.style.top = 0;\n      elem.style.bottom = 0;\n    }\n  },\n\n  /**\n   *\n   * @param elem\n   * @param eventType\n   * @param params\n   */\n  fakeEvent: function(elem, eventType, pars, aux) {\n    const params = pars || {};\n    const className = EVENT_MAP_INV[eventType];\n    if (!className) {\n      throw new Error('Event type ' + eventType + ' not supported.');\n    }\n    const evt = document.createEvent(className);\n    switch (className) {\n      case 'MouseEvents':\n        {\n          const clientX = params.x || params.clientX || 0;\n          const clientY = params.y || params.clientY || 0;\n          evt.initMouseEvent(eventType, params.bubbles || false,\n            params.cancelable || true, window, params.clickCount || 1,\n            0, // screen X\n            0, // screen Y\n            clientX, // client X\n            clientY, // client Y\n            false, false, false, false, 0, null);\n          break;\n        }\n      case 'KeyboardEvents':\n        {\n          const init = evt.initKeyboardEvent || evt.initKeyEvent; // webkit || moz\n          common.defaults(params, {\n            cancelable: true,\n            ctrlKey: false,\n            altKey: false,\n            shiftKey: false,\n            metaKey: false,\n            keyCode: undefined,\n            charCode: undefined\n          });\n          init(eventType, params.bubbles || false,\n            params.cancelable, window,\n            params.ctrlKey, params.altKey,\n            params.shiftKey, params.metaKey,\n            params.keyCode, params.charCode);\n          break;\n        }\n      default:\n        {\n          evt.initEvent(eventType, params.bubbles || false, params.cancelable || true);\n          break;\n        }\n    }\n    common.defaults(evt, aux);\n    elem.dispatchEvent(evt);\n  },\n\n  /**\n   *\n   * @param elem\n   * @param event\n   * @param func\n   * @param bool\n   */\n  bind: function(elem, event, func, newBool) {\n    const bool = newBool || false;\n    if (elem.addEventListener) {\n      elem.addEventListener(event, func, bool);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + event, func);\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param event\n   * @param func\n   * @param bool\n   */\n  unbind: function(elem, event, func, newBool) {\n    const bool = newBool || false;\n    if (elem.removeEventListener) {\n      elem.removeEventListener(event, func, bool);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + event, func);\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param className\n   */\n  addClass: function(elem, className) {\n    if (elem.className === undefined) {\n      elem.className = className;\n    } else if (elem.className !== className) {\n      const classes = elem.className.split(/ +/);\n      if (classes.indexOf(className) === -1) {\n        classes.push(className);\n        elem.className = classes.join(' ').replace(/^\\s+/, '').replace(/\\s+$/, '');\n      }\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param className\n   */\n  removeClass: function(elem, className) {\n    if (className) {\n      if (elem.className === className) {\n        elem.removeAttribute('class');\n      } else {\n        const classes = elem.className.split(/ +/);\n        const index = classes.indexOf(className);\n        if (index !== -1) {\n          classes.splice(index, 1);\n          elem.className = classes.join(' ');\n        }\n      }\n    } else {\n      elem.className = undefined;\n    }\n    return dom;\n  },\n\n  hasClass: function(elem, className) {\n    return new RegExp('(?:^|\\\\s+)' + className + '(?:\\\\s+|$)').test(elem.className) || false;\n  },\n\n  /**\n   *\n   * @param elem\n   */\n  getWidth: function(elem) {\n    const style = getComputedStyle(elem);\n\n    return cssValueToPixels(style['border-left-width']) +\n      cssValueToPixels(style['border-right-width']) +\n      cssValueToPixels(style['padding-left']) +\n      cssValueToPixels(style['padding-right']) +\n      cssValueToPixels(style.width);\n  },\n\n  /**\n   *\n   * @param elem\n   */\n  getHeight: function(elem) {\n    const style = getComputedStyle(elem);\n\n    return cssValueToPixels(style['border-top-width']) +\n      cssValueToPixels(style['border-bottom-width']) +\n      cssValueToPixels(style['padding-top']) +\n      cssValueToPixels(style['padding-bottom']) +\n      cssValueToPixels(style.height);\n  },\n\n  /**\n   *\n   * @param el\n   */\n  getOffset: function(el) {\n    let elem = el;\n    const offset = { left: 0, top: 0 };\n    if (elem.offsetParent) {\n      do {\n        offset.left += elem.offsetLeft;\n        offset.top += elem.offsetTop;\n        elem = elem.offsetParent;\n      } while (elem);\n    }\n    return offset;\n  },\n\n  // http://stackoverflow.com/posts/2684561/revisions\n  /**\n   *\n   * @param elem\n   */\n  isActive: function(elem) {\n    return elem === document.activeElement && (elem.type || elem.href);\n  }\n\n};\n\nexport default dom;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a checkbox input to alter the boolean property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass BooleanController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    const _this = this;\n    this.__prev = this.getValue();\n\n    this.__checkbox = document.createElement('input');\n    this.__checkbox.setAttribute('type', 'checkbox');\n\n    function onChange() {\n      _this.setValue(!_this.__prev);\n    }\n\n    dom.bind(this.__checkbox, 'change', onChange, false);\n\n    this.domElement.appendChild(this.__checkbox);\n\n    // Match original value\n    this.updateDisplay();\n  }\n\n  setValue(v) {\n    const toReturn = super.setValue(v);\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n    this.__prev = this.getValue();\n    return toReturn;\n  }\n\n  updateDisplay() {\n    if (this.getValue() === true) {\n      this.__checkbox.setAttribute('checked', 'checked');\n      this.__checkbox.checked = true;\n      this.__prev = true;\n    } else {\n      this.__checkbox.checked = false;\n      this.__prev = false;\n    }\n\n    return super.updateDisplay();\n  }\n}\n\nexport default BooleanController;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\n/**\n * @class Provides a select input to alter the property of an object, using a\n * list of accepted values.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object|string[]} options A map of labels to acceptable values, or\n * a list of acceptable string values.\n */\nclass OptionController extends Controller {\n  constructor(object, property, opts) {\n    super(object, property);\n\n    let options = opts;\n\n    const _this = this;\n\n    /**\n     * The drop down menu\n     * @ignore\n     */\n    this.__select = document.createElement('select');\n\n    if (common.isArray(options)) {\n      const map = {};\n      common.each(options, function(element) {\n        map[element] = element;\n      });\n      options = map;\n    }\n\n    common.each(options, function(value, key) {\n      const opt = document.createElement('option');\n      opt.innerHTML = key;\n      opt.setAttribute('value', value);\n      _this.__select.appendChild(opt);\n    });\n\n    // Acknowledge original value\n    this.updateDisplay();\n\n    dom.bind(this.__select, 'change', function() {\n      const desiredValue = this.options[this.selectedIndex].value;\n      _this.setValue(desiredValue);\n    });\n\n    this.domElement.appendChild(this.__select);\n  }\n\n  setValue(v) {\n    const toReturn = super.setValue(v);\n\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n    return toReturn;\n  }\n\n  updateDisplay() {\n    if (dom.isActive(this.__select)) return this; // prevent number from updating if user is trying to manually update\n    this.__select.value = this.getValue();\n    return super.updateDisplay();\n  }\n}\n\nexport default OptionController;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a text input to alter the string property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass StringController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    const _this = this;\n\n    function onChange() {\n      _this.setValue(_this.__input.value);\n    }\n\n    function onBlur() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    this.__input = document.createElement('input');\n    this.__input.setAttribute('type', 'text');\n\n    dom.bind(this.__input, 'keyup', onChange);\n    dom.bind(this.__input, 'change', onChange);\n    dom.bind(this.__input, 'blur', onBlur);\n    dom.bind(this.__input, 'keydown', function(e) {\n      if (e.keyCode === 13) {\n        this.blur();\n      }\n    });\n\n    this.updateDisplay();\n\n    this.domElement.appendChild(this.__input);\n  }\n\n  updateDisplay() {\n    // Stops the caret from moving on account of:\n    // keyup -> setValue -> updateDisplay\n    if (!dom.isActive(this.__input)) {\n      this.__input.value = this.getValue();\n    }\n    return super.updateDisplay();\n  }\n}\n\nexport default StringController;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport common from '../utils/common';\n\nfunction numDecimals(x) {\n  const _x = x.toString();\n  if (_x.indexOf('.') > -1) {\n    return _x.length - _x.indexOf('.') - 1;\n  }\n\n  return 0;\n}\n\n/**\n * @class Represents a given property of an object that is a number.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object} [params] Optional parameters\n * @param {Number} [params.min] Minimum allowed value\n * @param {Number} [params.max] Maximum allowed value\n * @param {Number} [params.step] Increment by which to change value\n */\nclass NumberController extends Controller {\n  constructor(object, property, params) {\n    super(object, property);\n\n    const _params = params || {};\n\n    this.__min = _params.min;\n    this.__max = _params.max;\n    this.__step = _params.step;\n\n    if (common.isUndefined(this.__step)) {\n      if (this.initialValue === 0) {\n        this.__impliedStep = 1; // What are we, psychics?\n      } else {\n        // Hey Doug, check this out.\n        this.__impliedStep = Math.pow(10, Math.floor(Math.log(Math.abs(this.initialValue)) / Math.LN10)) / 10;\n      }\n    } else {\n      this.__impliedStep = this.__step;\n    }\n\n    this.__precision = numDecimals(this.__impliedStep);\n  }\n\n  setValue(v) {\n    let _v = v;\n\n    if (this.__min !== undefined && _v < this.__min) {\n      _v = this.__min;\n    } else if (this.__max !== undefined && _v > this.__max) {\n      _v = this.__max;\n    }\n\n    if (this.__step !== undefined && _v % this.__step !== 0) {\n      _v = Math.round(_v / this.__step) * this.__step;\n    }\n\n    return super.setValue(_v);\n  }\n\n  /**\n   * Specify a minimum value for <code>object[property]</code>.\n   *\n   * @param {Number} minValue The minimum value for\n   * <code>object[property]</code>\n   * @returns {dat.controllers.NumberController} this\n   */\n  min(minValue) {\n    this.__min = minValue;\n    return this;\n  }\n\n  /**\n   * Specify a maximum value for <code>object[property]</code>.\n   *\n   * @param {Number} maxValue The maximum value for\n   * <code>object[property]</code>\n   * @returns {dat.controllers.NumberController} this\n   */\n  max(maxValue) {\n    this.__max = maxValue;\n    return this;\n  }\n\n  /**\n   * Specify a step value that dat.controllers.NumberController\n   * increments by.\n   *\n   * @param {Number} stepValue The step value for\n   * dat.controllers.NumberController\n   * @default if minimum and maximum specified increment is 1% of the\n   * difference otherwise stepValue is 1\n   * @returns {dat.controllers.NumberController} this\n   */\n  step(stepValue) {\n    this.__step = stepValue;\n    this.__impliedStep = stepValue;\n    this.__precision = numDecimals(stepValue);\n    return this;\n  }\n}\n\nexport default NumberController;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport NumberController from './NumberController';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\nfunction roundToDecimal(value, decimals) {\n  const tenTo = Math.pow(10, decimals);\n  return Math.round(value * tenTo) / tenTo;\n}\n\n/**\n * @class Represents a given property of an object that is a number and\n * provides an input element with which to manipulate it.\n *\n * @extends dat.controllers.Controller\n * @extends dat.controllers.NumberController\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object} [params] Optional parameters\n * @param {Number} [params.min] Minimum allowed value\n * @param {Number} [params.max] Maximum allowed value\n * @param {Number} [params.step] Increment by which to change value\n */\nclass NumberControllerBox extends NumberController {\n  constructor(object, property, params) {\n    super(object, property, params);\n\n    this.__truncationSuspended = false;\n\n    const _this = this;\n\n    /**\n     * {Number} Previous mouse y position\n     * @ignore\n     */\n    let prevY;\n\n    function onChange() {\n      const attempted = parseFloat(_this.__input.value);\n      if (!common.isNaN(attempted)) {\n        _this.setValue(attempted);\n      }\n    }\n\n    function onFinish() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    function onBlur() {\n      onFinish();\n    }\n\n    function onMouseDrag(e) {\n      const diff = prevY - e.clientY;\n      _this.setValue(_this.getValue() + diff * _this.__impliedStep);\n\n      prevY = e.clientY;\n    }\n\n    function onMouseUp() {\n      dom.unbind(window, 'mousemove', onMouseDrag);\n      dom.unbind(window, 'mouseup', onMouseUp);\n      onFinish();\n    }\n\n    function onMouseDown(e) {\n      dom.bind(window, 'mousemove', onMouseDrag);\n      dom.bind(window, 'mouseup', onMouseUp);\n      prevY = e.clientY;\n    }\n\n    this.__input = document.createElement('input');\n    this.__input.setAttribute('type', 'text');\n\n    // Makes it so manually specified values are not truncated.\n\n    dom.bind(this.__input, 'change', onChange);\n    dom.bind(this.__input, 'blur', onBlur);\n    dom.bind(this.__input, 'mousedown', onMouseDown);\n    dom.bind(this.__input, 'keydown', function(e) {\n      // When pressing enter, you can be as precise as you want.\n      if (e.keyCode === 13) {\n        _this.__truncationSuspended = true;\n        this.blur();\n        _this.__truncationSuspended = false;\n        onFinish();\n      }\n    });\n\n    this.updateDisplay();\n\n    this.domElement.appendChild(this.__input);\n  }\n\n  updateDisplay() {\n    this.__input.value = this.__truncationSuspended ? this.getValue() : roundToDecimal(this.getValue(), this.__precision);\n    return super.updateDisplay();\n  }\n}\n\nexport default NumberControllerBox;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport NumberController from './NumberController';\nimport dom from '../dom/dom';\n\nfunction map(v, i1, i2, o1, o2) {\n  return o1 + (o2 - o1) * ((v - i1) / (i2 - i1));\n}\n\n/**\n * @class Represents a given property of an object that is a number, contains\n * a minimum and maximum, and provides a slider element with which to\n * manipulate it. It should be noted that the slider element is made up of\n * <code>&lt;div&gt;</code> tags, <strong>not</strong> the html5\n * <code>&lt;slider&gt;</code> element.\n *\n * @extends dat.controllers.Controller\n * @extends dat.controllers.NumberController\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Number} minValue Minimum allowed value\n * @param {Number} maxValue Maximum allowed value\n * @param {Number} stepValue Increment by which to change value\n */\nclass NumberControllerSlider extends NumberController {\n  constructor(object, property, min, max, step) {\n    super(object, property, { min: min, max: max, step: step });\n\n    const _this = this;\n\n    this.__background = document.createElement('div');\n    this.__foreground = document.createElement('div');\n\n    dom.bind(this.__background, 'mousedown', onMouseDown);\n    dom.bind(this.__background, 'touchstart', onTouchStart);\n\n    dom.addClass(this.__background, 'slider');\n    dom.addClass(this.__foreground, 'slider-fg');\n\n    function onMouseDown(e) {\n      document.activeElement.blur();\n\n      dom.bind(window, 'mousemove', onMouseDrag);\n      dom.bind(window, 'mouseup', onMouseUp);\n\n      onMouseDrag(e);\n    }\n\n    function onMouseDrag(e) {\n      e.preventDefault();\n\n      const bgRect = _this.__background.getBoundingClientRect();\n\n      _this.setValue(\n        map(e.clientX, bgRect.left, bgRect.right, _this.__min, _this.__max)\n      );\n\n      return false;\n    }\n\n    function onMouseUp() {\n      dom.unbind(window, 'mousemove', onMouseDrag);\n      dom.unbind(window, 'mouseup', onMouseUp);\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    function onTouchStart(e) {\n      if (e.touches.length !== 1) { return; }\n      dom.bind(window, 'touchmove', onTouchMove);\n      dom.bind(window, 'touchend', onTouchEnd);\n      onTouchMove(e);\n    }\n\n    function onTouchMove(e) {\n      const clientX = e.touches[0].clientX;\n      const bgRect = _this.__background.getBoundingClientRect();\n\n      _this.setValue(\n        map(clientX, bgRect.left, bgRect.right, _this.__min, _this.__max)\n      );\n    }\n\n    function onTouchEnd() {\n      dom.unbind(window, 'touchmove', onTouchMove);\n      dom.unbind(window, 'touchend', onTouchEnd);\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    this.updateDisplay();\n\n    this.__background.appendChild(this.__foreground);\n    this.domElement.appendChild(this.__background);\n  }\n\n  updateDisplay() {\n    const pct = (this.getValue() - this.__min) / (this.__max - this.__min);\n    this.__foreground.style.width = pct * 100 + '%';\n    return super.updateDisplay();\n  }\n}\n\nexport default NumberControllerSlider;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a GUI interface to fire a specified method, a property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass FunctionController extends Controller {\n  constructor(object, property, text) {\n    super(object, property);\n\n    const _this = this;\n\n    this.__button = document.createElement('div');\n    this.__button.innerHTML = text === undefined ? 'Fire' : text;\n\n    dom.bind(this.__button, 'click', function(e) {\n      e.preventDefault();\n      _this.fire();\n      return false;\n    });\n\n    dom.addClass(this.__button, 'button');\n\n    this.domElement.appendChild(this.__button);\n  }\n\n  fire() {\n    if (this.__onChange) {\n      this.__onChange.call(this);\n    }\n    this.getValue().call(this.object);\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n  }\n}\n\nexport default FunctionController;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\nimport Color from '../color/Color';\nimport interpret from '../color/interpret';\nimport common from '../utils/common';\n\n/**\n * @class Represents a given property of an object that is a color.\n * @param {Object} object\n * @param {string} property\n */\nclass ColorController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    this.__color = new Color(this.getValue());\n    this.__temp = new Color(0);\n\n    const _this = this;\n\n    this.domElement = document.createElement('div');\n\n    dom.makeSelectable(this.domElement, false);\n\n    this.__selector = document.createElement('div');\n    this.__selector.className = 'selector';\n\n    this.__saturation_field = document.createElement('div');\n    this.__saturation_field.className = 'saturation-field';\n\n    this.__field_knob = document.createElement('div');\n    this.__field_knob.className = 'field-knob';\n    this.__field_knob_border = '2px solid ';\n\n    this.__hue_knob = document.createElement('div');\n    this.__hue_knob.className = 'hue-knob';\n\n    this.__hue_field = document.createElement('div');\n    this.__hue_field.className = 'hue-field';\n\n    this.__input = document.createElement('input');\n    this.__input.type = 'text';\n    this.__input_textShadow = '0 1px 1px ';\n\n    dom.bind(this.__input, 'keydown', function(e) {\n      if (e.keyCode === 13) { // on enter\n        onBlur.call(this);\n      }\n    });\n\n    dom.bind(this.__input, 'blur', onBlur);\n\n    dom.bind(this.__selector, 'mousedown', function(/* e */) {\n      dom\n        .addClass(this, 'drag')\n        .bind(window, 'mouseup', function(/* e */) {\n          dom.removeClass(_this.__selector, 'drag');\n        });\n    });\n\n    dom.bind(this.__selector, 'touchstart', function(/* e */) {\n      dom\n        .addClass(this, 'drag')\n        .bind(window, 'touchend', function(/* e */) {\n          dom.removeClass(_this.__selector, 'drag');\n        });\n    });\n\n    const valueField = document.createElement('div');\n\n    common.extend(this.__selector.style, {\n      width: '122px',\n      height: '102px',\n      padding: '3px',\n      backgroundColor: '#222',\n      boxShadow: '0px 1px 3px rgba(0,0,0,0.3)'\n    });\n\n    common.extend(this.__field_knob.style, {\n      position: 'absolute',\n      width: '12px',\n      height: '12px',\n      border: this.__field_knob_border + (this.__color.v < 0.5 ? '#fff' : '#000'),\n      boxShadow: '0px 1px 3px rgba(0,0,0,0.5)',\n      borderRadius: '12px',\n      zIndex: 1\n    });\n\n    common.extend(this.__hue_knob.style, {\n      position: 'absolute',\n      width: '15px',\n      height: '2px',\n      borderRight: '4px solid #fff',\n      zIndex: 1\n    });\n\n    common.extend(this.__saturation_field.style, {\n      width: '100px',\n      height: '100px',\n      border: '1px solid #555',\n      marginRight: '3px',\n      display: 'inline-block',\n      cursor: 'pointer'\n    });\n\n    common.extend(valueField.style, {\n      width: '100%',\n      height: '100%',\n      background: 'none'\n    });\n\n    linearGradient(valueField, 'top', 'rgba(0,0,0,0)', '#000');\n\n    common.extend(this.__hue_field.style, {\n      width: '15px',\n      height: '100px',\n      border: '1px solid #555',\n      cursor: 'ns-resize',\n      position: 'absolute',\n      top: '3px',\n      right: '3px'\n    });\n\n    hueGradient(this.__hue_field);\n\n    common.extend(this.__input.style, {\n      outline: 'none',\n//      width: '120px',\n      textAlign: 'center',\n//      padding: '4px',\n//      marginBottom: '6px',\n      color: '#fff',\n      border: 0,\n      fontWeight: 'bold',\n      textShadow: this.__input_textShadow + 'rgba(0,0,0,0.7)'\n    });\n\n    dom.bind(this.__saturation_field, 'mousedown', fieldDown);\n    dom.bind(this.__saturation_field, 'touchstart', fieldDown);\n\n    dom.bind(this.__field_knob, 'mousedown', fieldDown);\n    dom.bind(this.__field_knob, 'touchstart', fieldDown);\n\n    dom.bind(this.__hue_field, 'mousedown', fieldDownH);\n    dom.bind(this.__hue_field, 'touchstart', fieldDownH);\n\n    function fieldDown(e) {\n      setSV(e);\n      dom.bind(window, 'mousemove', setSV);\n      dom.bind(window, 'touchmove', setSV);\n      dom.bind(window, 'mouseup', fieldUpSV);\n      dom.bind(window, 'touchend', fieldUpSV);\n    }\n\n    function fieldDownH(e) {\n      setH(e);\n      dom.bind(window, 'mousemove', setH);\n      dom.bind(window, 'touchmove', setH);\n      dom.bind(window, 'mouseup', fieldUpH);\n      dom.bind(window, 'touchend', fieldUpH);\n    }\n\n    function fieldUpSV() {\n      dom.unbind(window, 'mousemove', setSV);\n      dom.unbind(window, 'touchmove', setSV);\n      dom.unbind(window, 'mouseup', fieldUpSV);\n      dom.unbind(window, 'touchend', fieldUpSV);\n      onFinish();\n    }\n\n    function fieldUpH() {\n      dom.unbind(window, 'mousemove', setH);\n      dom.unbind(window, 'touchmove', setH);\n      dom.unbind(window, 'mouseup', fieldUpH);\n      dom.unbind(window, 'touchend', fieldUpH);\n      onFinish();\n    }\n\n    function onBlur() {\n      const i = interpret(this.value);\n      if (i !== false) {\n        _this.__color.__state = i;\n        _this.setValue(_this.__color.toOriginal());\n      } else {\n        this.value = _this.__color.toString();\n      }\n    }\n\n    function onFinish() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.__color.toOriginal());\n      }\n    }\n\n    this.__saturation_field.appendChild(valueField);\n    this.__selector.appendChild(this.__field_knob);\n    this.__selector.appendChild(this.__saturation_field);\n    this.__selector.appendChild(this.__hue_field);\n    this.__hue_field.appendChild(this.__hue_knob);\n\n    this.domElement.appendChild(this.__input);\n    this.domElement.appendChild(this.__selector);\n\n    this.updateDisplay();\n\n    function setSV(e) {\n      if (e.type.indexOf('touch') === -1) { e.preventDefault(); }\n\n      const fieldRect = _this.__saturation_field.getBoundingClientRect();\n      const { clientX, clientY } = (e.touches && e.touches[0]) || e;\n      let s = (clientX - fieldRect.left) / (fieldRect.right - fieldRect.left);\n      let v = 1 - (clientY - fieldRect.top) / (fieldRect.bottom - fieldRect.top);\n\n      if (v > 1) {\n        v = 1;\n      } else if (v < 0) {\n        v = 0;\n      }\n\n      if (s > 1) {\n        s = 1;\n      } else if (s < 0) {\n        s = 0;\n      }\n\n      _this.__color.v = v;\n      _this.__color.s = s;\n\n      _this.setValue(_this.__color.toOriginal());\n\n\n      return false;\n    }\n\n    function setH(e) {\n      if (e.type.indexOf('touch') === -1) { e.preventDefault(); }\n\n      const fieldRect = _this.__hue_field.getBoundingClientRect();\n      const { clientY } = (e.touches && e.touches[0]) || e;\n      let h = 1 - (clientY - fieldRect.top) / (fieldRect.bottom - fieldRect.top);\n\n      if (h > 1) {\n        h = 1;\n      } else if (h < 0) {\n        h = 0;\n      }\n\n      _this.__color.h = h * 360;\n\n      _this.setValue(_this.__color.toOriginal());\n\n      return false;\n    }\n  }\n\n  updateDisplay() {\n    const i = interpret(this.getValue());\n\n    if (i !== false) {\n      let mismatch = false;\n\n      // Check for mismatch on the interpreted value.\n\n      common.each(Color.COMPONENTS, function(component) {\n        if (!common.isUndefined(i[component]) && !common.isUndefined(this.__color.__state[component]) &&\n          i[component] !== this.__color.__state[component]) {\n          mismatch = true;\n          return {}; // break\n        }\n      }, this);\n\n      // If nothing diverges, we keep our previous values\n      // for statefulness, otherwise we recalculate fresh\n      if (mismatch) {\n        common.extend(this.__color.__state, i);\n      }\n    }\n\n    common.extend(this.__temp.__state, this.__color.__state);\n\n    this.__temp.a = 1;\n\n    const flip = (this.__color.v < 0.5 || this.__color.s > 0.5) ? 255 : 0;\n    const _flip = 255 - flip;\n\n    common.extend(this.__field_knob.style, {\n      marginLeft: 100 * this.__color.s - 7 + 'px',\n      marginTop: 100 * (1 - this.__color.v) - 7 + 'px',\n      backgroundColor: this.__temp.toHexString(),\n      border: this.__field_knob_border + 'rgb(' + flip + ',' + flip + ',' + flip + ')'\n    });\n\n    this.__hue_knob.style.marginTop = (1 - this.__color.h / 360) * 100 + 'px';\n\n    this.__temp.s = 1;\n    this.__temp.v = 1;\n\n    linearGradient(this.__saturation_field, 'left', '#fff', this.__temp.toHexString());\n\n    this.__input.value = this.__color.toString();\n\n    common.extend(this.__input.style, {\n      backgroundColor: this.__color.toHexString(),\n      color: 'rgb(' + flip + ',' + flip + ',' + flip + ')',\n      textShadow: this.__input_textShadow + 'rgba(' + _flip + ',' + _flip + ',' + _flip + ',.7)'\n    });\n  }\n}\n\nconst vendors = ['-moz-', '-o-', '-webkit-', '-ms-', ''];\n\nfunction linearGradient(elem, x, a, b) {\n  elem.style.background = '';\n  common.each(vendors, function(vendor) {\n    elem.style.cssText += 'background: ' + vendor + 'linear-gradient(' + x + ', ' + a + ' 0%, ' + b + ' 100%); ';\n  });\n}\n\nfunction hueGradient(elem) {\n  elem.style.background = '';\n  elem.style.cssText += 'background: -moz-linear-gradient(top,  #ff0000 0%, #ff00ff 17%, #0000ff 34%, #00ffff 50%, #00ff00 67%, #ffff00 84%, #ff0000 100%);';\n  elem.style.cssText += 'background: -webkit-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: -o-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: -ms-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n}\n\nexport default ColorController;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nconst css = {\n  load: function(url, indoc) {\n    const doc = indoc || document;\n    const link = doc.createElement('link');\n    link.type = 'text/css';\n    link.rel = 'stylesheet';\n    link.href = url;\n    doc.getElementsByTagName('head')[0].appendChild(link);\n  },\n\n  inject: function(cssContent, indoc) {\n    const doc = indoc || document;\n    const injected = document.createElement('style');\n    injected.type = 'text/css';\n    injected.innerHTML = cssContent;\n    const head = doc.getElementsByTagName('head')[0];\n    try {\n      head.appendChild(injected);\n    } catch (e) { // Unable to inject CSS, probably because of a Content Security Policy\n    }\n  }\n};\n\nexport default css;\n", "const saveDialogContents = `<div id=\"dg-save\" class=\"dg dialogue\">\n\n  Here's the new load parameter for your <code>GUI</code>'s constructor:\n\n  <textarea id=\"dg-new-constructor\"></textarea>\n\n  <div id=\"dg-save-locally\">\n\n    <input id=\"dg-local-storage\" type=\"checkbox\"/> Automatically save\n    values to <code>localStorage</code> on exit.\n\n    <div id=\"dg-local-explain\">The values saved to <code>localStorage</code> will\n      override those passed to <code>dat.GUI</code>'s constructor. This makes it\n      easier to work incrementally, but <code>localStorage</code> is fragile,\n      and your friends may not see the same values you do.\n\n    </div>\n\n  </div>\n\n</div>`;\n\nexport default saveDialogContents;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport OptionController from './OptionController';\nimport NumberControllerBox from './NumberControllerBox';\nimport NumberControllerSlider from './NumberControllerSlider';\nimport StringController from './StringController';\nimport FunctionController from './FunctionController';\nimport BooleanController from './BooleanController';\nimport common from '../utils/common';\n\nconst ControllerFactory = function(object, property) {\n  const initialValue = object[property];\n\n  // Providing options?\n  if (common.isArray(arguments[2]) || common.isObject(arguments[2])) {\n    return new OptionController(object, property, arguments[2]);\n  }\n\n  // Providing a map?\n  if (common.isNumber(initialValue)) {\n    // Has min and max? (slider)\n    if (common.isNumber(arguments[2]) && common.isNumber(arguments[3])) {\n      // has step?\n      if (common.isNumber(arguments[4])) {\n        return new NumberControllerSlider(object, property,\n                        arguments[2], arguments[3], arguments[4]);\n      }\n\n      return new NumberControllerSlider(object, property, arguments[2], arguments[3]);\n    }\n\n    // number box\n    if (common.isNumber(arguments[4])) { // has step\n      return new NumberControllerBox(object, property,\n                        { min: arguments[2], max: arguments[3], step: arguments[4] });\n    }\n    return new NumberControllerBox(object, property, { min: arguments[2], max: arguments[3] });\n  }\n\n  if (common.isString(initialValue)) {\n    return new StringController(object, property);\n  }\n\n  if (common.isFunction(initialValue)) {\n    return new FunctionController(object, property, '');\n  }\n\n  if (common.isBoolean(initialValue)) {\n    return new BooleanController(object, property);\n  }\n\n  return null;\n};\n\nexport default ControllerFactory;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nfunction requestAnimationFrame(callback) {\n  setTimeout(callback, 1000 / 60);\n}\n\nexport default window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.oRequestAnimationFrame ||\n    window.msRequestAnimationFrame ||\n    requestAnimationFrame;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\nclass CenteredDiv {\n  constructor() {\n    this.backgroundElement = document.createElement('div');\n    common.extend(this.backgroundElement.style, {\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      top: 0,\n      left: 0,\n      display: 'none',\n      zIndex: '1000',\n      opacity: 0,\n      WebkitTransition: 'opacity 0.2s linear',\n      transition: 'opacity 0.2s linear'\n    });\n\n    dom.makeFullscreen(this.backgroundElement);\n    this.backgroundElement.style.position = 'fixed';\n\n    this.domElement = document.createElement('div');\n    common.extend(this.domElement.style, {\n      position: 'fixed',\n      display: 'none',\n      zIndex: '1001',\n      opacity: 0,\n      WebkitTransition: '-webkit-transform 0.2s ease-out, opacity 0.2s linear',\n      transition: 'transform 0.2s ease-out, opacity 0.2s linear'\n    });\n\n\n    document.body.appendChild(this.backgroundElement);\n    document.body.appendChild(this.domElement);\n\n    const _this = this;\n    dom.bind(this.backgroundElement, 'click', function() {\n      _this.hide();\n    });\n  }\n\n  show() {\n    const _this = this;\n\n    this.backgroundElement.style.display = 'block';\n\n    this.domElement.style.display = 'block';\n    this.domElement.style.opacity = 0;\n//    this.domElement.style.top = '52%';\n    this.domElement.style.webkitTransform = 'scale(1.1)';\n\n    this.layout();\n\n    common.defer(function() {\n      _this.backgroundElement.style.opacity = 1;\n      _this.domElement.style.opacity = 1;\n      _this.domElement.style.webkitTransform = 'scale(1)';\n    });\n  }\n\n  /**\n   * Hide centered div\n   */\n  hide() {\n    const _this = this;\n\n    const hide = function() {\n      _this.domElement.style.display = 'none';\n      _this.backgroundElement.style.display = 'none';\n\n      dom.unbind(_this.domElement, 'webkitTransitionEnd', hide);\n      dom.unbind(_this.domElement, 'transitionend', hide);\n      dom.unbind(_this.domElement, 'oTransitionEnd', hide);\n    };\n\n    dom.bind(this.domElement, 'webkitTransitionEnd', hide);\n    dom.bind(this.domElement, 'transitionend', hide);\n    dom.bind(this.domElement, 'oTransitionEnd', hide);\n\n    this.backgroundElement.style.opacity = 0;\n//    this.domElement.style.top = '48%';\n    this.domElement.style.opacity = 0;\n    this.domElement.style.webkitTransform = 'scale(1.1)';\n  }\n\n  layout() {\n    this.domElement.style.left = window.innerWidth / 2 - dom.getWidth(this.domElement) / 2 + 'px';\n    this.domElement.style.top = window.innerHeight / 2 - dom.getHeight(this.domElement) / 2 + 'px';\n  }\n}\n\nexport default CenteredDiv;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport css from '../utils/css';\nimport saveDialogueContents from './saveDialogue.html';\nimport ControllerFactory from '../controllers/ControllerFactory';\nimport Controller from '../controllers/Controller';\nimport BooleanController from '../controllers/BooleanController';\nimport FunctionController from '../controllers/FunctionController';\nimport NumberControllerBox from '../controllers/NumberControllerBox';\nimport NumberControllerSlider from '../controllers/NumberControllerSlider';\nimport ColorController from '../controllers/ColorController';\nimport requestAnimationFrame from '../utils/requestAnimationFrame';\nimport CenteredDiv from '../dom/CenteredDiv';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\nimport styleSheet from './style.scss'; // CSS to embed in build\n\ncss.inject(styleSheet);\n\n/** @ignore Outer-most className for GUI's */\nconst CSS_NAMESPACE = 'dg';\n\nconst HIDE_KEY_CODE = 72;\n\n/** @ignore The only value shared between the JS and SCSS. Use caution. */\nconst CLOSE_BUTTON_HEIGHT = 20;\n\nconst DEFAULT_DEFAULT_PRESET_NAME = 'Default';\n\nconst SUPPORTS_LOCAL_STORAGE = (function() {\n  try {\n    return !!window.localStorage;\n  } catch (e) {\n    return false;\n  }\n}());\n\nlet SAVE_DIALOGUE;\n\n/** @ignore Have we yet to create an autoPlace GUI? */\nlet autoPlaceVirgin = true;\n\n/** @ignore Fixed position div that auto place GUI's go inside */\nlet autoPlaceContainer;\n\n/** @ignore Are we hiding the GUI's ? */\nlet hide = false;\n\n/** @private GUI's which should be hidden */\nconst hideableGuis = [];\n\n/**\n * @class A lightweight controller library for JavaScript. It allows you to easily\n * manipulate variables and fire functions on the fly.\n *\n * @typicalname gui\n *\n * @example\n * // Creating a GUI with options.\n * var gui = new dat.GUI({name: 'My GUI'});\n *\n * @example\n * // Creating a GUI and a subfolder.\n * var gui = new dat.GUI();\n * var folder1 = gui.addFolder('Flow Field');\n *\n * @param {Object} [params]\n * @param {String} [params.name] The name of this GUI.\n * @param {Object} [params.load] JSON object representing the saved state of\n * this GUI.\n * @param {dat.gui.GUI} [params.parent] The GUI I'm nested in.\n * @param {Boolean} [params.autoPlace=true]\n * @param {Boolean} [params.hideable=true] If true, GUI is shown/hidden by <kbd>h</kbd> keypress.\n * @param {Boolean} [params.closed=false] If true, starts closed\n * @param {Boolean} [params.closeOnTop=false] If true, close/open button shows on top of the GUI\n */\nconst GUI = function(pars) {\n  const _this = this;\n\n  let params = pars || {};\n\n  /**\n   * Outermost DOM Element\n   * @type {DOMElement}\n   */\n  this.domElement = document.createElement('div');\n  this.__ul = document.createElement('ul');\n  this.domElement.appendChild(this.__ul);\n\n  dom.addClass(this.domElement, CSS_NAMESPACE);\n\n  /**\n   * Nested GUI's by name\n   * @ignore\n   */\n  this.__folders = {};\n\n  this.__controllers = [];\n\n  /**\n   * List of objects I'm remembering for save, only used in top level GUI\n   * @ignore\n   */\n  this.__rememberedObjects = [];\n\n  /**\n   * Maps the index of remembered objects to a map of controllers, only used\n   * in top level GUI.\n   *\n   * @private\n   * @ignore\n   *\n   * @example\n   * [\n   *  {\n     *    propertyName: Controller,\n     *    anotherPropertyName: Controller\n     *  },\n   *  {\n     *    propertyName: Controller\n     *  }\n   * ]\n   */\n  this.__rememberedObjectIndecesToControllers = [];\n\n  this.__listening = [];\n\n  // Default parameters\n  params = common.defaults(params, {\n    closeOnTop: false,\n    autoPlace: true,\n    width: GUI.DEFAULT_WIDTH\n  });\n\n  params = common.defaults(params, {\n    resizable: params.autoPlace,\n    hideable: params.autoPlace\n  });\n\n  if (!common.isUndefined(params.load)) {\n    // Explicit preset\n    if (params.preset) {\n      params.load.preset = params.preset;\n    }\n  } else {\n    params.load = { preset: DEFAULT_DEFAULT_PRESET_NAME };\n  }\n\n  if (common.isUndefined(params.parent) && params.hideable) {\n    hideableGuis.push(this);\n  }\n\n  // Only root level GUI's are resizable.\n  params.resizable = common.isUndefined(params.parent) && params.resizable;\n\n  if (params.autoPlace && common.isUndefined(params.scrollable)) {\n    params.scrollable = true;\n  }\n//    params.scrollable = common.isUndefined(params.parent) && params.scrollable === true;\n\n  // Not part of params because I don't want people passing this in via\n  // constructor. Should be a 'remembered' value.\n  let useLocalStorage =\n    SUPPORTS_LOCAL_STORAGE &&\n    localStorage.getItem(getLocalStorageHash(this, 'isLocal')) === 'true';\n\n  let saveToLocalStorage;\n  let titleRow;\n\n  Object.defineProperties(this,\n    /** @lends GUI.prototype */\n    {\n      /**\n       * The parent <code>GUI</code>\n       * @type dat.gui.GUI\n       */\n      parent: {\n        get: function() {\n          return params.parent;\n        }\n      },\n\n      scrollable: {\n        get: function() {\n          return params.scrollable;\n        }\n      },\n\n      /**\n       * Handles <code>GUI</code>'s element placement for you\n       * @type Boolean\n       */\n      autoPlace: {\n        get: function() {\n          return params.autoPlace;\n        }\n      },\n\n      /**\n       * Handles <code>GUI</code>'s position of open/close button\n       * @type Boolean\n       */\n      closeOnTop: {\n        get: function() {\n          return params.closeOnTop;\n        }\n      },\n\n      /**\n       * The identifier for a set of saved values\n       * @type String\n       */\n      preset: {\n        get: function() {\n          if (_this.parent) {\n            return _this.getRoot().preset;\n          }\n\n          return params.load.preset;\n        },\n\n        set: function(v) {\n          if (_this.parent) {\n            _this.getRoot().preset = v;\n          } else {\n            params.load.preset = v;\n          }\n          setPresetSelectIndex(this);\n          _this.revert();\n        }\n      },\n\n      /**\n       * The width of <code>GUI</code> element\n       * @type Number\n       */\n      width: {\n        get: function() {\n          return params.width;\n        },\n        set: function(v) {\n          params.width = v;\n          setWidth(_this, v);\n        }\n      },\n\n      /**\n       * The name of <code>GUI</code>. Used for folders. i.e\n       * a folder's name\n       * @type String\n       */\n      name: {\n        get: function() {\n          return params.name;\n        },\n        set: function(v) {\n          // TODO Check for collisions among sibling folders\n          params.name = v;\n          if (titleRow) {\n            titleRow.innerHTML = params.name;\n          }\n        }\n      },\n\n      /**\n       * Whether the <code>GUI</code> is collapsed or not\n       * @type Boolean\n       */\n      closed: {\n        get: function() {\n          return params.closed;\n        },\n        set: function(v) {\n          params.closed = v;\n          if (params.closed) {\n            dom.addClass(_this.__ul, GUI.CLASS_CLOSED);\n          } else {\n            dom.removeClass(_this.__ul, GUI.CLASS_CLOSED);\n          }\n          // For browsers that aren't going to respect the CSS transition,\n          // Lets just check our height against the window height right off\n          // the bat.\n          this.onResize();\n\n          if (_this.__closeButton) {\n            _this.__closeButton.innerHTML = v ? GUI.TEXT_OPEN : GUI.TEXT_CLOSED;\n          }\n        }\n      },\n\n      /**\n       * Contains all presets\n       * @type Object\n       */\n      load: {\n        get: function() {\n          return params.load;\n        }\n      },\n\n      /**\n       * Determines whether or not to use <a href=\"https://developer.mozilla.org/en/DOM/Storage#localStorage\">localStorage</a> as the means for\n       * <code>remember</code>ing\n       * @type Boolean\n       */\n      useLocalStorage: {\n\n        get: function() {\n          return useLocalStorage;\n        },\n        set: function(bool) {\n          if (SUPPORTS_LOCAL_STORAGE) {\n            useLocalStorage = bool;\n            if (bool) {\n              dom.bind(window, 'unload', saveToLocalStorage);\n            } else {\n              dom.unbind(window, 'unload', saveToLocalStorage);\n            }\n            localStorage.setItem(getLocalStorageHash(_this, 'isLocal'), bool);\n          }\n        }\n      }\n    });\n\n  // Are we a root level GUI?\n  if (common.isUndefined(params.parent)) {\n    this.closed = params.closed || false;\n\n    dom.addClass(this.domElement, GUI.CLASS_MAIN);\n    dom.makeSelectable(this.domElement, false);\n\n    // Are we supposed to be loading locally?\n    if (SUPPORTS_LOCAL_STORAGE) {\n      if (useLocalStorage) {\n        _this.useLocalStorage = true;\n\n        const savedGui = localStorage.getItem(getLocalStorageHash(this, 'gui'));\n\n        if (savedGui) {\n          params.load = JSON.parse(savedGui);\n        }\n      }\n    }\n\n    this.__closeButton = document.createElement('div');\n    this.__closeButton.innerHTML = GUI.TEXT_CLOSED;\n    dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_BUTTON);\n    if (params.closeOnTop) {\n      dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_TOP);\n      this.domElement.insertBefore(this.__closeButton, this.domElement.childNodes[0]);\n    } else {\n      dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_BOTTOM);\n      this.domElement.appendChild(this.__closeButton);\n    }\n\n    dom.bind(this.__closeButton, 'click', function() {\n      _this.closed = !_this.closed;\n    });\n    // Oh, you're a nested GUI!\n  } else {\n    if (params.closed === undefined) {\n      params.closed = true;\n    }\n\n    const titleRowName = document.createTextNode(params.name);\n    dom.addClass(titleRowName, 'controller-name');\n\n    titleRow = addRow(_this, titleRowName);\n\n    const onClickTitle = function(e) {\n      e.preventDefault();\n      _this.closed = !_this.closed;\n      return false;\n    };\n\n    dom.addClass(this.__ul, GUI.CLASS_CLOSED);\n\n    dom.addClass(titleRow, 'title');\n    dom.bind(titleRow, 'click', onClickTitle);\n\n    if (!params.closed) {\n      this.closed = false;\n    }\n  }\n\n  if (params.autoPlace) {\n    if (common.isUndefined(params.parent)) {\n      if (autoPlaceVirgin) {\n        autoPlaceContainer = document.createElement('div');\n        dom.addClass(autoPlaceContainer, CSS_NAMESPACE);\n        dom.addClass(autoPlaceContainer, GUI.CLASS_AUTO_PLACE_CONTAINER);\n        document.body.appendChild(autoPlaceContainer);\n        autoPlaceVirgin = false;\n      }\n\n      // Put it in the dom for you.\n      autoPlaceContainer.appendChild(this.domElement);\n\n      // Apply the auto styles\n      dom.addClass(this.domElement, GUI.CLASS_AUTO_PLACE);\n    }\n\n\n    // Make it not elastic.\n    if (!this.parent) {\n      setWidth(_this, params.width);\n    }\n  }\n\n  this.__resizeHandler = function() {\n    _this.onResizeDebounced();\n  };\n\n  dom.bind(window, 'resize', this.__resizeHandler);\n  dom.bind(this.__ul, 'webkitTransitionEnd', this.__resizeHandler);\n  dom.bind(this.__ul, 'transitionend', this.__resizeHandler);\n  dom.bind(this.__ul, 'oTransitionEnd', this.__resizeHandler);\n  this.onResize();\n\n  if (params.resizable) {\n    addResizeHandle(this);\n  }\n\n  saveToLocalStorage = function() {\n    if (SUPPORTS_LOCAL_STORAGE && localStorage.getItem(getLocalStorageHash(_this, 'isLocal')) === 'true') {\n      localStorage.setItem(getLocalStorageHash(_this, 'gui'), JSON.stringify(_this.getSaveObject()));\n    }\n  };\n\n  // expose this method publicly\n  this.saveToLocalStorageIfPossible = saveToLocalStorage;\n\n  function resetWidth() {\n    const root = _this.getRoot();\n    root.width += 1;\n    common.defer(function() {\n      root.width -= 1;\n    });\n  }\n\n  if (!params.parent) {\n    resetWidth();\n  }\n};\n\nGUI.toggleHide = function() {\n  hide = !hide;\n  common.each(hideableGuis, function(gui) {\n    gui.domElement.style.display = hide ? 'none' : '';\n  });\n};\n\nGUI.CLASS_AUTO_PLACE = 'a';\nGUI.CLASS_AUTO_PLACE_CONTAINER = 'ac';\nGUI.CLASS_MAIN = 'main';\nGUI.CLASS_CONTROLLER_ROW = 'cr';\nGUI.CLASS_TOO_TALL = 'taller-than-window';\nGUI.CLASS_CLOSED = 'closed';\nGUI.CLASS_CLOSE_BUTTON = 'close-button';\nGUI.CLASS_CLOSE_TOP = 'close-top';\nGUI.CLASS_CLOSE_BOTTOM = 'close-bottom';\nGUI.CLASS_DRAG = 'drag';\n\nGUI.DEFAULT_WIDTH = 245;\nGUI.TEXT_CLOSED = 'Close Controls';\nGUI.TEXT_OPEN = 'Open Controls';\n\nGUI._keydownHandler = function(e) {\n  if (document.activeElement.type !== 'text' &&\n    (e.which === HIDE_KEY_CODE || e.keyCode === HIDE_KEY_CODE)) {\n    GUI.toggleHide();\n  }\n};\ndom.bind(window, 'keydown', GUI._keydownHandler, false);\n\ncommon.extend(\n  GUI.prototype,\n\n  /** @lends GUI.prototype */\n  {\n\n    /**\n     * Adds a new {@link Controller} to the GUI. The type of controller created\n     * is inferred from the initial value of <code>object[property]</code>. For\n     * color properties, see {@link addColor}.\n     *\n     * @param {Object} object The object to be manipulated\n     * @param {String} property The name of the property to be manipulated\n     * @param {Number} [min] Minimum allowed value\n     * @param {Number} [max] Maximum allowed value\n     * @param {Number} [step] Increment by which to change value\n     * @returns {Controller} The controller that was added to the GUI.\n     * @instance\n     *\n     * @example\n     * // Add a string controller.\n     * var person = {name: 'Sam'};\n     * gui.add(person, 'name');\n     *\n     * @example\n     * // Add a number controller slider.\n     * var person = {age: 45};\n     * gui.add(person, 'age', 0, 100);\n     */\n    add: function(object, property) {\n      return add(\n        this,\n        object,\n        property,\n        {\n          factoryArgs: Array.prototype.slice.call(arguments, 2)\n        }\n      );\n    },\n\n    /**\n     * Adds a new color controller to the GUI.\n     *\n     * @param object\n     * @param property\n     * @returns {Controller} The controller that was added to the GUI.\n     * @instance\n     *\n     * @example\n     * var palette = {\n     *   color1: '#FF0000', // CSS string\n     *   color2: [ 0, 128, 255 ], // RGB array\n     *   color3: [ 0, 128, 255, 0.3 ], // RGB with alpha\n     *   color4: { h: 350, s: 0.9, v: 0.3 } // Hue, saturation, value\n     * };\n     * gui.addColor(palette, 'color1');\n     * gui.addColor(palette, 'color2');\n     * gui.addColor(palette, 'color3');\n     * gui.addColor(palette, 'color4');\n     */\n    addColor: function(object, property) {\n      return add(\n        this,\n        object,\n        property,\n        {\n          color: true\n        }\n      );\n    },\n\n    /**\n     * Removes the given controller from the GUI.\n     * @param {Controller} controller\n     * @instance\n     */\n    remove: function(controller) {\n      // TODO listening?\n      this.__ul.removeChild(controller.__li);\n      this.__controllers.splice(this.__controllers.indexOf(controller), 1);\n      const _this = this;\n      common.defer(function() {\n        _this.onResize();\n      });\n    },\n\n    /**\n     * Removes the root GUI from the document and unbinds all event listeners.\n     * For subfolders, use `gui.removeFolder(folder)` instead.\n     * @instance\n     */\n    destroy: function() {\n      if (this.parent) {\n        throw new Error(\n          'Only the root GUI should be removed with .destroy(). ' +\n          'For subfolders, use gui.removeFolder(folder) instead.'\n        );\n      }\n\n      if (this.autoPlace) {\n        autoPlaceContainer.removeChild(this.domElement);\n      }\n\n      const _this = this;\n      common.each(this.__folders, function(subfolder) {\n        _this.removeFolder(subfolder);\n      });\n\n      dom.unbind(window, 'keydown', GUI._keydownHandler, false);\n\n      removeListeners(this);\n    },\n\n    /**\n     * Creates a new subfolder GUI instance.\n     * @param name\n     * @returns {dat.gui.GUI} The new folder.\n     * @throws {Error} if this GUI already has a folder by the specified\n     * name\n     * @instance\n     */\n    addFolder: function(name) {\n      // We have to prevent collisions on names in order to have a key\n      // by which to remember saved values\n      if (this.__folders[name] !== undefined) {\n        throw new Error('You already have a folder in this GUI by the' +\n          ' name \"' + name + '\"');\n      }\n\n      const newGuiParams = { name: name, parent: this };\n\n      // We need to pass down the autoPlace trait so that we can\n      // attach event listeners to open/close folder actions to\n      // ensure that a scrollbar appears if the window is too short.\n      newGuiParams.autoPlace = this.autoPlace;\n\n      // Do we have saved appearance data for this folder?\n      if (this.load && // Anything loaded?\n        this.load.folders && // Was my parent a dead-end?\n        this.load.folders[name]) { // Did daddy remember me?\n        // Start me closed if I was closed\n        newGuiParams.closed = this.load.folders[name].closed;\n\n        // Pass down the loaded data\n        newGuiParams.load = this.load.folders[name];\n      }\n\n      const gui = new GUI(newGuiParams);\n      this.__folders[name] = gui;\n\n      const li = addRow(this, gui.domElement);\n      dom.addClass(li, 'folder');\n      return gui;\n    },\n\n    /**\n     * Removes a subfolder GUI instance.\n     * @param {dat.gui.GUI} folder The folder to remove.\n     * @instance\n     */\n    removeFolder: function(folder) {\n      this.__ul.removeChild(folder.domElement.parentElement);\n\n      delete this.__folders[folder.name];\n\n      // Do we have saved appearance data for this folder?\n      if (this.load && // Anything loaded?\n        this.load.folders && // Was my parent a dead-end?\n        this.load.folders[folder.name]) {\n        delete this.load.folders[folder.name];\n      }\n\n      removeListeners(folder);\n\n      const _this = this;\n\n      common.each(folder.__folders, function(subfolder) {\n        folder.removeFolder(subfolder);\n      });\n\n      common.defer(function() {\n        _this.onResize();\n      });\n    },\n\n    /**\n     * Opens the GUI.\n     */\n    open: function() {\n      this.closed = false;\n    },\n\n    /**\n     * Closes the GUI.\n     */\n    close: function() {\n      this.closed = true;\n    },\n\n    /**\n    * Hides the GUI.\n    */\n    hide: function() {\n      this.domElement.style.display = 'none';\n    },\n\n    /**\n    * Shows the GUI.\n    */\n    show: function() {\n      this.domElement.style.display = '';\n    },\n\n\n    onResize: function() {\n      // we debounce this function to prevent performance issues when rotating on tablet/mobile\n      const root = this.getRoot();\n      if (root.scrollable) {\n        const top = dom.getOffset(root.__ul).top;\n        let h = 0;\n\n        common.each(root.__ul.childNodes, function(node) {\n          if (!(root.autoPlace && node === root.__save_row)) {\n            h += dom.getHeight(node);\n          }\n        });\n\n        if (window.innerHeight - top - CLOSE_BUTTON_HEIGHT < h) {\n          dom.addClass(root.domElement, GUI.CLASS_TOO_TALL);\n          root.__ul.style.height = window.innerHeight - top - CLOSE_BUTTON_HEIGHT + 'px';\n        } else {\n          dom.removeClass(root.domElement, GUI.CLASS_TOO_TALL);\n          root.__ul.style.height = 'auto';\n        }\n      }\n\n      if (root.__resize_handle) {\n        common.defer(function() {\n          root.__resize_handle.style.height = root.__ul.offsetHeight + 'px';\n        });\n      }\n\n      if (root.__closeButton) {\n        root.__closeButton.style.width = root.width + 'px';\n      }\n    },\n\n    onResizeDebounced: common.debounce(function() { this.onResize(); }, 50),\n\n    /**\n     * Mark objects for saving. The order of these objects cannot change as\n     * the GUI grows. When remembering new objects, append them to the end\n     * of the list.\n     *\n     * @param {...Object} objects\n     * @throws {Error} if not called on a top level GUI.\n     * @instance\n     * @ignore\n     */\n    remember: function() {\n      if (common.isUndefined(SAVE_DIALOGUE)) {\n        SAVE_DIALOGUE = new CenteredDiv();\n        SAVE_DIALOGUE.domElement.innerHTML = saveDialogueContents;\n      }\n\n      if (this.parent) {\n        throw new Error('You can only call remember on a top level GUI.');\n      }\n\n      const _this = this;\n\n      common.each(Array.prototype.slice.call(arguments), function(object) {\n        if (_this.__rememberedObjects.length === 0) {\n          addSaveMenu(_this);\n        }\n        if (_this.__rememberedObjects.indexOf(object) === -1) {\n          _this.__rememberedObjects.push(object);\n        }\n      });\n\n      if (this.autoPlace) {\n        // Set save row width\n        setWidth(this, this.width);\n      }\n    },\n\n    /**\n     * @returns {dat.gui.GUI} the topmost parent GUI of a nested GUI.\n     * @instance\n     */\n    getRoot: function() {\n      let gui = this;\n      while (gui.parent) {\n        gui = gui.parent;\n      }\n      return gui;\n    },\n\n    /**\n     * @returns {Object} a JSON object representing the current state of\n     * this GUI as well as its remembered properties.\n     * @instance\n     */\n    getSaveObject: function() {\n      const toReturn = this.load;\n      toReturn.closed = this.closed;\n\n      // Am I remembering any values?\n      if (this.__rememberedObjects.length > 0) {\n        toReturn.preset = this.preset;\n\n        if (!toReturn.remembered) {\n          toReturn.remembered = {};\n        }\n\n        toReturn.remembered[this.preset] = getCurrentPreset(this);\n      }\n\n      toReturn.folders = {};\n      common.each(this.__folders, function(element, key) {\n        toReturn.folders[key] = element.getSaveObject();\n      });\n\n      return toReturn;\n    },\n\n    save: function() {\n      if (!this.load.remembered) {\n        this.load.remembered = {};\n      }\n\n      this.load.remembered[this.preset] = getCurrentPreset(this);\n      markPresetModified(this, false);\n      this.saveToLocalStorageIfPossible();\n    },\n\n    saveAs: function(presetName) {\n      if (!this.load.remembered) {\n        // Retain default values upon first save\n        this.load.remembered = {};\n        this.load.remembered[DEFAULT_DEFAULT_PRESET_NAME] = getCurrentPreset(this, true);\n      }\n\n      this.load.remembered[presetName] = getCurrentPreset(this);\n      this.preset = presetName;\n      addPresetOption(this, presetName, true);\n      this.saveToLocalStorageIfPossible();\n    },\n\n    revert: function(gui) {\n      common.each(this.__controllers, function(controller) {\n        // Make revert work on Default.\n        if (!this.getRoot().load.remembered) {\n          controller.setValue(controller.initialValue);\n        } else {\n          recallSavedValue(gui || this.getRoot(), controller);\n        }\n\n        // fire onFinishChange callback\n        if (controller.__onFinishChange) {\n          controller.__onFinishChange.call(controller, controller.getValue());\n        }\n      }, this);\n\n      common.each(this.__folders, function(folder) {\n        folder.revert(folder);\n      });\n\n      if (!gui) {\n        markPresetModified(this.getRoot(), false);\n      }\n    },\n\n    listen: function(controller) {\n      const init = this.__listening.length === 0;\n      this.__listening.push(controller);\n      if (init) {\n        updateDisplays(this.__listening);\n      }\n    },\n\n    updateDisplay: function() {\n      common.each(this.__controllers, function(controller) {\n        controller.updateDisplay();\n      });\n      common.each(this.__folders, function(folder) {\n        folder.updateDisplay();\n      });\n    }\n  }\n);\n\n/**\n * Add a row to the end of the GUI or before another row.\n *\n * @param gui\n * @param [newDom] If specified, inserts the dom content in the new row\n * @param [liBefore] If specified, places the new row before another row\n *\n * @ignore\n */\nfunction addRow(gui, newDom, liBefore) {\n  const li = document.createElement('li');\n  if (newDom) {\n    li.appendChild(newDom);\n  }\n\n  if (liBefore) {\n    gui.__ul.insertBefore(li, liBefore);\n  } else {\n    gui.__ul.appendChild(li);\n  }\n  gui.onResize();\n  return li;\n}\n\nfunction removeListeners(gui) {\n  dom.unbind(window, 'resize', gui.__resizeHandler);\n\n  if (gui.saveToLocalStorageIfPossible) {\n    dom.unbind(window, 'unload', gui.saveToLocalStorageIfPossible);\n  }\n}\n\nfunction markPresetModified(gui, modified) {\n  const opt = gui.__preset_select[gui.__preset_select.selectedIndex];\n\n  if (modified) {\n    opt.innerHTML = opt.value + '*';\n  } else {\n    opt.innerHTML = opt.value;\n  }\n}\n\nfunction augmentController(gui, li, controller) {\n  controller.__li = li;\n  controller.__gui = gui;\n\n  common.extend(controller, /** @lends Controller.prototype */ {\n    /**\n     * @param  {Array|Object} options\n     * @return {Controller}\n     */\n    options: function(options) {\n      if (arguments.length > 1) {\n        const nextSibling = controller.__li.nextElementSibling;\n        controller.remove();\n\n        return add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: nextSibling,\n            factoryArgs: [common.toArray(arguments)]\n          }\n        );\n      }\n\n      if (common.isArray(options) || common.isObject(options)) {\n        const nextSibling = controller.__li.nextElementSibling;\n        controller.remove();\n\n        return add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: nextSibling,\n            factoryArgs: [options]\n          }\n        );\n      }\n    },\n\n    /**\n     * Sets the name of the controller.\n     * @param  {string} name\n     * @return {Controller}\n     */\n    name: function(name) {\n      controller.__li.firstElementChild.firstElementChild.innerHTML = name;\n      return controller;\n    },\n\n    /**\n     * Sets controller to listen for changes on its underlying object.\n     * @return {Controller}\n     */\n    listen: function() {\n      controller.__gui.listen(controller);\n      return controller;\n    },\n\n    /**\n     * Removes the controller from its parent GUI.\n     * @return {Controller}\n     */\n    remove: function() {\n      controller.__gui.remove(controller);\n      return controller;\n    }\n  });\n\n  // All sliders should be accompanied by a box.\n  if (controller instanceof NumberControllerSlider) {\n    const box = new NumberControllerBox(controller.object, controller.property,\n      { min: controller.__min, max: controller.__max, step: controller.__step });\n\n    common.each(['updateDisplay', 'onChange', 'onFinishChange', 'step', 'min', 'max'], function(method) {\n      const pc = controller[method];\n      const pb = box[method];\n      controller[method] = box[method] = function() {\n        const args = Array.prototype.slice.call(arguments);\n        pb.apply(box, args);\n        return pc.apply(controller, args);\n      };\n    });\n\n    dom.addClass(li, 'has-slider');\n    controller.domElement.insertBefore(box.domElement, controller.domElement.firstElementChild);\n  } else if (controller instanceof NumberControllerBox) {\n    const r = function(returned) {\n      // Have we defined both boundaries?\n      if (common.isNumber(controller.__min) && common.isNumber(controller.__max)) {\n        // Well, then lets just replace this with a slider.\n\n        // lets remember if the old controller had a specific name or was listening\n        const oldName = controller.__li.firstElementChild.firstElementChild.innerHTML;\n        const wasListening = controller.__gui.__listening.indexOf(controller) > -1;\n\n        controller.remove();\n        const newController = add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: controller.__li.nextElementSibling,\n            factoryArgs: [controller.__min, controller.__max, controller.__step]\n          });\n\n        newController.name(oldName);\n        if (wasListening) newController.listen();\n\n        return newController;\n      }\n\n      return returned;\n    };\n\n    controller.min = common.compose(r, controller.min);\n    controller.max = common.compose(r, controller.max);\n  } else if (controller instanceof BooleanController) {\n    dom.bind(li, 'click', function() {\n      dom.fakeEvent(controller.__checkbox, 'click');\n    });\n\n    dom.bind(controller.__checkbox, 'click', function(e) {\n      e.stopPropagation(); // Prevents double-toggle\n    });\n  } else if (controller instanceof FunctionController) {\n    dom.bind(li, 'click', function() {\n      dom.fakeEvent(controller.__button, 'click');\n    });\n\n    dom.bind(li, 'mouseover', function() {\n      dom.addClass(controller.__button, 'hover');\n    });\n\n    dom.bind(li, 'mouseout', function() {\n      dom.removeClass(controller.__button, 'hover');\n    });\n  } else if (controller instanceof ColorController) {\n    dom.addClass(li, 'color');\n    controller.updateDisplay = common.compose(function(val) {\n      li.style.borderLeftColor = controller.__color.toString();\n      return val;\n    }, controller.updateDisplay);\n\n    controller.updateDisplay();\n  }\n\n  controller.setValue = common.compose(function(val) {\n    if (gui.getRoot().__preset_select && controller.isModified()) {\n      markPresetModified(gui.getRoot(), true);\n    }\n\n    return val;\n  }, controller.setValue);\n}\n\nfunction recallSavedValue(gui, controller) {\n  // Find the topmost GUI, that's where remembered objects live.\n  const root = gui.getRoot();\n\n  // Does the object we're controlling match anything we've been told to\n  // remember?\n  const matchedIndex = root.__rememberedObjects.indexOf(controller.object);\n\n  // Why yes, it does!\n  if (matchedIndex !== -1) {\n    // Let me fetch a map of controllers for thcommon.isObject.\n    let controllerMap = root.__rememberedObjectIndecesToControllers[matchedIndex];\n\n    // Ohp, I believe this is the first controller we've created for this\n    // object. Lets make the map fresh.\n    if (controllerMap === undefined) {\n      controllerMap = {};\n      root.__rememberedObjectIndecesToControllers[matchedIndex] =\n        controllerMap;\n    }\n\n    // Keep track of this controller\n    controllerMap[controller.property] = controller;\n\n    // Okay, now have we saved any values for this controller?\n    if (root.load && root.load.remembered) {\n      const presetMap = root.load.remembered;\n\n      // Which preset are we trying to load?\n      let preset;\n\n      if (presetMap[gui.preset]) {\n        preset = presetMap[gui.preset];\n      } else if (presetMap[DEFAULT_DEFAULT_PRESET_NAME]) {\n        // Uhh, you can have the default instead?\n        preset = presetMap[DEFAULT_DEFAULT_PRESET_NAME];\n      } else {\n        // Nada.\n        return;\n      }\n\n      // Did the loaded object remember thcommon.isObject? &&  Did we remember this particular property?\n      if (preset[matchedIndex] && preset[matchedIndex][controller.property] !== undefined) {\n        // We did remember something for this guy ...\n        const value = preset[matchedIndex][controller.property];\n\n        // And that's what it is.\n        controller.initialValue = value;\n        controller.setValue(value);\n      }\n    }\n  }\n}\n\nfunction add(gui, object, property, params) {\n  if (object[property] === undefined) {\n    throw new Error(`Object \"${object}\" has no property \"${property}\"`);\n  }\n\n  let controller;\n\n  if (params.color) {\n    controller = new ColorController(object, property);\n  } else {\n    const factoryArgs = [object, property].concat(params.factoryArgs);\n    controller = ControllerFactory.apply(gui, factoryArgs);\n  }\n\n  if (params.before instanceof Controller) {\n    params.before = params.before.__li;\n  }\n\n  recallSavedValue(gui, controller);\n\n  dom.addClass(controller.domElement, 'c');\n\n  const name = document.createElement('span');\n  dom.addClass(name, 'property-name');\n  name.innerHTML = controller.property;\n\n  const container = document.createElement('div');\n  container.appendChild(name);\n  container.appendChild(controller.domElement);\n\n  const li = addRow(gui, container, params.before);\n\n  dom.addClass(li, GUI.CLASS_CONTROLLER_ROW);\n  if (controller instanceof ColorController) {\n    dom.addClass(li, 'color');\n  } else {\n    dom.addClass(li, typeof controller.getValue());\n  }\n\n  augmentController(gui, li, controller);\n\n  gui.__controllers.push(controller);\n\n  return controller;\n}\n\nfunction getLocalStorageHash(gui, key) {\n  // TODO how does this deal with multiple GUI's?\n  return document.location.href + '.' + key;\n}\n\nfunction addPresetOption(gui, name, setSelected) {\n  const opt = document.createElement('option');\n  opt.innerHTML = name;\n  opt.value = name;\n  gui.__preset_select.appendChild(opt);\n  if (setSelected) {\n    gui.__preset_select.selectedIndex = gui.__preset_select.length - 1;\n  }\n}\n\nfunction showHideExplain(gui, explain) {\n  explain.style.display = gui.useLocalStorage ? 'block' : 'none';\n}\n\nfunction addSaveMenu(gui) {\n  const div = gui.__save_row = document.createElement('li');\n\n  dom.addClass(gui.domElement, 'has-save');\n\n  gui.__ul.insertBefore(div, gui.__ul.firstChild);\n\n  dom.addClass(div, 'save-row');\n\n  const gears = document.createElement('span');\n  gears.innerHTML = '&nbsp;';\n  dom.addClass(gears, 'button gears');\n\n  // TODO replace with FunctionController\n  const button = document.createElement('span');\n  button.innerHTML = 'Save';\n  dom.addClass(button, 'button');\n  dom.addClass(button, 'save');\n\n  const button2 = document.createElement('span');\n  button2.innerHTML = 'New';\n  dom.addClass(button2, 'button');\n  dom.addClass(button2, 'save-as');\n\n  const button3 = document.createElement('span');\n  button3.innerHTML = 'Revert';\n  dom.addClass(button3, 'button');\n  dom.addClass(button3, 'revert');\n\n  const select = gui.__preset_select = document.createElement('select');\n\n  if (gui.load && gui.load.remembered) {\n    common.each(gui.load.remembered, function(value, key) {\n      addPresetOption(gui, key, key === gui.preset);\n    });\n  } else {\n    addPresetOption(gui, DEFAULT_DEFAULT_PRESET_NAME, false);\n  }\n\n  dom.bind(select, 'change', function() {\n    for (let index = 0; index < gui.__preset_select.length; index++) {\n      gui.__preset_select[index].innerHTML = gui.__preset_select[index].value;\n    }\n\n    gui.preset = this.value;\n  });\n\n  div.appendChild(select);\n  div.appendChild(gears);\n  div.appendChild(button);\n  div.appendChild(button2);\n  div.appendChild(button3);\n\n  if (SUPPORTS_LOCAL_STORAGE) {\n    const explain = document.getElementById('dg-local-explain');\n    const localStorageCheckBox = document.getElementById('dg-local-storage');\n    const saveLocally = document.getElementById('dg-save-locally');\n\n    saveLocally.style.display = 'block';\n\n    if (localStorage.getItem(getLocalStorageHash(gui, 'isLocal')) === 'true') {\n      localStorageCheckBox.setAttribute('checked', 'checked');\n    }\n\n    showHideExplain(gui, explain);\n\n    // TODO: Use a boolean controller, fool!\n    dom.bind(localStorageCheckBox, 'change', function() {\n      gui.useLocalStorage = !gui.useLocalStorage;\n      showHideExplain(gui, explain);\n    });\n  }\n\n  const newConstructorTextArea = document.getElementById('dg-new-constructor');\n\n  dom.bind(newConstructorTextArea, 'keydown', function(e) {\n    if (e.metaKey && (e.which === 67 || e.keyCode === 67)) {\n      SAVE_DIALOGUE.hide();\n    }\n  });\n\n  dom.bind(gears, 'click', function() {\n    newConstructorTextArea.innerHTML = JSON.stringify(gui.getSaveObject(), undefined, 2);\n    SAVE_DIALOGUE.show();\n    newConstructorTextArea.focus();\n    newConstructorTextArea.select();\n  });\n\n  dom.bind(button, 'click', function() {\n    gui.save();\n  });\n\n  dom.bind(button2, 'click', function() {\n    const presetName = prompt('Enter a new preset name.');\n    if (presetName) {\n      gui.saveAs(presetName);\n    }\n  });\n\n  dom.bind(button3, 'click', function() {\n    gui.revert();\n  });\n\n  // div.appendChild(button2);\n}\n\nfunction addResizeHandle(gui) {\n  let pmouseX;\n\n  gui.__resize_handle = document.createElement('div');\n\n  common.extend(gui.__resize_handle.style, {\n\n    width: '6px',\n    marginLeft: '-3px',\n    height: '200px',\n    cursor: 'ew-resize',\n    position: 'absolute'\n    // border: '1px solid blue'\n\n  });\n\n  function drag(e) {\n    e.preventDefault();\n\n    gui.width += pmouseX - e.clientX;\n    gui.onResize();\n    pmouseX = e.clientX;\n\n    return false;\n  }\n\n  function dragStop() {\n    dom.removeClass(gui.__closeButton, GUI.CLASS_DRAG);\n    dom.unbind(window, 'mousemove', drag);\n    dom.unbind(window, 'mouseup', dragStop);\n  }\n\n  function dragStart(e) {\n    e.preventDefault();\n\n    pmouseX = e.clientX;\n\n    dom.addClass(gui.__closeButton, GUI.CLASS_DRAG);\n    dom.bind(window, 'mousemove', drag);\n    dom.bind(window, 'mouseup', dragStop);\n\n    return false;\n  }\n\n  dom.bind(gui.__resize_handle, 'mousedown', dragStart);\n  dom.bind(gui.__closeButton, 'mousedown', dragStart);\n\n  gui.domElement.insertBefore(gui.__resize_handle, gui.domElement.firstElementChild);\n}\n\nfunction setWidth(gui, w) {\n  gui.domElement.style.width = w + 'px';\n  // Auto placed save-rows are position fixed, so we have to\n  // set the width manually if we want it to bleed to the edge\n  if (gui.__save_row && gui.autoPlace) {\n    gui.__save_row.style.width = w + 'px';\n  }\n  if (gui.__closeButton) {\n    gui.__closeButton.style.width = w + 'px';\n  }\n}\n\nfunction getCurrentPreset(gui, useInitialValues) {\n  const toReturn = {};\n\n  // For each object I'm remembering\n  common.each(gui.__rememberedObjects, function(val, index) {\n    const savedValues = {};\n\n    // The controllers I've made for thcommon.isObject by property\n    const controllerMap =\n      gui.__rememberedObjectIndecesToControllers[index];\n\n    // Remember each value for each property\n    common.each(controllerMap, function(controller, property) {\n      savedValues[property] = useInitialValues ? controller.initialValue : controller.getValue();\n    });\n\n    // Save the values for thcommon.isObject\n    toReturn[index] = savedValues;\n  });\n\n  return toReturn;\n}\n\nfunction setPresetSelectIndex(gui) {\n  for (let index = 0; index < gui.__preset_select.length; index++) {\n    if (gui.__preset_select[index].value === gui.preset) {\n      gui.__preset_select.selectedIndex = index;\n    }\n  }\n}\n\nfunction updateDisplays(controllerArray) {\n  if (controllerArray.length !== 0) {\n    requestAnimationFrame.call(window, function() {\n      updateDisplays(controllerArray);\n    });\n  }\n\n  common.each(controllerArray, function(c) {\n    c.updateDisplay();\n  });\n}\n\nexport default GUI;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Color from './color/Color';\nimport math from './color/math';\nimport interpret from './color/interpret';\n\nimport Controller from './controllers/Controller';\nimport BooleanController from './controllers/BooleanController';\nimport OptionController from './controllers/OptionController';\nimport StringController from './controllers/StringController';\nimport NumberController from './controllers/NumberController';\nimport NumberControllerBox from './controllers/NumberControllerBox';\nimport NumberControllerSlider from './controllers/NumberControllerSlider';\nimport FunctionController from './controllers/FunctionController';\nimport ColorController from './controllers/ColorController';\n\nimport domImport from './dom/dom';\nimport GUIImport from './gui/GUI';\n\nexport const color = {\n  Color: Color,\n  math: math,\n  interpret: interpret\n};\n\nexport const controllers = {\n  Controller: Controller,\n  BooleanController: BooleanController,\n  OptionController: OptionController,\n  StringController: StringController,\n  NumberController: NumberController,\n  NumberControllerBox: NumberControllerBox,\n  NumberControllerSlider: NumberControllerSlider,\n  FunctionController: FunctionController,\n  ColorController: ColorController\n};\n\nexport const dom = { dom: domImport };\n\nexport const gui = { GUI: GUIImport };\n\nexport const GUI = GUIImport;\n\nexport default {\n  color,\n  controllers,\n  dom,\n  gui,\n  GUI\n};\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nexport default function(color, forceCSSHex) {\n  const colorFormat = color.__state.conversionName.toString();\n\n  const r = Math.round(color.r);\n  const g = Math.round(color.g);\n  const b = Math.round(color.b);\n  const a = color.a;\n  const h = Math.round(color.h);\n  const s = color.s.toFixed(1);\n  const v = color.v.toFixed(1);\n\n  if (forceCSSHex || (colorFormat === 'THREE_CHAR_HEX') || (colorFormat === 'SIX_CHAR_HEX')) {\n    let str = color.hex.toString(16);\n    while (str.length < 6) {\n      str = '0' + str;\n    }\n    return '#' + str;\n  } else if (colorFormat === 'CSS_RGB') {\n    return 'rgb(' + r + ',' + g + ',' + b + ')';\n  } else if (colorFormat === 'CSS_RGBA') {\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n  } else if (colorFormat === 'HEX') {\n    return '0x' + color.hex.toString(16);\n  } else if (colorFormat === 'RGB_ARRAY') {\n    return '[' + r + ',' + g + ',' + b + ']';\n  } else if (colorFormat === 'RGBA_ARRAY') {\n    return '[' + r + ',' + g + ',' + b + ',' + a + ']';\n  } else if (colorFormat === 'RGB_OBJ') {\n    return '{r:' + r + ',g:' + g + ',b:' + b + '}';\n  } else if (colorFormat === 'RGBA_OBJ') {\n    return '{r:' + r + ',g:' + g + ',b:' + b + ',a:' + a + '}';\n  } else if (colorFormat === 'HSV_OBJ') {\n    return '{h:' + h + ',s:' + s + ',v:' + v + '}';\n  } else if (colorFormat === 'HSVA_OBJ') {\n    return '{h:' + h + ',s:' + s + ',v:' + v + ',a:' + a + '}';\n  }\n\n  return 'unknown format';\n}\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nconst ARR_EACH = Array.prototype.forEach;\nconst ARR_SLICE = Array.prototype.slice;\n\n/**\n * Band-aid methods for things that should be a lot easier in JavaScript.\n * Implementation and structure inspired by underscore.js\n * http://documentcloud.github.com/underscore/\n */\n\nconst Common = {\n  BREAK: {},\n\n  extend: function(target) {\n    this.each(ARR_SLICE.call(arguments, 1), function(obj) {\n      const keys = this.isObject(obj) ? Object.keys(obj) : [];\n      keys.forEach(function(key) {\n        if (!this.isUndefined(obj[key])) {\n          target[key] = obj[key];\n        }\n      }.bind(this));\n    }, this);\n\n    return target;\n  },\n\n  defaults: function(target) {\n    this.each(ARR_SLICE.call(arguments, 1), function(obj) {\n      const keys = this.isObject(obj) ? Object.keys(obj) : [];\n      keys.forEach(function(key) {\n        if (this.isUndefined(target[key])) {\n          target[key] = obj[key];\n        }\n      }.bind(this));\n    }, this);\n\n    return target;\n  },\n\n  compose: function() {\n    const toCall = ARR_SLICE.call(arguments);\n    return function() {\n      let args = ARR_SLICE.call(arguments);\n      for (let i = toCall.length - 1; i >= 0; i--) {\n        args = [toCall[i].apply(this, args)];\n      }\n      return args[0];\n    };\n  },\n\n  each: function(obj, itr, scope) {\n    if (!obj) {\n      return;\n    }\n\n    if (ARR_EACH && obj.forEach && obj.forEach === ARR_EACH) {\n      obj.forEach(itr, scope);\n    } else if (obj.length === obj.length + 0) { // Is number but not NaN\n      let key;\n      let l;\n      for (key = 0, l = obj.length; key < l; key++) {\n        if (key in obj && itr.call(scope, obj[key], key) === this.BREAK) {\n          return;\n        }\n      }\n    } else {\n      for (const key in obj) {\n        if (itr.call(scope, obj[key], key) === this.BREAK) {\n          return;\n        }\n      }\n    }\n  },\n\n  defer: function(fnc) {\n    setTimeout(fnc, 0);\n  },\n\n  // if the function is called repeatedly, wait until threshold passes until we execute the function\n  debounce: function(func, threshold, callImmediately) {\n    let timeout;\n\n    return function() {\n      const obj = this;\n      const args = arguments;\n      function delayed() {\n        timeout = null;\n        if (!callImmediately) func.apply(obj, args);\n      }\n\n      const callNow = callImmediately || !timeout;\n\n      clearTimeout(timeout);\n      timeout = setTimeout(delayed, threshold);\n\n      if (callNow) {\n        func.apply(obj, args);\n      }\n    };\n  },\n\n  toArray: function(obj) {\n    if (obj.toArray) return obj.toArray();\n    return ARR_SLICE.call(obj);\n  },\n\n  isUndefined: function(obj) {\n    return obj === undefined;\n  },\n\n  isNull: function(obj) {\n    return obj === null;\n  },\n\n  isNaN: function(obj) {\n    return isNaN(obj);\n  },\n\n  isArray: Array.isArray || function(obj) {\n    return obj.constructor === Array;\n  },\n\n  isObject: function(obj) {\n    return obj === Object(obj);\n  },\n\n  isNumber: function(obj) {\n    return obj === obj + 0;\n  },\n\n  isString: function(obj) {\n    return obj === obj + '';\n  },\n\n  isBoolean: function(obj) {\n    return obj === false || obj === true;\n  },\n\n  isFunction: function(obj) {\n    return obj instanceof Function;\n  }\n\n};\n\nexport default Common;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport toString from './toString';\nimport common from '../utils/common';\n\nconst INTERPRETATIONS = [\n  // Strings\n  {\n    litmus: common.isString,\n    conversions: {\n      THREE_CHAR_HEX: {\n        read: function(original) {\n          const test = original.match(/^#([A-F0-9])([A-F0-9])([A-F0-9])$/i);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'HEX',\n            hex: parseInt(\n              '0x' +\n              test[1].toString() + test[1].toString() +\n              test[2].toString() + test[2].toString() +\n              test[3].toString() + test[3].toString(), 0)\n          };\n        },\n\n        write: toString\n      },\n\n      SIX_CHAR_HEX: {\n        read: function(original) {\n          const test = original.match(/^#([A-F0-9]{6})$/i);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'HEX',\n            hex: parseInt('0x' + test[1].toString(), 0)\n          };\n        },\n\n        write: toString\n      },\n\n      CSS_RGB: {\n        read: function(original) {\n          const test = original.match(/^rgb\\(\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*\\)/);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: parseFloat(test[1]),\n            g: parseFloat(test[2]),\n            b: parseFloat(test[3])\n          };\n        },\n\n        write: toString\n      },\n\n      CSS_RGBA: {\n        read: function(original) {\n          const test = original.match(/^rgba\\(\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*\\)/);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: parseFloat(test[1]),\n            g: parseFloat(test[2]),\n            b: parseFloat(test[3]),\n            a: parseFloat(test[4])\n          };\n        },\n\n        write: toString\n      }\n    }\n  },\n\n  // Numbers\n  {\n    litmus: common.isNumber,\n\n    conversions: {\n\n      HEX: {\n        read: function(original) {\n          return {\n            space: 'HEX',\n            hex: original,\n            conversionName: 'HEX'\n          };\n        },\n\n        write: function(color) {\n          return color.hex;\n        }\n      }\n\n    }\n\n  },\n\n  // Arrays\n  {\n    litmus: common.isArray,\n    conversions: {\n      RGB_ARRAY: {\n        read: function(original) {\n          if (original.length !== 3) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: original[0],\n            g: original[1],\n            b: original[2]\n          };\n        },\n\n        write: function(color) {\n          return [color.r, color.g, color.b];\n        }\n      },\n\n      RGBA_ARRAY: {\n        read: function(original) {\n          if (original.length !== 4) return false;\n          return {\n            space: 'RGB',\n            r: original[0],\n            g: original[1],\n            b: original[2],\n            a: original[3]\n          };\n        },\n\n        write: function(color) {\n          return [color.r, color.g, color.b, color.a];\n        }\n      }\n    }\n  },\n\n  // Objects\n  {\n    litmus: common.isObject,\n    conversions: {\n\n      RGBA_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.r) &&\n            common.isNumber(original.g) &&\n            common.isNumber(original.b) &&\n            common.isNumber(original.a)) {\n            return {\n              space: 'RGB',\n              r: original.r,\n              g: original.g,\n              b: original.b,\n              a: original.a\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            r: color.r,\n            g: color.g,\n            b: color.b,\n            a: color.a\n          };\n        }\n      },\n\n      RGB_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.r) &&\n            common.isNumber(original.g) &&\n            common.isNumber(original.b)) {\n            return {\n              space: 'RGB',\n              r: original.r,\n              g: original.g,\n              b: original.b\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            r: color.r,\n            g: color.g,\n            b: color.b\n          };\n        }\n      },\n\n      HSVA_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.h) &&\n            common.isNumber(original.s) &&\n            common.isNumber(original.v) &&\n            common.isNumber(original.a)) {\n            return {\n              space: 'HSV',\n              h: original.h,\n              s: original.s,\n              v: original.v,\n              a: original.a\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            h: color.h,\n            s: color.s,\n            v: color.v,\n            a: color.a\n          };\n        }\n      },\n\n      HSV_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.h) &&\n            common.isNumber(original.s) &&\n            common.isNumber(original.v)) {\n            return {\n              space: 'HSV',\n              h: original.h,\n              s: original.s,\n              v: original.v\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            h: color.h,\n            s: color.s,\n            v: color.v\n          };\n        }\n      }\n    }\n  }\n];\n\nlet result;\nlet toReturn;\n\nconst interpret = function() {\n  toReturn = false;\n\n  const original = arguments.length > 1 ? common.toArray(arguments) : arguments[0];\n  common.each(INTERPRETATIONS, function(family) {\n    if (family.litmus(original)) {\n      common.each(family.conversions, function(conversion, conversionName) {\n        result = conversion.read(original);\n\n        if (toReturn === false && result !== false) {\n          toReturn = result;\n          result.conversionName = conversionName;\n          result.conversion = conversion;\n          return common.BREAK;\n        }\n      });\n\n      return common.BREAK;\n    }\n  });\n\n  return toReturn;\n};\n\nexport default interpret;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nlet tmpComponent;\n\nconst ColorMath = {\n  hsv_to_rgb: function(h, s, v) {\n    const hi = Math.floor(h / 60) % 6;\n\n    const f = h / 60 - Math.floor(h / 60);\n    const p = v * (1.0 - s);\n    const q = v * (1.0 - (f * s));\n    const t = v * (1.0 - ((1.0 - f) * s));\n\n    const c = [\n      [v, t, p],\n      [q, v, p],\n      [p, v, t],\n      [p, q, v],\n      [t, p, v],\n      [v, p, q]\n    ][hi];\n\n    return {\n      r: c[0] * 255,\n      g: c[1] * 255,\n      b: c[2] * 255\n    };\n  },\n\n  rgb_to_hsv: function(r, g, b) {\n    const min = Math.min(r, g, b);\n    const max = Math.max(r, g, b);\n    const delta = max - min;\n    let h;\n    let s;\n\n    if (max !== 0) {\n      s = delta / max;\n    } else {\n      return {\n        h: NaN,\n        s: 0,\n        v: 0\n      };\n    }\n\n    if (r === max) {\n      h = (g - b) / delta;\n    } else if (g === max) {\n      h = 2 + (b - r) / delta;\n    } else {\n      h = 4 + (r - g) / delta;\n    }\n    h /= 6;\n    if (h < 0) {\n      h += 1;\n    }\n\n    return {\n      h: h * 360,\n      s: s,\n      v: max / 255\n    };\n  },\n\n  rgb_to_hex: function(r, g, b) {\n    let hex = this.hex_with_component(0, 2, r);\n    hex = this.hex_with_component(hex, 1, g);\n    hex = this.hex_with_component(hex, 0, b);\n    return hex;\n  },\n\n  component_from_hex: function(hex, componentIndex) {\n    return (hex >> (componentIndex * 8)) & 0xFF;\n  },\n\n  hex_with_component: function(hex, componentIndex, value) {\n    return value << (tmpComponent = componentIndex * 8) | (hex & ~(0xFF << tmpComponent));\n  }\n};\n\nexport default ColorMath;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport interpret from './interpret';\nimport math from './math';\nimport colorToString from './toString';\nimport common from '../utils/common';\n\nclass Color {\n  constructor() {\n    this.__state = interpret.apply(this, arguments);\n\n    if (this.__state === false) {\n      throw new Error('Failed to interpret color arguments');\n    }\n\n    this.__state.a = this.__state.a || 1;\n  }\n\n  toString() {\n    return colorToString(this);\n  }\n\n  toHexString() {\n    return colorToString(this, true);\n  }\n\n  toOriginal() {\n    return this.__state.conversion.write(this);\n  }\n}\n\nfunction defineRGBComponent(target, component, componentHexIndex) {\n  Object.defineProperty(target, component, {\n    get: function() {\n      if (this.__state.space === 'RGB') {\n        return this.__state[component];\n      }\n\n      Color.recalculateRGB(this, component, componentHexIndex);\n\n      return this.__state[component];\n    },\n\n    set: function(v) {\n      if (this.__state.space !== 'RGB') {\n        Color.recalculateRGB(this, component, componentHexIndex);\n        this.__state.space = 'RGB';\n      }\n\n      this.__state[component] = v;\n    }\n  });\n}\n\nfunction defineHSVComponent(target, component) {\n  Object.defineProperty(target, component, {\n    get: function() {\n      if (this.__state.space === 'HSV') {\n        return this.__state[component];\n      }\n\n      Color.recalculateHSV(this);\n\n      return this.__state[component];\n    },\n\n    set: function(v) {\n      if (this.__state.space !== 'HSV') {\n        Color.recalculateHSV(this);\n        this.__state.space = 'HSV';\n      }\n\n      this.__state[component] = v;\n    }\n  });\n}\n\n\nColor.recalculateRGB = function(color, component, componentHexIndex) {\n  if (color.__state.space === 'HEX') {\n    color.__state[component] = math.component_from_hex(color.__state.hex, componentHexIndex);\n  } else if (color.__state.space === 'HSV') {\n    common.extend(color.__state, math.hsv_to_rgb(color.__state.h, color.__state.s, color.__state.v));\n  } else {\n    throw new Error('Corrupted color state');\n  }\n};\n\nColor.recalculateHSV = function(color) {\n  const result = math.rgb_to_hsv(color.r, color.g, color.b);\n\n  common.extend(color.__state,\n    {\n      s: result.s,\n      v: result.v\n    }\n  );\n\n  if (!common.isNaN(result.h)) {\n    color.__state.h = result.h;\n  } else if (common.isUndefined(color.__state.h)) {\n    color.__state.h = 0;\n  }\n};\n\nColor.COMPONENTS = ['r', 'g', 'b', 'h', 's', 'v', 'hex', 'a'];\n\ndefineRGBComponent(Color.prototype, 'r', 2);\ndefineRGBComponent(Color.prototype, 'g', 1);\ndefineRGBComponent(Color.prototype, 'b', 0);\n\ndefineHSVComponent(Color.prototype, 'h');\ndefineHSVComponent(Color.prototype, 's');\ndefineHSVComponent(Color.prototype, 'v');\n\nObject.defineProperty(Color.prototype, 'a', {\n  get: function() {\n    return this.__state.a;\n  },\n\n  set: function(v) {\n    this.__state.a = v;\n  }\n});\n\nObject.defineProperty(Color.prototype, 'hex', {\n  get: function() {\n    if (this.__state.space !== 'HEX') {\n      this.__state.hex = math.rgb_to_hex(this.r, this.g, this.b);\n      this.__state.space = 'HEX';\n    }\n\n    return this.__state.hex;\n  },\n\n  set: function(v) {\n    this.__state.space = 'HEX';\n    this.__state.hex = v;\n  }\n});\n\nexport default Color;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\n/**\n * @class An \"abstract\" class that represents a given property of an object.\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass Controller {\n  constructor(object, property) {\n    this.initialValue = object[property];\n\n    /**\n     * Those who extend this class will put their DOM elements in here.\n     * @type {DOMElement}\n     */\n    this.domElement = document.createElement('div');\n\n    /**\n     * The object to manipulate\n     * @type {Object}\n     */\n    this.object = object;\n\n    /**\n     * The name of the property to manipulate\n     * @type {String}\n     */\n    this.property = property;\n\n    /**\n     * The function to be called on change.\n     * @type {Function}\n     * @ignore\n     */\n    this.__onChange = undefined;\n\n    /**\n     * The function to be called on finishing change.\n     * @type {Function}\n     * @ignore\n     */\n    this.__onFinishChange = undefined;\n  }\n\n  /**\n   * Specify that a function fire every time someone changes the value with\n   * this Controller.\n   *\n   * @param {Function} fnc This function will be called whenever the value\n   * is modified via this Controller.\n   * @returns {Controller} this\n   */\n  onChange(fnc) {\n    this.__onChange = fnc;\n    return this;\n  }\n\n  /**\n   * Specify that a function fire every time someone \"finishes\" changing\n   * the value wih this Controller. Useful for values that change\n   * incrementally like numbers or strings.\n   *\n   * @param {Function} fnc This function will be called whenever\n   * someone \"finishes\" changing the value via this Controller.\n   * @returns {Controller} this\n   */\n  onFinishChange(fnc) {\n    this.__onFinishChange = fnc;\n    return this;\n  }\n\n  /**\n   * Change the value of <code>object[property]</code>\n   *\n   * @param {Object} newValue The new value of <code>object[property]</code>\n   */\n  setValue(newValue) {\n    this.object[this.property] = newValue;\n    if (this.__onChange) {\n      this.__onChange.call(this, newValue);\n    }\n\n    this.updateDisplay();\n    return this;\n  }\n\n  /**\n   * Gets the value of <code>object[property]</code>\n   *\n   * @returns {Object} The current value of <code>object[property]</code>\n   */\n  getValue() {\n    return this.object[this.property];\n  }\n\n  /**\n   * Refreshes the visual display of a Controller in order to keep sync\n   * with the object's current value.\n   * @returns {Controller} this\n   */\n  updateDisplay() {\n    return this;\n  }\n\n  /**\n   * @returns {Boolean} true if the value has deviated from initialValue\n   */\n  isModified() {\n    return this.initialValue !== this.getValue();\n  }\n}\n\nexport default Controller;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport common from '../utils/common';\n\nconst EVENT_MAP = {\n  HTMLEvents: ['change'],\n  MouseEvents: ['click', 'mousemove', 'mousedown', 'mouseup', 'mouseover'],\n  KeyboardEvents: ['keydown']\n};\n\nconst EVENT_MAP_INV = {};\ncommon.each(EVENT_MAP, function(v, k) {\n  common.each(v, function(e) {\n    EVENT_MAP_INV[e] = k;\n  });\n});\n\nconst CSS_VALUE_PIXELS = /(\\d+(\\.\\d+)?)px/;\n\nfunction cssValueToPixels(val) {\n  if (val === '0' || common.isUndefined(val)) {\n    return 0;\n  }\n\n  const match = val.match(CSS_VALUE_PIXELS);\n\n  if (!common.isNull(match)) {\n    return parseFloat(match[1]);\n  }\n\n  // TODO ...ems? %?\n\n  return 0;\n}\n\n/**\n * @namespace\n * @member dat.dom\n */\nconst dom = {\n\n  /**\n   *\n   * @param elem\n   * @param selectable\n   */\n  makeSelectable: function(elem, selectable) {\n    if (elem === undefined || elem.style === undefined) return;\n\n    elem.onselectstart = selectable ? function() {\n      return false;\n    } : function() {\n    };\n\n    elem.style.MozUserSelect = selectable ? 'auto' : 'none';\n    elem.style.KhtmlUserSelect = selectable ? 'auto' : 'none';\n    elem.unselectable = selectable ? 'on' : 'off';\n  },\n\n  /**\n   *\n   * @param elem\n   * @param horizontal\n   * @param vert\n   */\n  makeFullscreen: function(elem, hor, vert) {\n    let vertical = vert;\n    let horizontal = hor;\n\n    if (common.isUndefined(horizontal)) {\n      horizontal = true;\n    }\n\n    if (common.isUndefined(vertical)) {\n      vertical = true;\n    }\n\n    elem.style.position = 'absolute';\n\n    if (horizontal) {\n      elem.style.left = 0;\n      elem.style.right = 0;\n    }\n    if (vertical) {\n      elem.style.top = 0;\n      elem.style.bottom = 0;\n    }\n  },\n\n  /**\n   *\n   * @param elem\n   * @param eventType\n   * @param params\n   */\n  fakeEvent: function(elem, eventType, pars, aux) {\n    const params = pars || {};\n    const className = EVENT_MAP_INV[eventType];\n    if (!className) {\n      throw new Error('Event type ' + eventType + ' not supported.');\n    }\n    const evt = document.createEvent(className);\n    switch (className) {\n      case 'MouseEvents':\n        {\n          const clientX = params.x || params.clientX || 0;\n          const clientY = params.y || params.clientY || 0;\n          evt.initMouseEvent(eventType, params.bubbles || false,\n            params.cancelable || true, window, params.clickCount || 1,\n            0, // screen X\n            0, // screen Y\n            clientX, // client X\n            clientY, // client Y\n            false, false, false, false, 0, null);\n          break;\n        }\n      case 'KeyboardEvents':\n        {\n          const init = evt.initKeyboardEvent || evt.initKeyEvent; // webkit || moz\n          common.defaults(params, {\n            cancelable: true,\n            ctrlKey: false,\n            altKey: false,\n            shiftKey: false,\n            metaKey: false,\n            keyCode: undefined,\n            charCode: undefined\n          });\n          init(eventType, params.bubbles || false,\n            params.cancelable, window,\n            params.ctrlKey, params.altKey,\n            params.shiftKey, params.metaKey,\n            params.keyCode, params.charCode);\n          break;\n        }\n      default:\n        {\n          evt.initEvent(eventType, params.bubbles || false, params.cancelable || true);\n          break;\n        }\n    }\n    common.defaults(evt, aux);\n    elem.dispatchEvent(evt);\n  },\n\n  /**\n   *\n   * @param elem\n   * @param event\n   * @param func\n   * @param bool\n   */\n  bind: function(elem, event, func, newBool) {\n    const bool = newBool || false;\n    if (elem.addEventListener) {\n      elem.addEventListener(event, func, bool);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + event, func);\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param event\n   * @param func\n   * @param bool\n   */\n  unbind: function(elem, event, func, newBool) {\n    const bool = newBool || false;\n    if (elem.removeEventListener) {\n      elem.removeEventListener(event, func, bool);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + event, func);\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param className\n   */\n  addClass: function(elem, className) {\n    if (elem.className === undefined) {\n      elem.className = className;\n    } else if (elem.className !== className) {\n      const classes = elem.className.split(/ +/);\n      if (classes.indexOf(className) === -1) {\n        classes.push(className);\n        elem.className = classes.join(' ').replace(/^\\s+/, '').replace(/\\s+$/, '');\n      }\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param className\n   */\n  removeClass: function(elem, className) {\n    if (className) {\n      if (elem.className === className) {\n        elem.removeAttribute('class');\n      } else {\n        const classes = elem.className.split(/ +/);\n        const index = classes.indexOf(className);\n        if (index !== -1) {\n          classes.splice(index, 1);\n          elem.className = classes.join(' ');\n        }\n      }\n    } else {\n      elem.className = undefined;\n    }\n    return dom;\n  },\n\n  hasClass: function(elem, className) {\n    return new RegExp('(?:^|\\\\s+)' + className + '(?:\\\\s+|$)').test(elem.className) || false;\n  },\n\n  /**\n   *\n   * @param elem\n   */\n  getWidth: function(elem) {\n    const style = getComputedStyle(elem);\n\n    return cssValueToPixels(style['border-left-width']) +\n      cssValueToPixels(style['border-right-width']) +\n      cssValueToPixels(style['padding-left']) +\n      cssValueToPixels(style['padding-right']) +\n      cssValueToPixels(style.width);\n  },\n\n  /**\n   *\n   * @param elem\n   */\n  getHeight: function(elem) {\n    const style = getComputedStyle(elem);\n\n    return cssValueToPixels(style['border-top-width']) +\n      cssValueToPixels(style['border-bottom-width']) +\n      cssValueToPixels(style['padding-top']) +\n      cssValueToPixels(style['padding-bottom']) +\n      cssValueToPixels(style.height);\n  },\n\n  /**\n   *\n   * @param el\n   */\n  getOffset: function(el) {\n    let elem = el;\n    const offset = { left: 0, top: 0 };\n    if (elem.offsetParent) {\n      do {\n        offset.left += elem.offsetLeft;\n        offset.top += elem.offsetTop;\n        elem = elem.offsetParent;\n      } while (elem);\n    }\n    return offset;\n  },\n\n  // http://stackoverflow.com/posts/2684561/revisions\n  /**\n   *\n   * @param elem\n   */\n  isActive: function(elem) {\n    return elem === document.activeElement && (elem.type || elem.href);\n  }\n\n};\n\nexport default dom;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a checkbox input to alter the boolean property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass BooleanController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    const _this = this;\n    this.__prev = this.getValue();\n\n    this.__checkbox = document.createElement('input');\n    this.__checkbox.setAttribute('type', 'checkbox');\n\n    function onChange() {\n      _this.setValue(!_this.__prev);\n    }\n\n    dom.bind(this.__checkbox, 'change', onChange, false);\n\n    this.domElement.appendChild(this.__checkbox);\n\n    // Match original value\n    this.updateDisplay();\n  }\n\n  setValue(v) {\n    const toReturn = super.setValue(v);\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n    this.__prev = this.getValue();\n    return toReturn;\n  }\n\n  updateDisplay() {\n    if (this.getValue() === true) {\n      this.__checkbox.setAttribute('checked', 'checked');\n      this.__checkbox.checked = true;\n      this.__prev = true;\n    } else {\n      this.__checkbox.checked = false;\n      this.__prev = false;\n    }\n\n    return super.updateDisplay();\n  }\n}\n\nexport default BooleanController;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\n/**\n * @class Provides a select input to alter the property of an object, using a\n * list of accepted values.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object|string[]} options A map of labels to acceptable values, or\n * a list of acceptable string values.\n */\nclass OptionController extends Controller {\n  constructor(object, property, opts) {\n    super(object, property);\n\n    let options = opts;\n\n    const _this = this;\n\n    /**\n     * The drop down menu\n     * @ignore\n     */\n    this.__select = document.createElement('select');\n\n    if (common.isArray(options)) {\n      const map = {};\n      common.each(options, function(element) {\n        map[element] = element;\n      });\n      options = map;\n    }\n\n    common.each(options, function(value, key) {\n      const opt = document.createElement('option');\n      opt.innerHTML = key;\n      opt.setAttribute('value', value);\n      _this.__select.appendChild(opt);\n    });\n\n    // Acknowledge original value\n    this.updateDisplay();\n\n    dom.bind(this.__select, 'change', function() {\n      const desiredValue = this.options[this.selectedIndex].value;\n      _this.setValue(desiredValue);\n    });\n\n    this.domElement.appendChild(this.__select);\n  }\n\n  setValue(v) {\n    const toReturn = super.setValue(v);\n\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n    return toReturn;\n  }\n\n  updateDisplay() {\n    if (dom.isActive(this.__select)) return this; // prevent number from updating if user is trying to manually update\n    this.__select.value = this.getValue();\n    return super.updateDisplay();\n  }\n}\n\nexport default OptionController;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a text input to alter the string property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass StringController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    const _this = this;\n\n    function onChange() {\n      _this.setValue(_this.__input.value);\n    }\n\n    function onBlur() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    this.__input = document.createElement('input');\n    this.__input.setAttribute('type', 'text');\n\n    dom.bind(this.__input, 'keyup', onChange);\n    dom.bind(this.__input, 'change', onChange);\n    dom.bind(this.__input, 'blur', onBlur);\n    dom.bind(this.__input, 'keydown', function(e) {\n      if (e.keyCode === 13) {\n        this.blur();\n      }\n    });\n\n    this.updateDisplay();\n\n    this.domElement.appendChild(this.__input);\n  }\n\n  updateDisplay() {\n    // Stops the caret from moving on account of:\n    // keyup -> setValue -> updateDisplay\n    if (!dom.isActive(this.__input)) {\n      this.__input.value = this.getValue();\n    }\n    return super.updateDisplay();\n  }\n}\n\nexport default StringController;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport common from '../utils/common';\n\nfunction numDecimals(x) {\n  const _x = x.toString();\n  if (_x.indexOf('.') > -1) {\n    return _x.length - _x.indexOf('.') - 1;\n  }\n\n  return 0;\n}\n\n/**\n * @class Represents a given property of an object that is a number.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object} [params] Optional parameters\n * @param {Number} [params.min] Minimum allowed value\n * @param {Number} [params.max] Maximum allowed value\n * @param {Number} [params.step] Increment by which to change value\n */\nclass NumberController extends Controller {\n  constructor(object, property, params) {\n    super(object, property);\n\n    const _params = params || {};\n\n    this.__min = _params.min;\n    this.__max = _params.max;\n    this.__step = _params.step;\n\n    if (common.isUndefined(this.__step)) {\n      if (this.initialValue === 0) {\n        this.__impliedStep = 1; // What are we, psychics?\n      } else {\n        // Hey Doug, check this out.\n        this.__impliedStep = Math.pow(10, Math.floor(Math.log(Math.abs(this.initialValue)) / Math.LN10)) / 10;\n      }\n    } else {\n      this.__impliedStep = this.__step;\n    }\n\n    this.__precision = numDecimals(this.__impliedStep);\n  }\n\n  setValue(v) {\n    let _v = v;\n\n    if (this.__min !== undefined && _v < this.__min) {\n      _v = this.__min;\n    } else if (this.__max !== undefined && _v > this.__max) {\n      _v = this.__max;\n    }\n\n    if (this.__step !== undefined && _v % this.__step !== 0) {\n      _v = Math.round(_v / this.__step) * this.__step;\n    }\n\n    return super.setValue(_v);\n  }\n\n  /**\n   * Specify a minimum value for <code>object[property]</code>.\n   *\n   * @param {Number} minValue The minimum value for\n   * <code>object[property]</code>\n   * @returns {dat.controllers.NumberController} this\n   */\n  min(minValue) {\n    this.__min = minValue;\n    return this;\n  }\n\n  /**\n   * Specify a maximum value for <code>object[property]</code>.\n   *\n   * @param {Number} maxValue The maximum value for\n   * <code>object[property]</code>\n   * @returns {dat.controllers.NumberController} this\n   */\n  max(maxValue) {\n    this.__max = maxValue;\n    return this;\n  }\n\n  /**\n   * Specify a step value that dat.controllers.NumberController\n   * increments by.\n   *\n   * @param {Number} stepValue The step value for\n   * dat.controllers.NumberController\n   * @default if minimum and maximum specified increment is 1% of the\n   * difference otherwise stepValue is 1\n   * @returns {dat.controllers.NumberController} this\n   */\n  step(stepValue) {\n    this.__step = stepValue;\n    this.__impliedStep = stepValue;\n    this.__precision = numDecimals(stepValue);\n    return this;\n  }\n}\n\nexport default NumberController;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport NumberController from './NumberController';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\nfunction roundToDecimal(value, decimals) {\n  const tenTo = Math.pow(10, decimals);\n  return Math.round(value * tenTo) / tenTo;\n}\n\n/**\n * @class Represents a given property of an object that is a number and\n * provides an input element with which to manipulate it.\n *\n * @extends dat.controllers.Controller\n * @extends dat.controllers.NumberController\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object} [params] Optional parameters\n * @param {Number} [params.min] Minimum allowed value\n * @param {Number} [params.max] Maximum allowed value\n * @param {Number} [params.step] Increment by which to change value\n */\nclass NumberControllerBox extends NumberController {\n  constructor(object, property, params) {\n    super(object, property, params);\n\n    this.__truncationSuspended = false;\n\n    const _this = this;\n\n    /**\n     * {Number} Previous mouse y position\n     * @ignore\n     */\n    let prevY;\n\n    function onChange() {\n      const attempted = parseFloat(_this.__input.value);\n      if (!common.isNaN(attempted)) {\n        _this.setValue(attempted);\n      }\n    }\n\n    function onFinish() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    function onBlur() {\n      onFinish();\n    }\n\n    function onMouseDrag(e) {\n      const diff = prevY - e.clientY;\n      _this.setValue(_this.getValue() + diff * _this.__impliedStep);\n\n      prevY = e.clientY;\n    }\n\n    function onMouseUp() {\n      dom.unbind(window, 'mousemove', onMouseDrag);\n      dom.unbind(window, 'mouseup', onMouseUp);\n      onFinish();\n    }\n\n    function onMouseDown(e) {\n      dom.bind(window, 'mousemove', onMouseDrag);\n      dom.bind(window, 'mouseup', onMouseUp);\n      prevY = e.clientY;\n    }\n\n    this.__input = document.createElement('input');\n    this.__input.setAttribute('type', 'text');\n\n    // Makes it so manually specified values are not truncated.\n\n    dom.bind(this.__input, 'change', onChange);\n    dom.bind(this.__input, 'blur', onBlur);\n    dom.bind(this.__input, 'mousedown', onMouseDown);\n    dom.bind(this.__input, 'keydown', function(e) {\n      // When pressing enter, you can be as precise as you want.\n      if (e.keyCode === 13) {\n        _this.__truncationSuspended = true;\n        this.blur();\n        _this.__truncationSuspended = false;\n        onFinish();\n      }\n    });\n\n    this.updateDisplay();\n\n    this.domElement.appendChild(this.__input);\n  }\n\n  updateDisplay() {\n    this.__input.value = this.__truncationSuspended ? this.getValue() : roundToDecimal(this.getValue(), this.__precision);\n    return super.updateDisplay();\n  }\n}\n\nexport default NumberControllerBox;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport NumberController from './NumberController';\nimport dom from '../dom/dom';\n\nfunction map(v, i1, i2, o1, o2) {\n  return o1 + (o2 - o1) * ((v - i1) / (i2 - i1));\n}\n\n/**\n * @class Represents a given property of an object that is a number, contains\n * a minimum and maximum, and provides a slider element with which to\n * manipulate it. It should be noted that the slider element is made up of\n * <code>&lt;div&gt;</code> tags, <strong>not</strong> the html5\n * <code>&lt;slider&gt;</code> element.\n *\n * @extends dat.controllers.Controller\n * @extends dat.controllers.NumberController\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Number} minValue Minimum allowed value\n * @param {Number} maxValue Maximum allowed value\n * @param {Number} stepValue Increment by which to change value\n */\nclass NumberControllerSlider extends NumberController {\n  constructor(object, property, min, max, step) {\n    super(object, property, { min: min, max: max, step: step });\n\n    const _this = this;\n\n    this.__background = document.createElement('div');\n    this.__foreground = document.createElement('div');\n\n    dom.bind(this.__background, 'mousedown', onMouseDown);\n    dom.bind(this.__background, 'touchstart', onTouchStart);\n\n    dom.addClass(this.__background, 'slider');\n    dom.addClass(this.__foreground, 'slider-fg');\n\n    function onMouseDown(e) {\n      document.activeElement.blur();\n\n      dom.bind(window, 'mousemove', onMouseDrag);\n      dom.bind(window, 'mouseup', onMouseUp);\n\n      onMouseDrag(e);\n    }\n\n    function onMouseDrag(e) {\n      e.preventDefault();\n\n      const bgRect = _this.__background.getBoundingClientRect();\n\n      _this.setValue(\n        map(e.clientX, bgRect.left, bgRect.right, _this.__min, _this.__max)\n      );\n\n      return false;\n    }\n\n    function onMouseUp() {\n      dom.unbind(window, 'mousemove', onMouseDrag);\n      dom.unbind(window, 'mouseup', onMouseUp);\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    function onTouchStart(e) {\n      if (e.touches.length !== 1) { return; }\n      dom.bind(window, 'touchmove', onTouchMove);\n      dom.bind(window, 'touchend', onTouchEnd);\n      onTouchMove(e);\n    }\n\n    function onTouchMove(e) {\n      const clientX = e.touches[0].clientX;\n      const bgRect = _this.__background.getBoundingClientRect();\n\n      _this.setValue(\n        map(clientX, bgRect.left, bgRect.right, _this.__min, _this.__max)\n      );\n    }\n\n    function onTouchEnd() {\n      dom.unbind(window, 'touchmove', onTouchMove);\n      dom.unbind(window, 'touchend', onTouchEnd);\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    this.updateDisplay();\n\n    this.__background.appendChild(this.__foreground);\n    this.domElement.appendChild(this.__background);\n  }\n\n  updateDisplay() {\n    const pct = (this.getValue() - this.__min) / (this.__max - this.__min);\n    this.__foreground.style.width = pct * 100 + '%';\n    return super.updateDisplay();\n  }\n}\n\nexport default NumberControllerSlider;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a GUI interface to fire a specified method, a property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass FunctionController extends Controller {\n  constructor(object, property, text) {\n    super(object, property);\n\n    const _this = this;\n\n    this.__button = document.createElement('div');\n    this.__button.innerHTML = text === undefined ? 'Fire' : text;\n\n    dom.bind(this.__button, 'click', function(e) {\n      e.preventDefault();\n      _this.fire();\n      return false;\n    });\n\n    dom.addClass(this.__button, 'button');\n\n    this.domElement.appendChild(this.__button);\n  }\n\n  fire() {\n    if (this.__onChange) {\n      this.__onChange.call(this);\n    }\n    this.getValue().call(this.object);\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n  }\n}\n\nexport default FunctionController;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\nimport Color from '../color/Color';\nimport interpret from '../color/interpret';\nimport common from '../utils/common';\n\n/**\n * @class Represents a given property of an object that is a color.\n * @param {Object} object\n * @param {string} property\n */\nclass ColorController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    this.__color = new Color(this.getValue());\n    this.__temp = new Color(0);\n\n    const _this = this;\n\n    this.domElement = document.createElement('div');\n\n    dom.makeSelectable(this.domElement, false);\n\n    this.__selector = document.createElement('div');\n    this.__selector.className = 'selector';\n\n    this.__saturation_field = document.createElement('div');\n    this.__saturation_field.className = 'saturation-field';\n\n    this.__field_knob = document.createElement('div');\n    this.__field_knob.className = 'field-knob';\n    this.__field_knob_border = '2px solid ';\n\n    this.__hue_knob = document.createElement('div');\n    this.__hue_knob.className = 'hue-knob';\n\n    this.__hue_field = document.createElement('div');\n    this.__hue_field.className = 'hue-field';\n\n    this.__input = document.createElement('input');\n    this.__input.type = 'text';\n    this.__input_textShadow = '0 1px 1px ';\n\n    dom.bind(this.__input, 'keydown', function(e) {\n      if (e.keyCode === 13) { // on enter\n        onBlur.call(this);\n      }\n    });\n\n    dom.bind(this.__input, 'blur', onBlur);\n\n    dom.bind(this.__selector, 'mousedown', function(/* e */) {\n      dom\n        .addClass(this, 'drag')\n        .bind(window, 'mouseup', function(/* e */) {\n          dom.removeClass(_this.__selector, 'drag');\n        });\n    });\n\n    dom.bind(this.__selector, 'touchstart', function(/* e */) {\n      dom\n        .addClass(this, 'drag')\n        .bind(window, 'touchend', function(/* e */) {\n          dom.removeClass(_this.__selector, 'drag');\n        });\n    });\n\n    const valueField = document.createElement('div');\n\n    common.extend(this.__selector.style, {\n      width: '122px',\n      height: '102px',\n      padding: '3px',\n      backgroundColor: '#222',\n      boxShadow: '0px 1px 3px rgba(0,0,0,0.3)'\n    });\n\n    common.extend(this.__field_knob.style, {\n      position: 'absolute',\n      width: '12px',\n      height: '12px',\n      border: this.__field_knob_border + (this.__color.v < 0.5 ? '#fff' : '#000'),\n      boxShadow: '0px 1px 3px rgba(0,0,0,0.5)',\n      borderRadius: '12px',\n      zIndex: 1\n    });\n\n    common.extend(this.__hue_knob.style, {\n      position: 'absolute',\n      width: '15px',\n      height: '2px',\n      borderRight: '4px solid #fff',\n      zIndex: 1\n    });\n\n    common.extend(this.__saturation_field.style, {\n      width: '100px',\n      height: '100px',\n      border: '1px solid #555',\n      marginRight: '3px',\n      display: 'inline-block',\n      cursor: 'pointer'\n    });\n\n    common.extend(valueField.style, {\n      width: '100%',\n      height: '100%',\n      background: 'none'\n    });\n\n    linearGradient(valueField, 'top', 'rgba(0,0,0,0)', '#000');\n\n    common.extend(this.__hue_field.style, {\n      width: '15px',\n      height: '100px',\n      border: '1px solid #555',\n      cursor: 'ns-resize',\n      position: 'absolute',\n      top: '3px',\n      right: '3px'\n    });\n\n    hueGradient(this.__hue_field);\n\n    common.extend(this.__input.style, {\n      outline: 'none',\n//      width: '120px',\n      textAlign: 'center',\n//      padding: '4px',\n//      marginBottom: '6px',\n      color: '#fff',\n      border: 0,\n      fontWeight: 'bold',\n      textShadow: this.__input_textShadow + 'rgba(0,0,0,0.7)'\n    });\n\n    dom.bind(this.__saturation_field, 'mousedown', fieldDown);\n    dom.bind(this.__saturation_field, 'touchstart', fieldDown);\n\n    dom.bind(this.__field_knob, 'mousedown', fieldDown);\n    dom.bind(this.__field_knob, 'touchstart', fieldDown);\n\n    dom.bind(this.__hue_field, 'mousedown', fieldDownH);\n    dom.bind(this.__hue_field, 'touchstart', fieldDownH);\n\n    function fieldDown(e) {\n      setSV(e);\n      dom.bind(window, 'mousemove', setSV);\n      dom.bind(window, 'touchmove', setSV);\n      dom.bind(window, 'mouseup', fieldUpSV);\n      dom.bind(window, 'touchend', fieldUpSV);\n    }\n\n    function fieldDownH(e) {\n      setH(e);\n      dom.bind(window, 'mousemove', setH);\n      dom.bind(window, 'touchmove', setH);\n      dom.bind(window, 'mouseup', fieldUpH);\n      dom.bind(window, 'touchend', fieldUpH);\n    }\n\n    function fieldUpSV() {\n      dom.unbind(window, 'mousemove', setSV);\n      dom.unbind(window, 'touchmove', setSV);\n      dom.unbind(window, 'mouseup', fieldUpSV);\n      dom.unbind(window, 'touchend', fieldUpSV);\n      onFinish();\n    }\n\n    function fieldUpH() {\n      dom.unbind(window, 'mousemove', setH);\n      dom.unbind(window, 'touchmove', setH);\n      dom.unbind(window, 'mouseup', fieldUpH);\n      dom.unbind(window, 'touchend', fieldUpH);\n      onFinish();\n    }\n\n    function onBlur() {\n      const i = interpret(this.value);\n      if (i !== false) {\n        _this.__color.__state = i;\n        _this.setValue(_this.__color.toOriginal());\n      } else {\n        this.value = _this.__color.toString();\n      }\n    }\n\n    function onFinish() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.__color.toOriginal());\n      }\n    }\n\n    this.__saturation_field.appendChild(valueField);\n    this.__selector.appendChild(this.__field_knob);\n    this.__selector.appendChild(this.__saturation_field);\n    this.__selector.appendChild(this.__hue_field);\n    this.__hue_field.appendChild(this.__hue_knob);\n\n    this.domElement.appendChild(this.__input);\n    this.domElement.appendChild(this.__selector);\n\n    this.updateDisplay();\n\n    function setSV(e) {\n      if (e.type.indexOf('touch') === -1) { e.preventDefault(); }\n\n      const fieldRect = _this.__saturation_field.getBoundingClientRect();\n      const { clientX, clientY } = (e.touches && e.touches[0]) || e;\n      let s = (clientX - fieldRect.left) / (fieldRect.right - fieldRect.left);\n      let v = 1 - (clientY - fieldRect.top) / (fieldRect.bottom - fieldRect.top);\n\n      if (v > 1) {\n        v = 1;\n      } else if (v < 0) {\n        v = 0;\n      }\n\n      if (s > 1) {\n        s = 1;\n      } else if (s < 0) {\n        s = 0;\n      }\n\n      _this.__color.v = v;\n      _this.__color.s = s;\n\n      _this.setValue(_this.__color.toOriginal());\n\n\n      return false;\n    }\n\n    function setH(e) {\n      if (e.type.indexOf('touch') === -1) { e.preventDefault(); }\n\n      const fieldRect = _this.__hue_field.getBoundingClientRect();\n      const { clientY } = (e.touches && e.touches[0]) || e;\n      let h = 1 - (clientY - fieldRect.top) / (fieldRect.bottom - fieldRect.top);\n\n      if (h > 1) {\n        h = 1;\n      } else if (h < 0) {\n        h = 0;\n      }\n\n      _this.__color.h = h * 360;\n\n      _this.setValue(_this.__color.toOriginal());\n\n      return false;\n    }\n  }\n\n  updateDisplay() {\n    const i = interpret(this.getValue());\n\n    if (i !== false) {\n      let mismatch = false;\n\n      // Check for mismatch on the interpreted value.\n\n      common.each(Color.COMPONENTS, function(component) {\n        if (!common.isUndefined(i[component]) && !common.isUndefined(this.__color.__state[component]) &&\n          i[component] !== this.__color.__state[component]) {\n          mismatch = true;\n          return {}; // break\n        }\n      }, this);\n\n      // If nothing diverges, we keep our previous values\n      // for statefulness, otherwise we recalculate fresh\n      if (mismatch) {\n        common.extend(this.__color.__state, i);\n      }\n    }\n\n    common.extend(this.__temp.__state, this.__color.__state);\n\n    this.__temp.a = 1;\n\n    const flip = (this.__color.v < 0.5 || this.__color.s > 0.5) ? 255 : 0;\n    const _flip = 255 - flip;\n\n    common.extend(this.__field_knob.style, {\n      marginLeft: 100 * this.__color.s - 7 + 'px',\n      marginTop: 100 * (1 - this.__color.v) - 7 + 'px',\n      backgroundColor: this.__temp.toHexString(),\n      border: this.__field_knob_border + 'rgb(' + flip + ',' + flip + ',' + flip + ')'\n    });\n\n    this.__hue_knob.style.marginTop = (1 - this.__color.h / 360) * 100 + 'px';\n\n    this.__temp.s = 1;\n    this.__temp.v = 1;\n\n    linearGradient(this.__saturation_field, 'left', '#fff', this.__temp.toHexString());\n\n    this.__input.value = this.__color.toString();\n\n    common.extend(this.__input.style, {\n      backgroundColor: this.__color.toHexString(),\n      color: 'rgb(' + flip + ',' + flip + ',' + flip + ')',\n      textShadow: this.__input_textShadow + 'rgba(' + _flip + ',' + _flip + ',' + _flip + ',.7)'\n    });\n  }\n}\n\nconst vendors = ['-moz-', '-o-', '-webkit-', '-ms-', ''];\n\nfunction linearGradient(elem, x, a, b) {\n  elem.style.background = '';\n  common.each(vendors, function(vendor) {\n    elem.style.cssText += 'background: ' + vendor + 'linear-gradient(' + x + ', ' + a + ' 0%, ' + b + ' 100%); ';\n  });\n}\n\nfunction hueGradient(elem) {\n  elem.style.background = '';\n  elem.style.cssText += 'background: -moz-linear-gradient(top,  #ff0000 0%, #ff00ff 17%, #0000ff 34%, #00ffff 50%, #00ff00 67%, #ffff00 84%, #ff0000 100%);';\n  elem.style.cssText += 'background: -webkit-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: -o-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: -ms-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n}\n\nexport default ColorController;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nconst css = {\n  load: function(url, indoc) {\n    const doc = indoc || document;\n    const link = doc.createElement('link');\n    link.type = 'text/css';\n    link.rel = 'stylesheet';\n    link.href = url;\n    doc.getElementsByTagName('head')[0].appendChild(link);\n  },\n\n  inject: function(cssContent, indoc) {\n    const doc = indoc || document;\n    const injected = document.createElement('style');\n    injected.type = 'text/css';\n    injected.innerHTML = cssContent;\n    const head = doc.getElementsByTagName('head')[0];\n    try {\n      head.appendChild(injected);\n    } catch (e) { // Unable to inject CSS, probably because of a Content Security Policy\n    }\n  }\n};\n\nexport default css;\n", "const saveDialogContents = `<div id=\"dg-save\" class=\"dg dialogue\">\n\n  Here's the new load parameter for your <code>GUI</code>'s constructor:\n\n  <textarea id=\"dg-new-constructor\"></textarea>\n\n  <div id=\"dg-save-locally\">\n\n    <input id=\"dg-local-storage\" type=\"checkbox\"/> Automatically save\n    values to <code>localStorage</code> on exit.\n\n    <div id=\"dg-local-explain\">The values saved to <code>localStorage</code> will\n      override those passed to <code>dat.GUI</code>'s constructor. This makes it\n      easier to work incrementally, but <code>localStorage</code> is fragile,\n      and your friends may not see the same values you do.\n\n    </div>\n\n  </div>\n\n</div>`;\n\nexport default saveDialogContents;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport OptionController from './OptionController';\nimport NumberControllerBox from './NumberControllerBox';\nimport NumberControllerSlider from './NumberControllerSlider';\nimport StringController from './StringController';\nimport FunctionController from './FunctionController';\nimport BooleanController from './BooleanController';\nimport common from '../utils/common';\n\nconst ControllerFactory = function(object, property) {\n  const initialValue = object[property];\n\n  // Providing options?\n  if (common.isArray(arguments[2]) || common.isObject(arguments[2])) {\n    return new OptionController(object, property, arguments[2]);\n  }\n\n  // Providing a map?\n  if (common.isNumber(initialValue)) {\n    // Has min and max? (slider)\n    if (common.isNumber(arguments[2]) && common.isNumber(arguments[3])) {\n      // has step?\n      if (common.isNumber(arguments[4])) {\n        return new NumberControllerSlider(object, property,\n                        arguments[2], arguments[3], arguments[4]);\n      }\n\n      return new NumberControllerSlider(object, property, arguments[2], arguments[3]);\n    }\n\n    // number box\n    if (common.isNumber(arguments[4])) { // has step\n      return new NumberControllerBox(object, property,\n                        { min: arguments[2], max: arguments[3], step: arguments[4] });\n    }\n    return new NumberControllerBox(object, property, { min: arguments[2], max: arguments[3] });\n  }\n\n  if (common.isString(initialValue)) {\n    return new StringController(object, property);\n  }\n\n  if (common.isFunction(initialValue)) {\n    return new FunctionController(object, property, '');\n  }\n\n  if (common.isBoolean(initialValue)) {\n    return new BooleanController(object, property);\n  }\n\n  return null;\n};\n\nexport default ControllerFactory;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nfunction requestAnimationFrame(callback) {\n  setTimeout(callback, 1000 / 60);\n}\n\nexport default window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.oRequestAnimationFrame ||\n    window.msRequestAnimationFrame ||\n    requestAnimationFrame;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\nclass CenteredDiv {\n  constructor() {\n    this.backgroundElement = document.createElement('div');\n    common.extend(this.backgroundElement.style, {\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      top: 0,\n      left: 0,\n      display: 'none',\n      zIndex: '1000',\n      opacity: 0,\n      WebkitTransition: 'opacity 0.2s linear',\n      transition: 'opacity 0.2s linear'\n    });\n\n    dom.makeFullscreen(this.backgroundElement);\n    this.backgroundElement.style.position = 'fixed';\n\n    this.domElement = document.createElement('div');\n    common.extend(this.domElement.style, {\n      position: 'fixed',\n      display: 'none',\n      zIndex: '1001',\n      opacity: 0,\n      WebkitTransition: '-webkit-transform 0.2s ease-out, opacity 0.2s linear',\n      transition: 'transform 0.2s ease-out, opacity 0.2s linear'\n    });\n\n\n    document.body.appendChild(this.backgroundElement);\n    document.body.appendChild(this.domElement);\n\n    const _this = this;\n    dom.bind(this.backgroundElement, 'click', function() {\n      _this.hide();\n    });\n  }\n\n  show() {\n    const _this = this;\n\n    this.backgroundElement.style.display = 'block';\n\n    this.domElement.style.display = 'block';\n    this.domElement.style.opacity = 0;\n//    this.domElement.style.top = '52%';\n    this.domElement.style.webkitTransform = 'scale(1.1)';\n\n    this.layout();\n\n    common.defer(function() {\n      _this.backgroundElement.style.opacity = 1;\n      _this.domElement.style.opacity = 1;\n      _this.domElement.style.webkitTransform = 'scale(1)';\n    });\n  }\n\n  /**\n   * Hide centered div\n   */\n  hide() {\n    const _this = this;\n\n    const hide = function() {\n      _this.domElement.style.display = 'none';\n      _this.backgroundElement.style.display = 'none';\n\n      dom.unbind(_this.domElement, 'webkitTransitionEnd', hide);\n      dom.unbind(_this.domElement, 'transitionend', hide);\n      dom.unbind(_this.domElement, 'oTransitionEnd', hide);\n    };\n\n    dom.bind(this.domElement, 'webkitTransitionEnd', hide);\n    dom.bind(this.domElement, 'transitionend', hide);\n    dom.bind(this.domElement, 'oTransitionEnd', hide);\n\n    this.backgroundElement.style.opacity = 0;\n//    this.domElement.style.top = '48%';\n    this.domElement.style.opacity = 0;\n    this.domElement.style.webkitTransform = 'scale(1.1)';\n  }\n\n  layout() {\n    this.domElement.style.left = window.innerWidth / 2 - dom.getWidth(this.domElement) / 2 + 'px';\n    this.domElement.style.top = window.innerHeight / 2 - dom.getHeight(this.domElement) / 2 + 'px';\n  }\n}\n\nexport default CenteredDiv;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport css from '../utils/css';\nimport saveDialogueContents from './saveDialogue.html';\nimport ControllerFactory from '../controllers/ControllerFactory';\nimport Controller from '../controllers/Controller';\nimport BooleanController from '../controllers/BooleanController';\nimport FunctionController from '../controllers/FunctionController';\nimport NumberControllerBox from '../controllers/NumberControllerBox';\nimport NumberControllerSlider from '../controllers/NumberControllerSlider';\nimport ColorController from '../controllers/ColorController';\nimport requestAnimationFrame from '../utils/requestAnimationFrame';\nimport CenteredDiv from '../dom/CenteredDiv';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\nimport styleSheet from './style.scss'; // CSS to embed in build\n\ncss.inject(styleSheet);\n\n/** @ignore Outer-most className for GUI's */\nconst CSS_NAMESPACE = 'dg';\n\nconst HIDE_KEY_CODE = 72;\n\n/** @ignore The only value shared between the JS and SCSS. Use caution. */\nconst CLOSE_BUTTON_HEIGHT = 20;\n\nconst DEFAULT_DEFAULT_PRESET_NAME = 'Default';\n\nconst SUPPORTS_LOCAL_STORAGE = (function() {\n  try {\n    return !!window.localStorage;\n  } catch (e) {\n    return false;\n  }\n}());\n\nlet SAVE_DIALOGUE;\n\n/** @ignore Have we yet to create an autoPlace GUI? */\nlet autoPlaceVirgin = true;\n\n/** @ignore Fixed position div that auto place GUI's go inside */\nlet autoPlaceContainer;\n\n/** @ignore Are we hiding the GUI's ? */\nlet hide = false;\n\n/** @private GUI's which should be hidden */\nconst hideableGuis = [];\n\n/**\n * @class A lightweight controller library for JavaScript. It allows you to easily\n * manipulate variables and fire functions on the fly.\n *\n * @typicalname gui\n *\n * @example\n * // Creating a GUI with options.\n * var gui = new dat.GUI({name: 'My GUI'});\n *\n * @example\n * // Creating a GUI and a subfolder.\n * var gui = new dat.GUI();\n * var folder1 = gui.addFolder('Flow Field');\n *\n * @param {Object} [params]\n * @param {String} [params.name] The name of this GUI.\n * @param {Object} [params.load] JSON object representing the saved state of\n * this GUI.\n * @param {dat.gui.GUI} [params.parent] The GUI I'm nested in.\n * @param {Boolean} [params.autoPlace=true]\n * @param {Boolean} [params.hideable=true] If true, GUI is shown/hidden by <kbd>h</kbd> keypress.\n * @param {Boolean} [params.closed=false] If true, starts closed\n * @param {Boolean} [params.closeOnTop=false] If true, close/open button shows on top of the GUI\n */\nconst GUI = function(pars) {\n  const _this = this;\n\n  let params = pars || {};\n\n  /**\n   * Outermost DOM Element\n   * @type {DOMElement}\n   */\n  this.domElement = document.createElement('div');\n  this.__ul = document.createElement('ul');\n  this.domElement.appendChild(this.__ul);\n\n  dom.addClass(this.domElement, CSS_NAMESPACE);\n\n  /**\n   * Nested GUI's by name\n   * @ignore\n   */\n  this.__folders = {};\n\n  this.__controllers = [];\n\n  /**\n   * List of objects I'm remembering for save, only used in top level GUI\n   * @ignore\n   */\n  this.__rememberedObjects = [];\n\n  /**\n   * Maps the index of remembered objects to a map of controllers, only used\n   * in top level GUI.\n   *\n   * @private\n   * @ignore\n   *\n   * @example\n   * [\n   *  {\n     *    propertyName: Controller,\n     *    anotherPropertyName: Controller\n     *  },\n   *  {\n     *    propertyName: Controller\n     *  }\n   * ]\n   */\n  this.__rememberedObjectIndecesToControllers = [];\n\n  this.__listening = [];\n\n  // Default parameters\n  params = common.defaults(params, {\n    closeOnTop: false,\n    autoPlace: true,\n    width: GUI.DEFAULT_WIDTH\n  });\n\n  params = common.defaults(params, {\n    resizable: params.autoPlace,\n    hideable: params.autoPlace\n  });\n\n  if (!common.isUndefined(params.load)) {\n    // Explicit preset\n    if (params.preset) {\n      params.load.preset = params.preset;\n    }\n  } else {\n    params.load = { preset: DEFAULT_DEFAULT_PRESET_NAME };\n  }\n\n  if (common.isUndefined(params.parent) && params.hideable) {\n    hideableGuis.push(this);\n  }\n\n  // Only root level GUI's are resizable.\n  params.resizable = common.isUndefined(params.parent) && params.resizable;\n\n  if (params.autoPlace && common.isUndefined(params.scrollable)) {\n    params.scrollable = true;\n  }\n//    params.scrollable = common.isUndefined(params.parent) && params.scrollable === true;\n\n  // Not part of params because I don't want people passing this in via\n  // constructor. Should be a 'remembered' value.\n  let useLocalStorage =\n    SUPPORTS_LOCAL_STORAGE &&\n    localStorage.getItem(getLocalStorageHash(this, 'isLocal')) === 'true';\n\n  let saveToLocalStorage;\n  let titleRow;\n\n  Object.defineProperties(this,\n    /** @lends GUI.prototype */\n    {\n      /**\n       * The parent <code>GUI</code>\n       * @type dat.gui.GUI\n       */\n      parent: {\n        get: function() {\n          return params.parent;\n        }\n      },\n\n      scrollable: {\n        get: function() {\n          return params.scrollable;\n        }\n      },\n\n      /**\n       * Handles <code>GUI</code>'s element placement for you\n       * @type Boolean\n       */\n      autoPlace: {\n        get: function() {\n          return params.autoPlace;\n        }\n      },\n\n      /**\n       * Handles <code>GUI</code>'s position of open/close button\n       * @type Boolean\n       */\n      closeOnTop: {\n        get: function() {\n          return params.closeOnTop;\n        }\n      },\n\n      /**\n       * The identifier for a set of saved values\n       * @type String\n       */\n      preset: {\n        get: function() {\n          if (_this.parent) {\n            return _this.getRoot().preset;\n          }\n\n          return params.load.preset;\n        },\n\n        set: function(v) {\n          if (_this.parent) {\n            _this.getRoot().preset = v;\n          } else {\n            params.load.preset = v;\n          }\n          setPresetSelectIndex(this);\n          _this.revert();\n        }\n      },\n\n      /**\n       * The width of <code>GUI</code> element\n       * @type Number\n       */\n      width: {\n        get: function() {\n          return params.width;\n        },\n        set: function(v) {\n          params.width = v;\n          setWidth(_this, v);\n        }\n      },\n\n      /**\n       * The name of <code>GUI</code>. Used for folders. i.e\n       * a folder's name\n       * @type String\n       */\n      name: {\n        get: function() {\n          return params.name;\n        },\n        set: function(v) {\n          // TODO Check for collisions among sibling folders\n          params.name = v;\n          if (titleRow) {\n            titleRow.innerHTML = params.name;\n          }\n        }\n      },\n\n      /**\n       * Whether the <code>GUI</code> is collapsed or not\n       * @type Boolean\n       */\n      closed: {\n        get: function() {\n          return params.closed;\n        },\n        set: function(v) {\n          params.closed = v;\n          if (params.closed) {\n            dom.addClass(_this.__ul, GUI.CLASS_CLOSED);\n          } else {\n            dom.removeClass(_this.__ul, GUI.CLASS_CLOSED);\n          }\n          // For browsers that aren't going to respect the CSS transition,\n          // Lets just check our height against the window height right off\n          // the bat.\n          this.onResize();\n\n          if (_this.__closeButton) {\n            _this.__closeButton.innerHTML = v ? GUI.TEXT_OPEN : GUI.TEXT_CLOSED;\n          }\n        }\n      },\n\n      /**\n       * Contains all presets\n       * @type Object\n       */\n      load: {\n        get: function() {\n          return params.load;\n        }\n      },\n\n      /**\n       * Determines whether or not to use <a href=\"https://developer.mozilla.org/en/DOM/Storage#localStorage\">localStorage</a> as the means for\n       * <code>remember</code>ing\n       * @type Boolean\n       */\n      useLocalStorage: {\n\n        get: function() {\n          return useLocalStorage;\n        },\n        set: function(bool) {\n          if (SUPPORTS_LOCAL_STORAGE) {\n            useLocalStorage = bool;\n            if (bool) {\n              dom.bind(window, 'unload', saveToLocalStorage);\n            } else {\n              dom.unbind(window, 'unload', saveToLocalStorage);\n            }\n            localStorage.setItem(getLocalStorageHash(_this, 'isLocal'), bool);\n          }\n        }\n      }\n    });\n\n  // Are we a root level GUI?\n  if (common.isUndefined(params.parent)) {\n    this.closed = params.closed || false;\n\n    dom.addClass(this.domElement, GUI.CLASS_MAIN);\n    dom.makeSelectable(this.domElement, false);\n\n    // Are we supposed to be loading locally?\n    if (SUPPORTS_LOCAL_STORAGE) {\n      if (useLocalStorage) {\n        _this.useLocalStorage = true;\n\n        const savedGui = localStorage.getItem(getLocalStorageHash(this, 'gui'));\n\n        if (savedGui) {\n          params.load = JSON.parse(savedGui);\n        }\n      }\n    }\n\n    this.__closeButton = document.createElement('div');\n    this.__closeButton.innerHTML = GUI.TEXT_CLOSED;\n    dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_BUTTON);\n    if (params.closeOnTop) {\n      dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_TOP);\n      this.domElement.insertBefore(this.__closeButton, this.domElement.childNodes[0]);\n    } else {\n      dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_BOTTOM);\n      this.domElement.appendChild(this.__closeButton);\n    }\n\n    dom.bind(this.__closeButton, 'click', function() {\n      _this.closed = !_this.closed;\n    });\n    // Oh, you're a nested GUI!\n  } else {\n    if (params.closed === undefined) {\n      params.closed = true;\n    }\n\n    const titleRowName = document.createTextNode(params.name);\n    dom.addClass(titleRowName, 'controller-name');\n\n    titleRow = addRow(_this, titleRowName);\n\n    const onClickTitle = function(e) {\n      e.preventDefault();\n      _this.closed = !_this.closed;\n      return false;\n    };\n\n    dom.addClass(this.__ul, GUI.CLASS_CLOSED);\n\n    dom.addClass(titleRow, 'title');\n    dom.bind(titleRow, 'click', onClickTitle);\n\n    if (!params.closed) {\n      this.closed = false;\n    }\n  }\n\n  if (params.autoPlace) {\n    if (common.isUndefined(params.parent)) {\n      if (autoPlaceVirgin) {\n        autoPlaceContainer = document.createElement('div');\n        dom.addClass(autoPlaceContainer, CSS_NAMESPACE);\n        dom.addClass(autoPlaceContainer, GUI.CLASS_AUTO_PLACE_CONTAINER);\n        document.body.appendChild(autoPlaceContainer);\n        autoPlaceVirgin = false;\n      }\n\n      // Put it in the dom for you.\n      autoPlaceContainer.appendChild(this.domElement);\n\n      // Apply the auto styles\n      dom.addClass(this.domElement, GUI.CLASS_AUTO_PLACE);\n    }\n\n\n    // Make it not elastic.\n    if (!this.parent) {\n      setWidth(_this, params.width);\n    }\n  }\n\n  this.__resizeHandler = function() {\n    _this.onResizeDebounced();\n  };\n\n  dom.bind(window, 'resize', this.__resizeHandler);\n  dom.bind(this.__ul, 'webkitTransitionEnd', this.__resizeHandler);\n  dom.bind(this.__ul, 'transitionend', this.__resizeHandler);\n  dom.bind(this.__ul, 'oTransitionEnd', this.__resizeHandler);\n  this.onResize();\n\n  if (params.resizable) {\n    addResizeHandle(this);\n  }\n\n  saveToLocalStorage = function() {\n    if (SUPPORTS_LOCAL_STORAGE && localStorage.getItem(getLocalStorageHash(_this, 'isLocal')) === 'true') {\n      localStorage.setItem(getLocalStorageHash(_this, 'gui'), JSON.stringify(_this.getSaveObject()));\n    }\n  };\n\n  // expose this method publicly\n  this.saveToLocalStorageIfPossible = saveToLocalStorage;\n\n  function resetWidth() {\n    const root = _this.getRoot();\n    root.width += 1;\n    common.defer(function() {\n      root.width -= 1;\n    });\n  }\n\n  if (!params.parent) {\n    resetWidth();\n  }\n};\n\nGUI.toggleHide = function() {\n  hide = !hide;\n  common.each(hideableGuis, function(gui) {\n    gui.domElement.style.display = hide ? 'none' : '';\n  });\n};\n\nGUI.CLASS_AUTO_PLACE = 'a';\nGUI.CLASS_AUTO_PLACE_CONTAINER = 'ac';\nGUI.CLASS_MAIN = 'main';\nGUI.CLASS_CONTROLLER_ROW = 'cr';\nGUI.CLASS_TOO_TALL = 'taller-than-window';\nGUI.CLASS_CLOSED = 'closed';\nGUI.CLASS_CLOSE_BUTTON = 'close-button';\nGUI.CLASS_CLOSE_TOP = 'close-top';\nGUI.CLASS_CLOSE_BOTTOM = 'close-bottom';\nGUI.CLASS_DRAG = 'drag';\n\nGUI.DEFAULT_WIDTH = 245;\nGUI.TEXT_CLOSED = 'Close Controls';\nGUI.TEXT_OPEN = 'Open Controls';\n\nGUI._keydownHandler = function(e) {\n  if (document.activeElement.type !== 'text' &&\n    (e.which === HIDE_KEY_CODE || e.keyCode === HIDE_KEY_CODE)) {\n    GUI.toggleHide();\n  }\n};\ndom.bind(window, 'keydown', GUI._keydownHandler, false);\n\ncommon.extend(\n  GUI.prototype,\n\n  /** @lends GUI.prototype */\n  {\n\n    /**\n     * Adds a new {@link Controller} to the GUI. The type of controller created\n     * is inferred from the initial value of <code>object[property]</code>. For\n     * color properties, see {@link addColor}.\n     *\n     * @param {Object} object The object to be manipulated\n     * @param {String} property The name of the property to be manipulated\n     * @param {Number} [min] Minimum allowed value\n     * @param {Number} [max] Maximum allowed value\n     * @param {Number} [step] Increment by which to change value\n     * @returns {Controller} The controller that was added to the GUI.\n     * @instance\n     *\n     * @example\n     * // Add a string controller.\n     * var person = {name: 'Sam'};\n     * gui.add(person, 'name');\n     *\n     * @example\n     * // Add a number controller slider.\n     * var person = {age: 45};\n     * gui.add(person, 'age', 0, 100);\n     */\n    add: function(object, property) {\n      return add(\n        this,\n        object,\n        property,\n        {\n          factoryArgs: Array.prototype.slice.call(arguments, 2)\n        }\n      );\n    },\n\n    /**\n     * Adds a new color controller to the GUI.\n     *\n     * @param object\n     * @param property\n     * @returns {Controller} The controller that was added to the GUI.\n     * @instance\n     *\n     * @example\n     * var palette = {\n     *   color1: '#FF0000', // CSS string\n     *   color2: [ 0, 128, 255 ], // RGB array\n     *   color3: [ 0, 128, 255, 0.3 ], // RGB with alpha\n     *   color4: { h: 350, s: 0.9, v: 0.3 } // Hue, saturation, value\n     * };\n     * gui.addColor(palette, 'color1');\n     * gui.addColor(palette, 'color2');\n     * gui.addColor(palette, 'color3');\n     * gui.addColor(palette, 'color4');\n     */\n    addColor: function(object, property) {\n      return add(\n        this,\n        object,\n        property,\n        {\n          color: true\n        }\n      );\n    },\n\n    /**\n     * Removes the given controller from the GUI.\n     * @param {Controller} controller\n     * @instance\n     */\n    remove: function(controller) {\n      // TODO listening?\n      this.__ul.removeChild(controller.__li);\n      this.__controllers.splice(this.__controllers.indexOf(controller), 1);\n      const _this = this;\n      common.defer(function() {\n        _this.onResize();\n      });\n    },\n\n    /**\n     * Removes the root GUI from the document and unbinds all event listeners.\n     * For subfolders, use `gui.removeFolder(folder)` instead.\n     * @instance\n     */\n    destroy: function() {\n      if (this.parent) {\n        throw new Error(\n          'Only the root GUI should be removed with .destroy(). ' +\n          'For subfolders, use gui.removeFolder(folder) instead.'\n        );\n      }\n\n      if (this.autoPlace) {\n        autoPlaceContainer.removeChild(this.domElement);\n      }\n\n      const _this = this;\n      common.each(this.__folders, function(subfolder) {\n        _this.removeFolder(subfolder);\n      });\n\n      dom.unbind(window, 'keydown', GUI._keydownHandler, false);\n\n      removeListeners(this);\n    },\n\n    /**\n     * Creates a new subfolder GUI instance.\n     * @param name\n     * @returns {dat.gui.GUI} The new folder.\n     * @throws {Error} if this GUI already has a folder by the specified\n     * name\n     * @instance\n     */\n    addFolder: function(name) {\n      // We have to prevent collisions on names in order to have a key\n      // by which to remember saved values\n      if (this.__folders[name] !== undefined) {\n        throw new Error('You already have a folder in this GUI by the' +\n          ' name \"' + name + '\"');\n      }\n\n      const newGuiParams = { name: name, parent: this };\n\n      // We need to pass down the autoPlace trait so that we can\n      // attach event listeners to open/close folder actions to\n      // ensure that a scrollbar appears if the window is too short.\n      newGuiParams.autoPlace = this.autoPlace;\n\n      // Do we have saved appearance data for this folder?\n      if (this.load && // Anything loaded?\n        this.load.folders && // Was my parent a dead-end?\n        this.load.folders[name]) { // Did daddy remember me?\n        // Start me closed if I was closed\n        newGuiParams.closed = this.load.folders[name].closed;\n\n        // Pass down the loaded data\n        newGuiParams.load = this.load.folders[name];\n      }\n\n      const gui = new GUI(newGuiParams);\n      this.__folders[name] = gui;\n\n      const li = addRow(this, gui.domElement);\n      dom.addClass(li, 'folder');\n      return gui;\n    },\n\n    /**\n     * Removes a subfolder GUI instance.\n     * @param {dat.gui.GUI} folder The folder to remove.\n     * @instance\n     */\n    removeFolder: function(folder) {\n      this.__ul.removeChild(folder.domElement.parentElement);\n\n      delete this.__folders[folder.name];\n\n      // Do we have saved appearance data for this folder?\n      if (this.load && // Anything loaded?\n        this.load.folders && // Was my parent a dead-end?\n        this.load.folders[folder.name]) {\n        delete this.load.folders[folder.name];\n      }\n\n      removeListeners(folder);\n\n      const _this = this;\n\n      common.each(folder.__folders, function(subfolder) {\n        folder.removeFolder(subfolder);\n      });\n\n      common.defer(function() {\n        _this.onResize();\n      });\n    },\n\n    /**\n     * Opens the GUI.\n     */\n    open: function() {\n      this.closed = false;\n    },\n\n    /**\n     * Closes the GUI.\n     */\n    close: function() {\n      this.closed = true;\n    },\n\n    /**\n    * Hides the GUI.\n    */\n    hide: function() {\n      this.domElement.style.display = 'none';\n    },\n\n    /**\n    * Shows the GUI.\n    */\n    show: function() {\n      this.domElement.style.display = '';\n    },\n\n\n    onResize: function() {\n      // we debounce this function to prevent performance issues when rotating on tablet/mobile\n      const root = this.getRoot();\n      if (root.scrollable) {\n        const top = dom.getOffset(root.__ul).top;\n        let h = 0;\n\n        common.each(root.__ul.childNodes, function(node) {\n          if (!(root.autoPlace && node === root.__save_row)) {\n            h += dom.getHeight(node);\n          }\n        });\n\n        if (window.innerHeight - top - CLOSE_BUTTON_HEIGHT < h) {\n          dom.addClass(root.domElement, GUI.CLASS_TOO_TALL);\n          root.__ul.style.height = window.innerHeight - top - CLOSE_BUTTON_HEIGHT + 'px';\n        } else {\n          dom.removeClass(root.domElement, GUI.CLASS_TOO_TALL);\n          root.__ul.style.height = 'auto';\n        }\n      }\n\n      if (root.__resize_handle) {\n        common.defer(function() {\n          root.__resize_handle.style.height = root.__ul.offsetHeight + 'px';\n        });\n      }\n\n      if (root.__closeButton) {\n        root.__closeButton.style.width = root.width + 'px';\n      }\n    },\n\n    onResizeDebounced: common.debounce(function() { this.onResize(); }, 50),\n\n    /**\n     * Mark objects for saving. The order of these objects cannot change as\n     * the GUI grows. When remembering new objects, append them to the end\n     * of the list.\n     *\n     * @param {...Object} objects\n     * @throws {Error} if not called on a top level GUI.\n     * @instance\n     * @ignore\n     */\n    remember: function() {\n      if (common.isUndefined(SAVE_DIALOGUE)) {\n        SAVE_DIALOGUE = new CenteredDiv();\n        SAVE_DIALOGUE.domElement.innerHTML = saveDialogueContents;\n      }\n\n      if (this.parent) {\n        throw new Error('You can only call remember on a top level GUI.');\n      }\n\n      const _this = this;\n\n      common.each(Array.prototype.slice.call(arguments), function(object) {\n        if (_this.__rememberedObjects.length === 0) {\n          addSaveMenu(_this);\n        }\n        if (_this.__rememberedObjects.indexOf(object) === -1) {\n          _this.__rememberedObjects.push(object);\n        }\n      });\n\n      if (this.autoPlace) {\n        // Set save row width\n        setWidth(this, this.width);\n      }\n    },\n\n    /**\n     * @returns {dat.gui.GUI} the topmost parent GUI of a nested GUI.\n     * @instance\n     */\n    getRoot: function() {\n      let gui = this;\n      while (gui.parent) {\n        gui = gui.parent;\n      }\n      return gui;\n    },\n\n    /**\n     * @returns {Object} a JSON object representing the current state of\n     * this GUI as well as its remembered properties.\n     * @instance\n     */\n    getSaveObject: function() {\n      const toReturn = this.load;\n      toReturn.closed = this.closed;\n\n      // Am I remembering any values?\n      if (this.__rememberedObjects.length > 0) {\n        toReturn.preset = this.preset;\n\n        if (!toReturn.remembered) {\n          toReturn.remembered = {};\n        }\n\n        toReturn.remembered[this.preset] = getCurrentPreset(this);\n      }\n\n      toReturn.folders = {};\n      common.each(this.__folders, function(element, key) {\n        toReturn.folders[key] = element.getSaveObject();\n      });\n\n      return toReturn;\n    },\n\n    save: function() {\n      if (!this.load.remembered) {\n        this.load.remembered = {};\n      }\n\n      this.load.remembered[this.preset] = getCurrentPreset(this);\n      markPresetModified(this, false);\n      this.saveToLocalStorageIfPossible();\n    },\n\n    saveAs: function(presetName) {\n      if (!this.load.remembered) {\n        // Retain default values upon first save\n        this.load.remembered = {};\n        this.load.remembered[DEFAULT_DEFAULT_PRESET_NAME] = getCurrentPreset(this, true);\n      }\n\n      this.load.remembered[presetName] = getCurrentPreset(this);\n      this.preset = presetName;\n      addPresetOption(this, presetName, true);\n      this.saveToLocalStorageIfPossible();\n    },\n\n    revert: function(gui) {\n      common.each(this.__controllers, function(controller) {\n        // Make revert work on Default.\n        if (!this.getRoot().load.remembered) {\n          controller.setValue(controller.initialValue);\n        } else {\n          recallSavedValue(gui || this.getRoot(), controller);\n        }\n\n        // fire onFinishChange callback\n        if (controller.__onFinishChange) {\n          controller.__onFinishChange.call(controller, controller.getValue());\n        }\n      }, this);\n\n      common.each(this.__folders, function(folder) {\n        folder.revert(folder);\n      });\n\n      if (!gui) {\n        markPresetModified(this.getRoot(), false);\n      }\n    },\n\n    listen: function(controller) {\n      const init = this.__listening.length === 0;\n      this.__listening.push(controller);\n      if (init) {\n        updateDisplays(this.__listening);\n      }\n    },\n\n    updateDisplay: function() {\n      common.each(this.__controllers, function(controller) {\n        controller.updateDisplay();\n      });\n      common.each(this.__folders, function(folder) {\n        folder.updateDisplay();\n      });\n    }\n  }\n);\n\n/**\n * Add a row to the end of the GUI or before another row.\n *\n * @param gui\n * @param [newDom] If specified, inserts the dom content in the new row\n * @param [liBefore] If specified, places the new row before another row\n *\n * @ignore\n */\nfunction addRow(gui, newDom, liBefore) {\n  const li = document.createElement('li');\n  if (newDom) {\n    li.appendChild(newDom);\n  }\n\n  if (liBefore) {\n    gui.__ul.insertBefore(li, liBefore);\n  } else {\n    gui.__ul.appendChild(li);\n  }\n  gui.onResize();\n  return li;\n}\n\nfunction removeListeners(gui) {\n  dom.unbind(window, 'resize', gui.__resizeHandler);\n\n  if (gui.saveToLocalStorageIfPossible) {\n    dom.unbind(window, 'unload', gui.saveToLocalStorageIfPossible);\n  }\n}\n\nfunction markPresetModified(gui, modified) {\n  const opt = gui.__preset_select[gui.__preset_select.selectedIndex];\n\n  if (modified) {\n    opt.innerHTML = opt.value + '*';\n  } else {\n    opt.innerHTML = opt.value;\n  }\n}\n\nfunction augmentController(gui, li, controller) {\n  controller.__li = li;\n  controller.__gui = gui;\n\n  common.extend(controller, /** @lends Controller.prototype */ {\n    /**\n     * @param  {Array|Object} options\n     * @return {Controller}\n     */\n    options: function(options) {\n      if (arguments.length > 1) {\n        const nextSibling = controller.__li.nextElementSibling;\n        controller.remove();\n\n        return add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: nextSibling,\n            factoryArgs: [common.toArray(arguments)]\n          }\n        );\n      }\n\n      if (common.isArray(options) || common.isObject(options)) {\n        const nextSibling = controller.__li.nextElementSibling;\n        controller.remove();\n\n        return add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: nextSibling,\n            factoryArgs: [options]\n          }\n        );\n      }\n    },\n\n    /**\n     * Sets the name of the controller.\n     * @param  {string} name\n     * @return {Controller}\n     */\n    name: function(name) {\n      controller.__li.firstElementChild.firstElementChild.innerHTML = name;\n      return controller;\n    },\n\n    /**\n     * Sets controller to listen for changes on its underlying object.\n     * @return {Controller}\n     */\n    listen: function() {\n      controller.__gui.listen(controller);\n      return controller;\n    },\n\n    /**\n     * Removes the controller from its parent GUI.\n     * @return {Controller}\n     */\n    remove: function() {\n      controller.__gui.remove(controller);\n      return controller;\n    }\n  });\n\n  // All sliders should be accompanied by a box.\n  if (controller instanceof NumberControllerSlider) {\n    const box = new NumberControllerBox(controller.object, controller.property,\n      { min: controller.__min, max: controller.__max, step: controller.__step });\n\n    common.each(['updateDisplay', 'onChange', 'onFinishChange', 'step', 'min', 'max'], function(method) {\n      const pc = controller[method];\n      const pb = box[method];\n      controller[method] = box[method] = function() {\n        const args = Array.prototype.slice.call(arguments);\n        pb.apply(box, args);\n        return pc.apply(controller, args);\n      };\n    });\n\n    dom.addClass(li, 'has-slider');\n    controller.domElement.insertBefore(box.domElement, controller.domElement.firstElementChild);\n  } else if (controller instanceof NumberControllerBox) {\n    const r = function(returned) {\n      // Have we defined both boundaries?\n      if (common.isNumber(controller.__min) && common.isNumber(controller.__max)) {\n        // Well, then lets just replace this with a slider.\n\n        // lets remember if the old controller had a specific name or was listening\n        const oldName = controller.__li.firstElementChild.firstElementChild.innerHTML;\n        const wasListening = controller.__gui.__listening.indexOf(controller) > -1;\n\n        controller.remove();\n        const newController = add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: controller.__li.nextElementSibling,\n            factoryArgs: [controller.__min, controller.__max, controller.__step]\n          });\n\n        newController.name(oldName);\n        if (wasListening) newController.listen();\n\n        return newController;\n      }\n\n      return returned;\n    };\n\n    controller.min = common.compose(r, controller.min);\n    controller.max = common.compose(r, controller.max);\n  } else if (controller instanceof BooleanController) {\n    dom.bind(li, 'click', function() {\n      dom.fakeEvent(controller.__checkbox, 'click');\n    });\n\n    dom.bind(controller.__checkbox, 'click', function(e) {\n      e.stopPropagation(); // Prevents double-toggle\n    });\n  } else if (controller instanceof FunctionController) {\n    dom.bind(li, 'click', function() {\n      dom.fakeEvent(controller.__button, 'click');\n    });\n\n    dom.bind(li, 'mouseover', function() {\n      dom.addClass(controller.__button, 'hover');\n    });\n\n    dom.bind(li, 'mouseout', function() {\n      dom.removeClass(controller.__button, 'hover');\n    });\n  } else if (controller instanceof ColorController) {\n    dom.addClass(li, 'color');\n    controller.updateDisplay = common.compose(function(val) {\n      li.style.borderLeftColor = controller.__color.toString();\n      return val;\n    }, controller.updateDisplay);\n\n    controller.updateDisplay();\n  }\n\n  controller.setValue = common.compose(function(val) {\n    if (gui.getRoot().__preset_select && controller.isModified()) {\n      markPresetModified(gui.getRoot(), true);\n    }\n\n    return val;\n  }, controller.setValue);\n}\n\nfunction recallSavedValue(gui, controller) {\n  // Find the topmost GUI, that's where remembered objects live.\n  const root = gui.getRoot();\n\n  // Does the object we're controlling match anything we've been told to\n  // remember?\n  const matchedIndex = root.__rememberedObjects.indexOf(controller.object);\n\n  // Why yes, it does!\n  if (matchedIndex !== -1) {\n    // Let me fetch a map of controllers for thcommon.isObject.\n    let controllerMap = root.__rememberedObjectIndecesToControllers[matchedIndex];\n\n    // Ohp, I believe this is the first controller we've created for this\n    // object. Lets make the map fresh.\n    if (controllerMap === undefined) {\n      controllerMap = {};\n      root.__rememberedObjectIndecesToControllers[matchedIndex] =\n        controllerMap;\n    }\n\n    // Keep track of this controller\n    controllerMap[controller.property] = controller;\n\n    // Okay, now have we saved any values for this controller?\n    if (root.load && root.load.remembered) {\n      const presetMap = root.load.remembered;\n\n      // Which preset are we trying to load?\n      let preset;\n\n      if (presetMap[gui.preset]) {\n        preset = presetMap[gui.preset];\n      } else if (presetMap[DEFAULT_DEFAULT_PRESET_NAME]) {\n        // Uhh, you can have the default instead?\n        preset = presetMap[DEFAULT_DEFAULT_PRESET_NAME];\n      } else {\n        // Nada.\n        return;\n      }\n\n      // Did the loaded object remember thcommon.isObject? &&  Did we remember this particular property?\n      if (preset[matchedIndex] && preset[matchedIndex][controller.property] !== undefined) {\n        // We did remember something for this guy ...\n        const value = preset[matchedIndex][controller.property];\n\n        // And that's what it is.\n        controller.initialValue = value;\n        controller.setValue(value);\n      }\n    }\n  }\n}\n\nfunction add(gui, object, property, params) {\n  if (object[property] === undefined) {\n    throw new Error(`Object \"${object}\" has no property \"${property}\"`);\n  }\n\n  let controller;\n\n  if (params.color) {\n    controller = new ColorController(object, property);\n  } else {\n    const factoryArgs = [object, property].concat(params.factoryArgs);\n    controller = ControllerFactory.apply(gui, factoryArgs);\n  }\n\n  if (params.before instanceof Controller) {\n    params.before = params.before.__li;\n  }\n\n  recallSavedValue(gui, controller);\n\n  dom.addClass(controller.domElement, 'c');\n\n  const name = document.createElement('span');\n  dom.addClass(name, 'property-name');\n  name.innerHTML = controller.property;\n\n  const container = document.createElement('div');\n  container.appendChild(name);\n  container.appendChild(controller.domElement);\n\n  const li = addRow(gui, container, params.before);\n\n  dom.addClass(li, GUI.CLASS_CONTROLLER_ROW);\n  if (controller instanceof ColorController) {\n    dom.addClass(li, 'color');\n  } else {\n    dom.addClass(li, typeof controller.getValue());\n  }\n\n  augmentController(gui, li, controller);\n\n  gui.__controllers.push(controller);\n\n  return controller;\n}\n\nfunction getLocalStorageHash(gui, key) {\n  // TODO how does this deal with multiple GUI's?\n  return document.location.href + '.' + key;\n}\n\nfunction addPresetOption(gui, name, setSelected) {\n  const opt = document.createElement('option');\n  opt.innerHTML = name;\n  opt.value = name;\n  gui.__preset_select.appendChild(opt);\n  if (setSelected) {\n    gui.__preset_select.selectedIndex = gui.__preset_select.length - 1;\n  }\n}\n\nfunction showHideExplain(gui, explain) {\n  explain.style.display = gui.useLocalStorage ? 'block' : 'none';\n}\n\nfunction addSaveMenu(gui) {\n  const div = gui.__save_row = document.createElement('li');\n\n  dom.addClass(gui.domElement, 'has-save');\n\n  gui.__ul.insertBefore(div, gui.__ul.firstChild);\n\n  dom.addClass(div, 'save-row');\n\n  const gears = document.createElement('span');\n  gears.innerHTML = '&nbsp;';\n  dom.addClass(gears, 'button gears');\n\n  // TODO replace with FunctionController\n  const button = document.createElement('span');\n  button.innerHTML = 'Save';\n  dom.addClass(button, 'button');\n  dom.addClass(button, 'save');\n\n  const button2 = document.createElement('span');\n  button2.innerHTML = 'New';\n  dom.addClass(button2, 'button');\n  dom.addClass(button2, 'save-as');\n\n  const button3 = document.createElement('span');\n  button3.innerHTML = 'Revert';\n  dom.addClass(button3, 'button');\n  dom.addClass(button3, 'revert');\n\n  const select = gui.__preset_select = document.createElement('select');\n\n  if (gui.load && gui.load.remembered) {\n    common.each(gui.load.remembered, function(value, key) {\n      addPresetOption(gui, key, key === gui.preset);\n    });\n  } else {\n    addPresetOption(gui, DEFAULT_DEFAULT_PRESET_NAME, false);\n  }\n\n  dom.bind(select, 'change', function() {\n    for (let index = 0; index < gui.__preset_select.length; index++) {\n      gui.__preset_select[index].innerHTML = gui.__preset_select[index].value;\n    }\n\n    gui.preset = this.value;\n  });\n\n  div.appendChild(select);\n  div.appendChild(gears);\n  div.appendChild(button);\n  div.appendChild(button2);\n  div.appendChild(button3);\n\n  if (SUPPORTS_LOCAL_STORAGE) {\n    const explain = document.getElementById('dg-local-explain');\n    const localStorageCheckBox = document.getElementById('dg-local-storage');\n    const saveLocally = document.getElementById('dg-save-locally');\n\n    saveLocally.style.display = 'block';\n\n    if (localStorage.getItem(getLocalStorageHash(gui, 'isLocal')) === 'true') {\n      localStorageCheckBox.setAttribute('checked', 'checked');\n    }\n\n    showHideExplain(gui, explain);\n\n    // TODO: Use a boolean controller, fool!\n    dom.bind(localStorageCheckBox, 'change', function() {\n      gui.useLocalStorage = !gui.useLocalStorage;\n      showHideExplain(gui, explain);\n    });\n  }\n\n  const newConstructorTextArea = document.getElementById('dg-new-constructor');\n\n  dom.bind(newConstructorTextArea, 'keydown', function(e) {\n    if (e.metaKey && (e.which === 67 || e.keyCode === 67)) {\n      SAVE_DIALOGUE.hide();\n    }\n  });\n\n  dom.bind(gears, 'click', function() {\n    newConstructorTextArea.innerHTML = JSON.stringify(gui.getSaveObject(), undefined, 2);\n    SAVE_DIALOGUE.show();\n    newConstructorTextArea.focus();\n    newConstructorTextArea.select();\n  });\n\n  dom.bind(button, 'click', function() {\n    gui.save();\n  });\n\n  dom.bind(button2, 'click', function() {\n    const presetName = prompt('Enter a new preset name.');\n    if (presetName) {\n      gui.saveAs(presetName);\n    }\n  });\n\n  dom.bind(button3, 'click', function() {\n    gui.revert();\n  });\n\n  // div.appendChild(button2);\n}\n\nfunction addResizeHandle(gui) {\n  let pmouseX;\n\n  gui.__resize_handle = document.createElement('div');\n\n  common.extend(gui.__resize_handle.style, {\n\n    width: '6px',\n    marginLeft: '-3px',\n    height: '200px',\n    cursor: 'ew-resize',\n    position: 'absolute'\n    // border: '1px solid blue'\n\n  });\n\n  function drag(e) {\n    e.preventDefault();\n\n    gui.width += pmouseX - e.clientX;\n    gui.onResize();\n    pmouseX = e.clientX;\n\n    return false;\n  }\n\n  function dragStop() {\n    dom.removeClass(gui.__closeButton, GUI.CLASS_DRAG);\n    dom.unbind(window, 'mousemove', drag);\n    dom.unbind(window, 'mouseup', dragStop);\n  }\n\n  function dragStart(e) {\n    e.preventDefault();\n\n    pmouseX = e.clientX;\n\n    dom.addClass(gui.__closeButton, GUI.CLASS_DRAG);\n    dom.bind(window, 'mousemove', drag);\n    dom.bind(window, 'mouseup', dragStop);\n\n    return false;\n  }\n\n  dom.bind(gui.__resize_handle, 'mousedown', dragStart);\n  dom.bind(gui.__closeButton, 'mousedown', dragStart);\n\n  gui.domElement.insertBefore(gui.__resize_handle, gui.domElement.firstElementChild);\n}\n\nfunction setWidth(gui, w) {\n  gui.domElement.style.width = w + 'px';\n  // Auto placed save-rows are position fixed, so we have to\n  // set the width manually if we want it to bleed to the edge\n  if (gui.__save_row && gui.autoPlace) {\n    gui.__save_row.style.width = w + 'px';\n  }\n  if (gui.__closeButton) {\n    gui.__closeButton.style.width = w + 'px';\n  }\n}\n\nfunction getCurrentPreset(gui, useInitialValues) {\n  const toReturn = {};\n\n  // For each object I'm remembering\n  common.each(gui.__rememberedObjects, function(val, index) {\n    const savedValues = {};\n\n    // The controllers I've made for thcommon.isObject by property\n    const controllerMap =\n      gui.__rememberedObjectIndecesToControllers[index];\n\n    // Remember each value for each property\n    common.each(controllerMap, function(controller, property) {\n      savedValues[property] = useInitialValues ? controller.initialValue : controller.getValue();\n    });\n\n    // Save the values for thcommon.isObject\n    toReturn[index] = savedValues;\n  });\n\n  return toReturn;\n}\n\nfunction setPresetSelectIndex(gui) {\n  for (let index = 0; index < gui.__preset_select.length; index++) {\n    if (gui.__preset_select[index].value === gui.preset) {\n      gui.__preset_select.selectedIndex = index;\n    }\n  }\n}\n\nfunction updateDisplays(controllerArray) {\n  if (controllerArray.length !== 0) {\n    requestAnimationFrame.call(window, function() {\n      updateDisplays(controllerArray);\n    });\n  }\n\n  common.each(controllerArray, function(c) {\n    c.updateDisplay();\n  });\n}\n\nexport default GUI;\n", "/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Color from './color/Color';\nimport math from './color/math';\nimport interpret from './color/interpret';\n\nimport Controller from './controllers/Controller';\nimport BooleanController from './controllers/BooleanController';\nimport OptionController from './controllers/OptionController';\nimport StringController from './controllers/StringController';\nimport NumberController from './controllers/NumberController';\nimport NumberControllerBox from './controllers/NumberControllerBox';\nimport NumberControllerSlider from './controllers/NumberControllerSlider';\nimport FunctionController from './controllers/FunctionController';\nimport ColorController from './controllers/ColorController';\n\nimport domImport from './dom/dom';\nimport GUIImport from './gui/GUI';\n\nexport const color = {\n  Color: Color,\n  math: math,\n  interpret: interpret\n};\n\nexport const controllers = {\n  Controller: Controller,\n  BooleanController: BooleanController,\n  OptionController: OptionController,\n  StringController: StringController,\n  NumberController: NumberController,\n  NumberControllerBox: NumberControllerBox,\n  NumberControllerSlider: NumberControllerSlider,\n  FunctionController: FunctionController,\n  ColorController: ColorController\n};\n\nexport const dom = { dom: domImport };\n\nexport const gui = { GUI: GUIImport };\n\nexport const GUI = GUIImport;\n\nexport default {\n  color,\n  controllers,\n  dom,\n  gui,\n  GUI\n};\n", "import * as THREE from 'three'\n\n//implement other types when needed (less to refactor while figuring out design)\nexport type Numeric = number | THREE.Vector2; // | THREE.Vector3 | THREE.Vector4;\n//ways of moving:\n//fixed value, no gui...\n//via slider\n//constant direction (wrap)\n//ping-pong\n//noise\n//smooth oscillation\n//shaped oscillation\n// see also THREE.KeyframeTrack et al\n\nexport enum MovementType {\n    //consider adding more options as above, for now want a way of conveying that some uniforms\n    //are fixed part of system, e.g. only internal to renderer rather than part of model.\n    Fixed, Modulatable \n}\n\n//add an optional neutral value to reset to? (eg gain = 0.5)\nexport interface Tweakable<T extends Numeric> {\n    name?: string,\n    value: T,\n    min?: number,\n    max?: number,\n    step?: number,\n    delta?: number,\n    movement?: MovementType,\n    scale?: (T) => T //change to be similar to MuiSlider? but that has a different idea about relation to min&max?\n}\nexport type Uniforms = Record<string, Tweakable<any>>;\n//no such luck\n//function isTweakNum(t: Tweakable<number>) // t.value is number {}\n\n\n\nexport function isNum(v: Numeric) : v is number {\n    return typeof v === \"number\";\n}\nexport function isVec2(v: Numeric) : v is THREE.Vector2 {\n    return (v as THREE.Vector2) !== null;\n}\n/// implement when needed, save refactoring...\n// function isVec3(v: Numeric) : v is THREE.Vector3 {\n//     return (v as THREE.Vector3) !== null;\n// }\n// function isVec4(v: Numeric) : v is THREE.Vector4 {\n//     return (v as THREE.Vector4) !== null;\n// }\n", "/** port used by express server, may want to consider setting this differently */\nexport const host_port = 8321;\n//export const ws_port = 8322;\n\n// addresses of server API calls:\n\n/** GET for requesting that a new renderer output window be created */\nexport const newRenderer = \"/newRenderer\";\n/** POST that a new renderer window has been created, with info about its model */\nexport const rendererStarted = \"/rendererStarted\";\n//TODO SSL.\nexport const websocketURL = \"ws://localhost:\" + host_port;", "/** port used by express server, may want to consider setting this differently */\nexport const host_port = 8321;\n//export const ws_port = 8322;\n\n// addresses of server API calls:\n\n/** GET for requesting that a new renderer output window be created */\nexport const newRenderer = \"/newRenderer\";\n/** POST that a new renderer window has been created, with info about its model */\nexport const rendererStarted = \"/rendererStarted\";\n//TODO SSL.\nexport const websocketURL = \"ws://localhost:\" + host_port;", "/**\n * finding an osc library that will sensibly load as a module working both in browser & node/electron\n * without any peculiar build requirements (although maybe there are other reasons for electron-rebuild\n * being useful if there are other native libraries of use)\n * preferably with TS types and without being horribly inefficient etc etc...\n * seems not to be working out for me today.\n * \n * In my other JS work where I've used OSC heavily, I've used different libraries in client & server,\n * patched around bits for extra efficiency, used <script> instead of import etc...\n * \n * For now, if everything is in JS land anyway, I don't have much need for OSC.  I may as well use JSON...\n * which is more idiomatic and doesn't require any extra library.  So maybe this file is poorly named.\n * The idea of it is (approximately) to provide an abstraction for encoding & decoding messages where OSC\n * is an internal implementation detail.  So who cares.\n * Later for integration with SuperCollider etc... is a different story, but totally irrelevant for now.\n */\n//import * as osc from 'osc-min'\n//import * as osc from '@supercollider/osc'\n//import * as osc from 'osc'\nimport KaleidModel from './KaleidModel';\n\n//How shall we specify our message schema?\n//It should definitely have \"id\" for routing.\n//structured address vs SuperCollider-style command name & alternating name / value array?\n//{address: `/${id}/set/tweakables/${name}`, args: [value]} //difficult to update many simultaneously\n//{address: '/set', args: [id, `tweakables/${name}`, value, `tweakables/${name2}`, value2]}\n//// going with scsynth-ish style (may be nice to also support other for user-friendliness)\n\n//trying to establish a common place this stuff passes through as well, although...\n//we want to hide things like object traversal, but needs of different parts of the system will be different.\n\n//Do I want this? Should it be here on in constants?\nexport enum OscCommandType {\n    Set = \"/set\", Get = \"/get\", RegisterRenderer = \"/register_renderer\", RegisterController = \"/register_controller\"\n}\n\nexport interface OscCommand {\n    cmd: OscCommandType,\n\n}\n\n// function parseMessage(data: Buffer) {\n//     const msg = osc.readPacket(data);\n\n//     // try to conform the message to our spec, and deal with any errors.\n//     // *** \"as\" is not what we want here ***\n//     // I keep expecting it to behave like c#\n\n//     const addr = msg.address as OscCommandType;\n//     const args = msg.args;\n//     const id = args[0] as number;\n    \n//     const vals: {path: string[], value: any}[] = []\n//     for (let i=1; i<args.length; i+=2) {\n//         vals.push({path: (args[i] as string).split('/'), value: args[i+1]});\n//     }\n\n//     return {addr, vals};\n// }\n\n// export function applyMessage(data: Buffer, model: KaleidModel) {\n//     const cmd = parseMessage(data);\n//     if (cmd.addr === OscCommandType.Set) {\n//         cmd.vals.forEach(v => {\n//             //just because Three uniforms have all these {value: v} objects everywhere\n//             //doesn't mean we have to.\n//             //we can have our interface with setters that relate to updating uniforms[name].value if relevant\n//             //or doing different things.\n//             //////first things first:::: establish the connection.\n//         });\n//     }\n// }\n\n\nexport function makeRegisterRendererMessage(id: number) {\n    return JSON.stringify({address: OscCommandType.RegisterRenderer, id: id});\n}\nexport function makeRegisterControllerMessage() {\n    return JSON.stringify({address: OscCommandType.RegisterController});\n}\n", "/**\n * (is this the right spec?)\n * \n * The server has a websocket to connect to.  It will take care of deciding which clients to notify of\n * a given event.\n * \n * If the renderer reloads (because of code recompilation), we should have a clear way of dealing with that.\n * \n * The server is probably best-placed to decide which port should be used, \n * and provide this in the initial URL string, such that when we reload no additional logic is required \n * to keep it on the same port.\n * \n * We could probably also add support for renderers started without this config (in web browser rather than\n * launched by Electron) to register themselves, but for now we consider them 'detatched',\n * without ports to the outside world etc.\n * \n */\n\nimport { rendererStarted, host_port, websocketURL } from \"../common/constants\";\nimport KaleidModel from \"../common/KaleidModel\";\nimport { makeRegisterRendererMessage, OscCommandType } from \"../common/osc_util\";\nimport { Numeric, Tweakable } from \"../common/tweakables\";\n\nlet socket = new WebSocket(websocketURL);\n\nasync function setupWebSocket(model: KaleidModel) {\n    //send a message so that our socket is associated with our ID on server.\n    //for now we know that the socket won't be open yet, but this is wrong place.\n    socket.onopen = () => {\n        console.log(`sending WS message to establish this renderer as receiver for id '${model.id}'`);\n        // thinking about not using OSC for now: seem to be having trouble finding a library that just works\n        socket.send(makeRegisterRendererMessage(model.id));\n    }\n}\n\nexport async function init(specs: Tweakable<Numeric>[]) {\n\n    //send a message to the server so that it knows what GUI to show...\n    //only if we have an id to use from query string.\n    //If not, we should still be able to operate as a standalone webpage,\n    //but this scenario is not currently being tested.\n    const params = new URLSearchParams(location.search);\n    if (params.has(\"id\")) {\n        const id = Number.parseInt(params.get(\"id\"));\n        const model: KaleidModel = {\n            id: id,\n            filename: \"todo\",\n            tweakables: specs,\n        }\n    \n        const body = JSON.stringify(model);\n        console.log(`sending ${rendererStarted} ${body}`);\n        fetch(`http://localhost:${host_port}${rendererStarted}`, {\n            method: \"POST\", body: body,\n            headers: {\"Content-Type\": \"application/json\"}\n        });\n        //also we need to be able to listen to tweakables tweaking\n        //as well as filename and whatever else.\n        //... let's have a WebSocket server here for that.\n        setupWebSocket(model);\n    }\n}\n\nsocket.onclose = (ev) => {\n    console.log(`socket closed`);\n}\n\nsocket.onmessage = (ev) => {\n    //How shall we specify our message schema?\n    //It should definitely have \"id\" for routing.\n    //structured address vs SuperCollider-style command name & array?\n    //{address: `/${id}/set/tweakables/${name}`, args: [value]} //difficult to update many simultaneously\n    //{address: '/set', args: [id, `tweakables/${name}`, value, `tweakables/${name2}`, value2]}\n    //const msg = osc.unpackMessage(ev.data);\n    console.log(`message received`);\n    const json = JSON.parse(ev.data as string);\n    if (json.address === OscCommandType.Set) {\n        //!!! do something about it!!!\n        console.log('success(?)!');\n        const model = json.model as KaleidModel;\n        console.log(model.tweakables[0].value);\n    }\n}\n\n\n", "import * as dat from \"dat.gui\"\nimport * as THREE from 'three'\nimport {isNum, isVec2, MovementType, Numeric, Tweakable, Uniforms} from '../common/tweakables'\nimport {rendererStarted, host_port} from '../common/constants'\nimport KaleidModel from '../common/KaleidModel'\nimport { init } from \"./renderer_comms\"\n\nfunction lerp(s, t, a) {\n    if (a<0) return s;\n    if (a>1) return t;\n    return s + a*(t-s);\n}\n\ninterface Lagger<T extends Numeric> {\n    lagTime: number;\n    update(dt: number) : T;\n}\nclass LagNum implements Lagger<number> {\n    lagTime: number;\n    curVal: number;\n    targVal: number;\n    constructor(val: number, lagTime: number) {\n        this.curVal = this.targVal = val;\n        this.lagTime = lagTime;\n    }\n    update(dt: number) {\n        if (dt <= 0) return this.curVal;\n        const a = 1. - Math.pow(0.0001, dt/this.lagTime);\n        return this.curVal = lerp(this.curVal, this.targVal, a);\n    }\n}\nclass LagVec2 implements Lagger<THREE.Vector2> {\n    controlVec: THREE.Vector2;\n    outputVec: THREE.Vector2;\n    lagX: LagNum;\n    lagY: LagNum;\n    private _lagTime: number;\n    constructor(controlVec: THREE.Vector2, lagTime: number) {\n        this.controlVec = controlVec;\n        this.outputVec = controlVec.clone();\n        this.lagX = new LagNum(controlVec.x, lagTime);\n        this.lagY = new LagNum(controlVec.y, lagTime);\n        this._lagTime = lagTime;\n    }\n    update(dt: number) {\n        this.lagX.targVal = this.controlVec.x;\n        this.lagY.targVal = this.controlVec.y;\n        this.outputVec.x = this.lagX.update(dt);\n        this.outputVec.y = this.lagY.update(dt);\n        return this.outputVec;\n    }\n    public get lagTime() {\n        return this._lagTime;\n    }\n    public set lagTime(t: number) {\n        this._lagTime = t;\n        this.lagX.lagTime = t;\n        this.lagY.lagTime = t;\n    }\n}\n\nfunction getLagger(v: Numeric, lagTime: number): Lagger<Numeric> {\n    if (isNum(v)) {\n        return new LagNum(v, lagTime);\n    }\n    if (isVec2(v)) {\n        return new LagVec2(v, lagTime);\n    }\n}\n\n\nconst gui = new dat.GUI();\n//this gui should either not exist on renderer, or be hidden by default...\ngui.hide();\nlet guiHidden = true;\ndocument.onkeypress = (ev) => {\n    if (ev.key === \"/\") {\n        if (guiHidden) gui.show();\n        else gui.hide();\n        guiHidden = !guiHidden;\n    }\n}\n/** \n * Originally a small helper function, this is now serving as the key function to initialize\n * parameters, register with server/gui etc... indeed if it wasn't called, the emerging protocol\n * for what a Renderer needs to do as a bare minimum would not be met.\n */\nexport const makeGUI = (specs: Tweakable<Numeric>[], uniforms:Uniforms = {}) => {\n    specs.forEach(s => s.movement = MovementType.Modulatable);\n    Object.keys(uniforms).forEach(k => uniforms[k].movement = MovementType.Fixed);\n    const parms = new ParamGroup(specs, uniforms);\n    init(specs).then(()=>{});\n    return parms;\n}\n\n\n\nexport class ParamGroup {\n    parms: ShaderParam[] = [];\n    lagTime: number = 1000;\n    constructor(specs: Tweakable<Numeric>[], uniforms:Uniforms = {}) {\n        const parms = this.parms;\n        gui.add(this, 'lagTime', 0, 20000);\n        specs.forEach(s => {\n            //uniforms[s.name] = {value: s.value}\n            const v = s.value;\n            if (v === undefined) return;\n            if (typeof v === \"number\") {\n                const p = new ShaderParam(uniforms, s.name, v, s.min, s.max);\n                parms.push(p);\n                gui.add(p.val, 'targVal', s.min, s.max, s.step).name(s.name);\n            } else if (isVec2(v)) {\n                //make the initial value v passed to ShaderParam contain the 'target' values\n                //to be updated by the GUI, while the actual values passed to uniform will be encapsulated\n                const p = new ShaderParam(uniforms, s.name, v, s.min, s.max);\n                parms.push(p);\n                gui.add(v, 'x', s.min, s.max, s.step).name(s.name + '.x');\n                gui.add(v, 'y', s.min, s.max, s.step).name(s.name + '.y');\n            }\n        });\n    }\n    update(dt: number) {\n        this.parms.forEach(p=>{\n            p.val.lagTime = this.lagTime;\n            p.update(dt);\n        });\n    }\n}\n\nexport class ShaderParam {\n    val: Lagger<Numeric>;\n    name: string;\n    min: number;\n    max: number;\n    uniforms: any; //the structure of which this is a member\n    uniformObj: any; //TODO: type\n    constructor(uniforms, name, init: Numeric = 0.5, min= 0, max= 1, lagTime = 10000) {\n        this.uniforms = uniforms;\n        // if (this.uniforms[name]) this.uniformObj = this.uniforms[name];\n        // else \n        this.uniformObj = this.uniforms[name] = { value: init };\n        this.name = name;\n        this.min = min;\n        this.max = max;\n        this.val = getLagger(init, lagTime); //new LagNumeric<Numeric>(init, lagTime);\n    }\n    update(dt: number) {\n        this.uniformObj.value = this.val.update(dt);\n    }\n}\n", "import * as THREE from 'three'\n\nexport const vidEl = document.getElementById(\"vid1\") as HTMLVideoElement;\nconst vidUrl = \"red.mp4\";\nconsole.log(vidUrl);\nvidEl.src = vidUrl;\nsetTimeout(()=>vidEl.play(), 3000);\nexport const vidTex: THREE.Texture = new THREE.VideoTexture(vidEl);\n\n/** make sure texture settings are not going to force it to be scaled down to POT size before it gets used. */\nfunction setTextureParams(t: THREE.Texture) {\n    t.wrapS = t.wrapT = THREE.ClampToEdgeWrapping;\n    t.minFilter = t.magFilter = THREE.LinearFilter;\n}\n\nsetTextureParams(vidTex);\n\nexport function setup(renderer: THREE.Renderer, uniforms: any) {\n    renderer.domElement.ondragover = e => {\n        e.preventDefault();\n        e.dataTransfer.dropEffect = 'copy';\n    };\n    renderer.domElement.ondrop = e => {\n        e.preventDefault();\n        if (e.dataTransfer.items) {\n            const item = e.dataTransfer.items[0];\n            if (item.kind === 'file') {\n                const t = Date.now();\n                const file = item.getAsFile();\n                const reader = new FileReader();\n                //seems like this will attempt to read entire file, blocking, before continuing...\n                reader.readAsDataURL(file);\n                console.log(`readAsDataURL took ${Date.now() - t}`);\n                reader.onload = readEvent => {\n                    console.log(`onload took ${Date.now() - t}`);\n                    const result = readEvent.target.result as string;\n                    if (file.type.startsWith('video/')) {\n                        vidEl.src = result;\n                        vidEl.onloadeddata = () => {\n                            console.log(`onloadeddata took ${Date.now() - t}`);\n                            vidEl.play();\n                        }\n                    } else if (file.type.startsWith('image/')) {\n                        const t = uniforms.texture1.value = new THREE.TextureLoader().load(readEvent.target.result as string);\n                        setTextureParams(t);\n                    }\n                };\n            }\n        }\n    };\n}\n", "import vs from './shaders/kaleid_vert.glsl'\nimport fs from './shaders/kaleid_frag.glsl'\n\nimport * as THREE from 'three'\nimport * as params from './params'\nimport * as vid from './video_state'\nimport {Uniforms} from '../common/tweakables'\n\nconst scene = new THREE.Scene();\nconst camera = new THREE.OrthographicCamera(0, 1, 1, 0, 0, 10);\ncamera.position.set(0.5, 0.5, -1);\ncamera.lookAt(0.5,0.5,0);\n\nconst renderer = new THREE.WebGLRenderer({\n  antialias: true,\n  alpha: false\n});\nrenderer.setSize(window.innerWidth, window.innerHeight);\ndocument.body.prepend(renderer.domElement);\n\n\nlet w = window.innerWidth, h = window.innerHeight;\n\nconst Vector2 = THREE.Vector2;\nconst uniforms: Uniforms = {\n    'ScreenAspect': {value: w/h},\n    'Leaves': {value: 3},\n    'Angle': {value: 1.05},\n    'OutAngle': {value: 0},\n    'Zoom': {value: 1.3},\n    'MozMix': {value: 1.},\n    'Centre': {value: new Vector2(0.5, 0.5)},\n    'ImageCentre': {value: new Vector2(0.5, 0.)},\n    'UVLimit': {value: new Vector2(1920/2048, 1080/2048)},// vidTex.repeat},\n    'texture1': {value: vid.vidTex},\n    // texture2: {value: vidTex2},\n    // texture3: {value: vidTex3}\n};\n\n//this will also (for the time being) be responsible for reporting that we've started to the server.\nconst parms = params.makeGUI([\n    {name: \"Leaves\", value: 3, min: 1, max: 8, step: 1},\n    {name: \"Angle\", value: 1.05, min: -Math.PI, max: Math.PI},\n    {name: \"AngleGain\", value: 0.5, min: 0, max: 1},\n    {name: \"OutAngle\", value: 0, min: -1, max: 1},\n    {name: \"Zoom\", value: 1.3, min: 0, max: 10},\n    {name: \"KaleidMix\", value: 0.999, min: 0, max: 1},\n    {name: \"Mozaic\", value: 4, min: 1, max: 40},\n    {name: \"MozGain\", value: .5, min: 0, max: 1},\n    {name: \"ContrastPreBias\", value: 0.5, min: 0, max: 1},\n    {name: \"ContrastGain\", value: 0.5, min: 0, max: 1},\n    {name: \"ContrastPostBias\", value: 0.5, min: 0, max: 1},\n    {name: \"SaturationBias\", value: 0.5, min: 0, max: 1},\n    {name: \"SaturationGain\", value: 0.5, min: 0, max: 1},\n    {name: \"ImageCentre\", value: new Vector2(0.5, 0), min: -1, max: 1},\n    {name: \"Centre\", value: new Vector2(0.5, 0.5), min: 0, max: 1},\n    {name: \"Vignette\", value: new Vector2(0.1, 0.1), min: 0, max: 0.2},\n], uniforms);\n\nvid.setup(renderer, uniforms);\n\nconst geo = new THREE.PlaneGeometry(2, 2);\nconst mat = new THREE.ShaderMaterial({vertexShader: vs, fragmentShader: fs, uniforms: uniforms, transparent: true});\nconst mesh = new THREE.Mesh(geo, mat);\nmesh.position.x = 0.5;\nmesh.position.y = 0.5;\n\n//mesh.position.z = 0.5;\n//mesh.updateMatrix();\nscene.add(mesh);\nlet t0 = Date.now();\nfunction animate(time: number) {\n  requestAnimationFrame(animate);\n  //uniforms.iTime.value = Date.now() / 1000;\n  let w = window.innerWidth, h = window.innerHeight;\n  uniforms.ScreenAspect.value = w/h;\n  const img = uniforms.texture1.value;\n\n  uniforms.UVLimit.value = img.repeat;\n  const dt = time - t0;\n  t0 = time;\n//   parms.forEach(p => p.update(dt))\n  parms.update(dt);\n  renderer.render(scene, camera);\n}\nanimate(t0);\nwindow.onresize = _ => {\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    //camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n};\n\n"],
  "mappings": "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",
  "names": []
}
